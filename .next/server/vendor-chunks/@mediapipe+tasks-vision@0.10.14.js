"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@mediapipe+tasks-vision@0.10.14";
exports.ids = ["vendor-chunks/@mediapipe+tasks-vision@0.10.14"];
exports.modules = {

/***/ "(ssr)/./node_modules/.pnpm/@mediapipe+tasks-vision@0.10.14/node_modules/@mediapipe/tasks-vision/vision_bundle.mjs":
/*!*******************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@mediapipe+tasks-vision@0.10.14/node_modules/@mediapipe/tasks-vision/vision_bundle.mjs ***!
  \*******************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DrawingUtils: () => (/* binding */ Na),\n/* harmony export */   FaceDetector: () => (/* binding */ sh),\n/* harmony export */   FaceLandmarker: () => (/* binding */ yh),\n/* harmony export */   FaceStylizer: () => (/* binding */ _h),\n/* harmony export */   FilesetResolver: () => (/* binding */ Xo),\n/* harmony export */   GestureRecognizer: () => (/* binding */ Ah),\n/* harmony export */   HandLandmarker: () => (/* binding */ kh),\n/* harmony export */   HolisticLandmarker: () => (/* binding */ Rh),\n/* harmony export */   ImageClassifier: () => (/* binding */ Mh),\n/* harmony export */   ImageEmbedder: () => (/* binding */ Ph),\n/* harmony export */   ImageSegmenter: () => (/* binding */ Uh),\n/* harmony export */   ImageSegmenterResult: () => (/* binding */ Ch),\n/* harmony export */   InteractiveSegmenter: () => (/* binding */ rc),\n/* harmony export */   InteractiveSegmenterResult: () => (/* binding */ Dh),\n/* harmony export */   MPImage: () => (/* binding */ Ka),\n/* harmony export */   MPMask: () => (/* binding */ Sa),\n/* harmony export */   ObjectDetector: () => (/* binding */ ic),\n/* harmony export */   PoseLandmarker: () => (/* binding */ hc),\n/* harmony export */   VisionTaskRunner: () => (/* binding */ ih)\n/* harmony export */ });\nvar t = \"undefined\" != typeof self ? self : {};\nfunction e(e) {\n    t: {\n        for(var n = [\n            \"CLOSURE_FLAGS\"\n        ], r = t, i = 0; i < n.length; i++)if (null == (r = r[n[i]])) {\n            n = null;\n            break t;\n        }\n        n = r;\n    }\n    return null != (e = n && n[e]) && e;\n}\nfunction n() {\n    throw Error(\"Invalid UTF8\");\n}\nfunction r(t, e) {\n    return e = String.fromCharCode.apply(null, e), null == t ? e : t + e;\n}\nlet i, s;\nconst o = \"undefined\" != typeof TextDecoder;\nlet a;\nconst h = \"undefined\" != typeof TextEncoder;\nfunction c(t) {\n    if (h) t = (a ||= new TextEncoder).encode(t);\n    else {\n        let n = 0;\n        const r = new Uint8Array(3 * t.length);\n        for(let i = 0; i < t.length; i++){\n            var e = t.charCodeAt(i);\n            if (128 > e) r[n++] = e;\n            else {\n                if (2048 > e) r[n++] = e >> 6 | 192;\n                else {\n                    if (55296 <= e && 57343 >= e) {\n                        if (56319 >= e && i < t.length) {\n                            const s = t.charCodeAt(++i);\n                            if (56320 <= s && 57343 >= s) {\n                                e = 1024 * (e - 55296) + s - 56320 + 65536, r[n++] = e >> 18 | 240, r[n++] = e >> 12 & 63 | 128, r[n++] = e >> 6 & 63 | 128, r[n++] = 63 & e | 128;\n                                continue;\n                            }\n                            i--;\n                        }\n                        e = 65533;\n                    }\n                    r[n++] = e >> 12 | 224, r[n++] = e >> 6 & 63 | 128;\n                }\n                r[n++] = 63 & e | 128;\n            }\n        }\n        t = n === r.length ? r : r.subarray(0, n);\n    }\n    return t;\n}\nvar u, l = e(610401301), d = e(188588736);\nconst f = t.navigator;\nfunction p(t) {\n    return !!l && !!u && u.brands.some(({ brand: e })=>e && -1 != e.indexOf(t));\n}\nfunction g(e) {\n    var n;\n    return (n = t.navigator) && (n = n.userAgent) || (n = \"\"), -1 != n.indexOf(e);\n}\nfunction m() {\n    return !!l && !!u && 0 < u.brands.length;\n}\nfunction y() {\n    return m() ? p(\"Chromium\") : (g(\"Chrome\") || g(\"CriOS\")) && !(!m() && g(\"Edge\")) || g(\"Silk\");\n}\nfunction _(t) {\n    return _[\" \"](t), t;\n}\nu = f && f.userAgentData || null, _[\" \"] = function() {};\nvar v = !m() && (g(\"Trident\") || g(\"MSIE\"));\n!g(\"Android\") || y(), y(), g(\"Safari\") && (y() || !m() && g(\"Coast\") || !m() && g(\"Opera\") || !m() && g(\"Edge\") || (m() ? p(\"Microsoft Edge\") : g(\"Edg/\")) || m() && p(\"Opera\"));\nvar E = {}, w = null;\nfunction T(t) {\n    var e = t.length, n = 3 * e / 4;\n    n % 3 ? n = Math.floor(n) : -1 != \"=.\".indexOf(t[e - 1]) && (n = -1 != \"=.\".indexOf(t[e - 2]) ? n - 2 : n - 1);\n    var r = new Uint8Array(n), i = 0;\n    return function(t, e) {\n        function n(e) {\n            for(; r < t.length;){\n                var n = t.charAt(r++), i = w[n];\n                if (null != i) return i;\n                if (!/^[\\s\\xa0]*$/.test(n)) throw Error(\"Unknown base64 encoding at char: \" + n);\n            }\n            return e;\n        }\n        A();\n        for(var r = 0;;){\n            var i = n(-1), s = n(0), o = n(64), a = n(64);\n            if (64 === a && -1 === i) break;\n            e(i << 2 | s >> 4), 64 != o && (e(s << 4 & 240 | o >> 2), 64 != a && e(o << 6 & 192 | a));\n        }\n    }(t, function(t) {\n        r[i++] = t;\n    }), i !== n ? r.subarray(0, i) : r;\n}\nfunction A() {\n    if (!w) {\n        w = {};\n        for(var t = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\".split(\"\"), e = [\n            \"+/=\",\n            \"+/\",\n            \"-_=\",\n            \"-_.\",\n            \"-_\"\n        ], n = 0; 5 > n; n++){\n            var r = t.concat(e[n].split(\"\"));\n            E[n] = r;\n            for(var i = 0; i < r.length; i++){\n                var s = r[i];\n                void 0 === w[s] && (w[s] = i);\n            }\n        }\n    }\n}\nvar b = \"undefined\" != typeof Uint8Array, k = !v && \"function\" == typeof btoa;\nfunction x(t) {\n    if (!k) {\n        var e;\n        void 0 === e && (e = 0), A(), e = E[e];\n        var n = Array(Math.floor(t.length / 3)), r = e[64] || \"\";\n        let h = 0, c = 0;\n        for(; h < t.length - 2; h += 3){\n            var i = t[h], s = t[h + 1], o = t[h + 2], a = e[i >> 2];\n            i = e[(3 & i) << 4 | s >> 4], s = e[(15 & s) << 2 | o >> 6], o = e[63 & o], n[c++] = a + i + s + o;\n        }\n        switch(a = 0, o = r, t.length - h){\n            case 2:\n                o = e[(15 & (a = t[h + 1])) << 2] || r;\n            case 1:\n                t = t[h], n[c] = e[t >> 2] + e[(3 & t) << 4 | a >> 4] + o + r;\n        }\n        return n.join(\"\");\n    }\n    for(e = \"\", n = 0, r = t.length - 10240; n < r;)e += String.fromCharCode.apply(null, t.subarray(n, n += 10240));\n    return e += String.fromCharCode.apply(null, n ? t.subarray(n) : t), btoa(e);\n}\nconst S = /[-_.]/g, L = {\n    \"-\": \"+\",\n    _: \"/\",\n    \".\": \"=\"\n};\nfunction F(t) {\n    return L[t] || \"\";\n}\nfunction R(t) {\n    if (!k) return T(t);\n    S.test(t) && (t = t.replace(S, F)), t = atob(t);\n    const e = new Uint8Array(t.length);\n    for(let n = 0; n < t.length; n++)e[n] = t.charCodeAt(n);\n    return e;\n}\nfunction M(t) {\n    return b && null != t && t instanceof Uint8Array;\n}\nlet P;\nfunction C() {\n    return P ||= new Uint8Array(0);\n}\nvar O = {};\nlet I;\nfunction U(t) {\n    if (t !== O) throw Error(\"illegal external caller\");\n}\nfunction D() {\n    return I ||= new B(null, O);\n}\nfunction N(t) {\n    U(O);\n    var e = t.g;\n    return null == (e = null == e || M(e) ? e : \"string\" == typeof e ? R(e) : null) ? e : t.g = e;\n}\nvar B = class {\n    constructor(t, e){\n        if (U(e), this.g = t, null != t && 0 === t.length) throw Error(\"ByteString should be constructed with non-empty values\");\n    }\n    h() {\n        const t = N(this);\n        return t ? new Uint8Array(t) : C();\n    }\n};\nfunction G(t, e) {\n    return Error(`Invalid wire type: ${t} (at position ${e})`);\n}\nfunction j() {\n    return Error(\"Failed to read varint, encoding is invalid.\");\n}\nfunction V(t, e) {\n    return Error(`Tried to read past the end of the data ${e} > ${t}`);\n}\nfunction X(t) {\n    if (\"string\" == typeof t) return {\n        buffer: R(t),\n        P: !1\n    };\n    if (Array.isArray(t)) return {\n        buffer: new Uint8Array(t),\n        P: !1\n    };\n    if (t.constructor === Uint8Array) return {\n        buffer: t,\n        P: !1\n    };\n    if (t.constructor === ArrayBuffer) return {\n        buffer: new Uint8Array(t),\n        P: !1\n    };\n    if (t.constructor === B) return {\n        buffer: N(t) || C(),\n        P: !0\n    };\n    if (t instanceof Uint8Array) return {\n        buffer: new Uint8Array(t.buffer, t.byteOffset, t.byteLength),\n        P: !1\n    };\n    throw Error(\"Type not convertible to a Uint8Array, expected a Uint8Array, an ArrayBuffer, a base64 encoded string, a ByteString or an Array of numbers\");\n}\nfunction H() {\n    return \"function\" == typeof BigInt;\n}\nconst W = \"function\" == typeof Uint8Array.prototype.slice;\nlet z, K = 0, Y = 0;\nfunction $(t) {\n    const e = 0 > t;\n    let n = (t = Math.abs(t)) >>> 0;\n    if (t = Math.floor((t - n) / 4294967296), e) {\n        const [e, r] = rt(n, t);\n        t = r, n = e;\n    }\n    K = n >>> 0, Y = t >>> 0;\n}\nfunction q(t) {\n    const e = z ||= new DataView(new ArrayBuffer(8));\n    e.setFloat32(0, +t, !0), Y = 0, K = e.getUint32(0, !0);\n}\nfunction J(t, e) {\n    return 4294967296 * e + (t >>> 0);\n}\nfunction Z(t, e) {\n    const n = 2147483648 & e;\n    return n && (e = ~e >>> 0, 0 == (t = 1 + ~t >>> 0) && (e = e + 1 >>> 0)), t = J(t, e), n ? -t : t;\n}\nfunction Q(t, e) {\n    if (t >>>= 0, 2097151 >= (e >>>= 0)) var n = \"\" + (4294967296 * e + t);\n    else H() ? n = \"\" + (BigInt(e) << BigInt(32) | BigInt(t)) : (t = (16777215 & t) + 6777216 * (n = 16777215 & (t >>> 24 | e << 8)) + 6710656 * (e = e >> 16 & 65535), n += 8147497 * e, e *= 2, 1e7 <= t && (n += Math.floor(t / 1e7), t %= 1e7), 1e7 <= n && (e += Math.floor(n / 1e7), n %= 1e7), n = e + tt(n) + tt(t));\n    return n;\n}\nfunction tt(t) {\n    return t = String(t), \"0000000\".slice(t.length) + t;\n}\nfunction et() {\n    var t = K, e = Y;\n    if (2147483648 & e) if (H()) t = \"\" + (BigInt(0 | e) << BigInt(32) | BigInt(t >>> 0));\n    else {\n        const [n, r] = rt(t, e);\n        t = \"-\" + Q(n, r);\n    }\n    else t = Q(t, e);\n    return t;\n}\nfunction nt(t) {\n    if (16 > t.length) $(Number(t));\n    else if (H()) t = BigInt(t), K = Number(t & BigInt(4294967295)) >>> 0, Y = Number(t >> BigInt(32) & BigInt(4294967295));\n    else {\n        const e = +(\"-\" === t[0]);\n        Y = K = 0;\n        const n = t.length;\n        for(let r = e, i = (n - e) % 6 + e; i <= n; r = i, i += 6){\n            const e = Number(t.slice(r, i));\n            Y *= 1e6, K = 1e6 * K + e, 4294967296 <= K && (Y += Math.trunc(K / 4294967296), Y >>>= 0, K >>>= 0);\n        }\n        if (e) {\n            const [t, e] = rt(K, Y);\n            K = t, Y = e;\n        }\n    }\n}\nfunction rt(t, e) {\n    return e = ~e, t ? t = 1 + ~t : e += 1, [\n        t,\n        e\n    ];\n}\nfunction it(t, e) {\n    let n, r = 0, i = 0, s = 0;\n    const o = t.h;\n    let a = t.g;\n    do {\n        n = o[a++], r |= (127 & n) << s, s += 7;\n    }while (32 > s && 128 & n);\n    for(32 < s && (i |= (127 & n) >> 4), s = 3; 32 > s && 128 & n; s += 7)n = o[a++], i |= (127 & n) << s;\n    if (dt(t, a), 128 > n) return e(r >>> 0, i >>> 0);\n    throw j();\n}\nfunction st(t) {\n    let e = 0, n = t.g;\n    const r = n + 10, i = t.h;\n    for(; n < r;){\n        const r = i[n++];\n        if (e |= r, 0 == (128 & r)) return dt(t, n), !!(127 & e);\n    }\n    throw j();\n}\nfunction ot(t) {\n    const e = t.h;\n    let n = t.g, r = e[n++], i = 127 & r;\n    if (128 & r && (r = e[n++], i |= (127 & r) << 7, 128 & r && (r = e[n++], i |= (127 & r) << 14, 128 & r && (r = e[n++], i |= (127 & r) << 21, 128 & r && (r = e[n++], i |= r << 28, 128 & r && 128 & e[n++] && 128 & e[n++] && 128 & e[n++] && 128 & e[n++] && 128 & e[n++]))))) throw j();\n    return dt(t, n), i;\n}\nfunction at(t) {\n    return ot(t) >>> 0;\n}\nfunction ht(t) {\n    var e = t.h;\n    const n = t.g, r = e[n], i = e[n + 1], s = e[n + 2];\n    return e = e[n + 3], dt(t, t.g + 4), (r << 0 | i << 8 | s << 16 | e << 24) >>> 0;\n}\nfunction ct(t) {\n    var e = ht(t);\n    t = 2 * (e >> 31) + 1;\n    const n = e >>> 23 & 255;\n    return e &= 8388607, 255 == n ? e ? NaN : 1 / 0 * t : 0 == n ? t * Math.pow(2, -149) * e : t * Math.pow(2, n - 150) * (e + Math.pow(2, 23));\n}\nfunction ut(t) {\n    return ot(t);\n}\nfunction lt(t, e, { ca: n = !1 } = {}) {\n    t.ca = n, e && (e = X(e), t.h = e.buffer, t.m = e.P, t.j = 0, t.l = t.h.length, t.g = t.j);\n}\nfunction dt(t, e) {\n    if (t.g = e, e > t.l) throw V(t.l, e);\n}\nfunction ft(t, e) {\n    if (0 > e) throw Error(`Tried to read a negative byte length: ${e}`);\n    const n = t.g, r = n + e;\n    if (r > t.l) throw V(e, t.l - n);\n    return t.g = r, n;\n}\nfunction pt(t, e) {\n    if (0 == e) return D();\n    var n = ft(t, e);\n    return t.ca && t.m ? n = t.h.subarray(n, n + e) : (t = t.h, n = n === (e = n + e) ? C() : W ? t.slice(n, e) : new Uint8Array(t.subarray(n, e))), 0 == n.length ? D() : new B(n, O);\n}\nvar gt = [];\nfunction mt(t) {\n    var e = t.g;\n    if (e.g == e.l) return !1;\n    t.l = t.g.g;\n    var n = at(t.g);\n    if (e = n >>> 3, !(0 <= (n &= 7) && 5 >= n)) throw G(n, t.l);\n    if (1 > e) throw Error(`Invalid field number: ${e} (at position ${t.l})`);\n    return t.m = e, t.h = n, !0;\n}\nfunction yt(t) {\n    switch(t.h){\n        case 0:\n            0 != t.h ? yt(t) : st(t.g);\n            break;\n        case 1:\n            dt(t = t.g, t.g + 8);\n            break;\n        case 2:\n            if (2 != t.h) yt(t);\n            else {\n                var e = at(t.g);\n                dt(t = t.g, t.g + e);\n            }\n            break;\n        case 5:\n            dt(t = t.g, t.g + 4);\n            break;\n        case 3:\n            for(e = t.m;;){\n                if (!mt(t)) throw Error(\"Unmatched start-group tag: stream EOF\");\n                if (4 == t.h) {\n                    if (t.m != e) throw Error(\"Unmatched end-group tag\");\n                    break;\n                }\n                yt(t);\n            }\n            break;\n        default:\n            throw G(t.h, t.l);\n    }\n}\nfunction _t(t, e, n) {\n    const r = t.g.l, i = at(t.g), s = t.g.g + i;\n    let o = s - r;\n    if (0 >= o && (t.g.l = s, n(e, t, void 0, void 0, void 0), o = s - t.g.g), o) throw Error(`Message parsing ended unexpectedly. Expected to read ${i} bytes, instead read ${i - o} bytes, either the data ended unexpectedly or the message misreported its own length`);\n    return t.g.g = s, t.g.l = r, e;\n}\nfunction vt(t) {\n    var e = at(t.g), a = ft(t = t.g, e);\n    if (t = t.h, o) {\n        var h, c = t;\n        (h = s) || (h = s = new TextDecoder(\"utf-8\", {\n            fatal: !0\n        })), e = a + e, c = 0 === a && e === c.length ? c : c.subarray(a, e);\n        try {\n            var u = h.decode(c);\n        } catch (t) {\n            if (void 0 === i) {\n                try {\n                    h.decode(new Uint8Array([\n                        128\n                    ]));\n                } catch (t) {}\n                try {\n                    h.decode(new Uint8Array([\n                        97\n                    ])), i = !0;\n                } catch (t) {\n                    i = !1;\n                }\n            }\n            throw !i && (s = void 0), t;\n        }\n    } else {\n        e = (u = a) + e, a = [];\n        let i, s = null;\n        for(; u < e;){\n            var l = t[u++];\n            128 > l ? a.push(l) : 224 > l ? u >= e ? n() : (i = t[u++], 194 > l || 128 != (192 & i) ? (u--, n()) : a.push((31 & l) << 6 | 63 & i)) : 240 > l ? u >= e - 1 ? n() : (i = t[u++], 128 != (192 & i) || 224 === l && 160 > i || 237 === l && 160 <= i || 128 != (192 & (h = t[u++])) ? (u--, n()) : a.push((15 & l) << 12 | (63 & i) << 6 | 63 & h)) : 244 >= l ? u >= e - 2 ? n() : (i = t[u++], 128 != (192 & i) || 0 != i - 144 + (l << 28) >> 30 || 128 != (192 & (h = t[u++])) || 128 != (192 & (c = t[u++])) ? (u--, n()) : (l = (7 & l) << 18 | (63 & i) << 12 | (63 & h) << 6 | 63 & c, l -= 65536, a.push(55296 + (l >> 10 & 1023), 56320 + (1023 & l)))) : n(), 8192 <= a.length && (s = r(s, a), a.length = 0);\n        }\n        u = r(s, a);\n    }\n    return u;\n}\nfunction Et(t) {\n    const e = at(t.g);\n    return pt(t.g, e);\n}\nfunction wt(t, e, n) {\n    var r = at(t.g);\n    for(r = t.g.g + r; t.g.g < r;)n.push(e(t.g));\n}\nvar Tt = [];\nfunction At(t) {\n    return t ? /^\\d+$/.test(t) ? (nt(t), new bt(K, Y)) : null : kt ||= new bt(0, 0);\n}\nvar bt = class {\n    constructor(t, e){\n        this.h = t >>> 0, this.g = e >>> 0;\n    }\n};\nlet kt;\nfunction xt(t) {\n    return t ? /^-?\\d+$/.test(t) ? (nt(t), new St(K, Y)) : null : Lt ||= new St(0, 0);\n}\nvar St = class {\n    constructor(t, e){\n        this.h = t >>> 0, this.g = e >>> 0;\n    }\n};\nlet Lt;\nfunction Ft(t, e, n) {\n    for(; 0 < n || 127 < e;)t.g.push(127 & e | 128), e = (e >>> 7 | n << 25) >>> 0, n >>>= 7;\n    t.g.push(e);\n}\nfunction Rt(t, e) {\n    for(; 127 < e;)t.g.push(127 & e | 128), e >>>= 7;\n    t.g.push(e);\n}\nfunction Mt(t, e) {\n    if (0 <= e) Rt(t, e);\n    else {\n        for(let n = 0; 9 > n; n++)t.g.push(127 & e | 128), e >>= 7;\n        t.g.push(1);\n    }\n}\nfunction Pt(t, e) {\n    t.g.push(e >>> 0 & 255), t.g.push(e >>> 8 & 255), t.g.push(e >>> 16 & 255), t.g.push(e >>> 24 & 255);\n}\nfunction Ct(t, e) {\n    0 !== e.length && (t.l.push(e), t.h += e.length);\n}\nfunction Ot(t, e, n) {\n    Rt(t.g, 8 * e + n);\n}\nfunction It(t, e) {\n    return Ot(t, e, 2), e = t.g.end(), Ct(t, e), e.push(t.h), e;\n}\nfunction Ut(t, e) {\n    var n = e.pop();\n    for(n = t.h + t.g.length() - n; 127 < n;)e.push(127 & n | 128), n >>>= 7, t.h++;\n    e.push(n), t.h++;\n}\nfunction Dt(t, e, n) {\n    Ot(t, e, 2), Rt(t.g, n.length), Ct(t, t.g.end()), Ct(t, n);\n}\nfunction Nt(t, e, n, r) {\n    null != n && (e = It(t, e), r(n, t), Ut(t, e));\n}\nclass Bt {\n    constructor(t, e, n, r){\n        this.g = t, this.h = e, this.l = n, this.pa = r;\n    }\n}\nfunction Gt(t) {\n    return Array.prototype.slice.call(t);\n}\nfunction jt(t) {\n    return \"function\" == typeof Symbol && \"symbol\" == typeof Symbol() ? Symbol() : t;\n}\nvar Vt = jt(), Xt = jt(\"0di\"), Ht = jt(\"2ex\"), Wt = jt(\"0dg\"), zt = Vt ? (t, e)=>{\n    t[Vt] |= e;\n} : (t, e)=>{\n    void 0 !== t.g ? t.g |= e : Object.defineProperties(t, {\n        g: {\n            value: e,\n            configurable: !0,\n            writable: !0,\n            enumerable: !1\n        }\n    });\n}, Kt = Vt ? (t, e)=>{\n    t[Vt] &= ~e;\n} : (t, e)=>{\n    void 0 !== t.g && (t.g &= ~e);\n};\nfunction Yt(t, e, n) {\n    return n ? t | e : t & ~e;\n}\nvar $t = Vt ? (t)=>0 | t[Vt] : (t)=>0 | t.g, qt = Vt ? (t)=>t[Vt] : (t)=>t.g, Jt = Vt ? (t, e)=>(t[Vt] = e, t) : (t, e)=>(void 0 !== t.g ? t.g = e : Object.defineProperties(t, {\n        g: {\n            value: e,\n            configurable: !0,\n            writable: !0,\n            enumerable: !1\n        }\n    }), t);\nfunction Zt(t) {\n    return zt(t, 34), t;\n}\nfunction Qt(t, e) {\n    Jt(e, -14591 & (0 | t));\n}\nfunction te(t, e) {\n    Jt(e, -14557 & (34 | t));\n}\nfunction ee(t) {\n    return 0 === (t = t >> 14 & 1023) ? 536870912 : t;\n}\nvar ne, re = {}, ie = {};\nfunction se(t) {\n    return !(!t || \"object\" != typeof t || t.Ja !== ie);\n}\nfunction oe(t) {\n    return null !== t && \"object\" == typeof t && !Array.isArray(t) && t.constructor === Object;\n}\nfunction ae(t, e, n) {\n    if (null != t) {\n        if (\"string\" == typeof t) t = t ? new B(t, O) : D();\n        else if (t.constructor !== B) if (M(t)) t = t.length ? new B(n ? t : new Uint8Array(t), O) : D();\n        else {\n            if (!e) throw Error();\n            t = void 0;\n        }\n    }\n    return t;\n}\nfunction he(t, e, n) {\n    if (!Array.isArray(t) || t.length) return !1;\n    const r = $t(t);\n    return !!(1 & r) || !(!e || !(Array.isArray(e) ? e.includes(n) : e.has(n))) && (Jt(t, 1 | r), !0);\n}\nconst ce = [];\nfunction ue(t) {\n    if (2 & t) throw Error();\n}\nJt(ce, 55), ne = Object.freeze(ce);\nclass le {\n    constructor(t, e, n){\n        this.l = 0, this.g = t, this.h = e, this.m = n;\n    }\n    next() {\n        if (this.l < this.g.length) {\n            const t = this.g[this.l++];\n            return {\n                done: !1,\n                value: this.h ? this.h.call(this.m, t) : t\n            };\n        }\n        return {\n            done: !0,\n            value: void 0\n        };\n    }\n    [Symbol.iterator]() {\n        return new le(this.g, this.h, this.m);\n    }\n}\nlet de, fe, pe;\nfunction ge(t, e) {\n    (e = de ? e[de] : void 0) && (t[de] = Gt(e));\n}\nfunction me(t, e) {\n    t.__closure__error__context__984382 || (t.__closure__error__context__984382 = {}), t.__closure__error__context__984382.severity = e;\n}\nfunction ye() {\n    const e = Error();\n    me(e, \"incident\"), function(e) {\n        t.setTimeout(()=>{\n            throw e;\n        }, 0);\n    }(e);\n}\nfunction _e(t) {\n    return me(t = Error(t), \"warning\"), t;\n}\nfunction ve(t) {\n    return null == t || \"number\" == typeof t ? t : \"NaN\" === t || \"Infinity\" === t || \"-Infinity\" === t ? Number(t) : void 0;\n}\nfunction Ee(t) {\n    return null == t || \"boolean\" == typeof t ? t : \"number\" == typeof t ? !!t : void 0;\n}\nObject.freeze(new class {\n}), Object.freeze(new class {\n});\nconst we = /^-?([1-9][0-9]*|0)(\\.[0-9]+)?$/;\nfunction Te(t) {\n    const e = typeof t;\n    return \"number\" === e ? Number.isFinite(t) : \"string\" === e && we.test(t);\n}\nfunction Ae(t) {\n    if (null == t) return t;\n    if (\"string\" == typeof t) {\n        if (!t) return;\n        t = +t;\n    }\n    return \"number\" == typeof t && Number.isFinite(t) ? 0 | t : void 0;\n}\nfunction be(t) {\n    if (null == t) return t;\n    if (\"string\" == typeof t) {\n        if (!t) return;\n        t = +t;\n    }\n    return \"number\" == typeof t && Number.isFinite(t) ? t >>> 0 : void 0;\n}\nfunction ke(t) {\n    return \"-\" !== t[0] && (20 > t.length || 20 === t.length && 184467 > Number(t.substring(0, 6)));\n}\nfunction xe(t) {\n    return \"-\" === t[0] ? 20 > t.length || 20 === t.length && -922337 < Number(t.substring(0, 7)) : 19 > t.length || 19 === t.length && 922337 > Number(t.substring(0, 6));\n}\nfunction Se(t) {\n    return t = Math.trunc(t), Number.isSafeInteger(t) || ($(t), t = Z(K, Y)), t;\n}\nfunction Le(t) {\n    var e = Math.trunc(Number(t));\n    return Number.isSafeInteger(e) ? String(e) : (-1 !== (e = t.indexOf(\".\")) && (t = t.substring(0, e)), xe(t) || (nt(t), t = et()), t);\n}\nfunction Fe(t) {\n    return null == t ? t : Te(t) ? \"number\" == typeof t ? Se(t) : Le(t) : void 0;\n}\nfunction Re(t) {\n    if (\"string\" != typeof t) throw Error();\n    return t;\n}\nfunction Me(t) {\n    if (null != t && \"string\" != typeof t) throw Error();\n    return t;\n}\nfunction Pe(t) {\n    return null == t || \"string\" == typeof t ? t : void 0;\n}\nfunction Ce(t, e, n, r) {\n    if (null != t && \"object\" == typeof t && t.X === re) return t;\n    if (!Array.isArray(t)) return n ? 2 & r ? (t = e[Xt]) ? e = t : (Zt((t = new e).s), e = e[Xt] = t) : e = new e : e = void 0, e;\n    let i = n = $t(t);\n    return 0 === i && (i |= 32 & r), i |= 2 & r, i !== n && Jt(t, i), new e(t);\n}\nfunction Oe(t, e, n) {\n    if (e) {\n        var r = !!r;\n        if (!Te(e = t)) throw _e(\"int64\");\n        \"string\" == typeof e ? r = Le(e) : r ? (r = Math.trunc(e), Number.isSafeInteger(r) ? r = String(r) : xe(e = String(r)) ? r = e : ($(r), r = et())) : r = Se(e);\n    } else r = Fe(t);\n    return \"string\" == typeof (n = null == (t = r) ? n ? 0 : void 0 : t) && (r = +n, Number.isSafeInteger(r)) ? r : n;\n}\nlet Ie, Ue, De;\nfunction Ne(t) {\n    switch(typeof t){\n        case \"boolean\":\n            return Ue ||= [\n                0,\n                void 0,\n                !0\n            ];\n        case \"number\":\n            return 0 < t ? void 0 : 0 === t ? De ||= [\n                0,\n                void 0\n            ] : [\n                -t,\n                void 0\n            ];\n        case \"string\":\n            return [\n                0,\n                t\n            ];\n        case \"object\":\n            return t;\n    }\n}\nfunction Be(t, e) {\n    return Ge(t, e[0], e[1]);\n}\nfunction Ge(t, e, n) {\n    if (null == t && (t = Ie), Ie = void 0, null == t) {\n        var r = 96;\n        n ? (t = [\n            n\n        ], r |= 512) : t = [], e && (r = -16760833 & r | (1023 & e) << 14);\n    } else {\n        if (!Array.isArray(t)) throw Error(\"narr\");\n        if (2048 & (r = $t(t))) throw Error(\"farr\");\n        if (64 & r) return t;\n        if (r |= 64, n && (r |= 512, n !== t[0])) throw Error(\"mid\");\n        t: {\n            const i = (n = t).length;\n            if (i) {\n                const t = i - 1;\n                if (oe(n[t])) {\n                    if (1024 <= (e = t - (+!!(512 & (r |= 256)) - 1))) throw Error(\"pvtlmt\");\n                    r = -16760833 & r | (1023 & e) << 14;\n                    break t;\n                }\n            }\n            if (e) {\n                if (1024 < (e = Math.max(e, i - (+!!(512 & r) - 1)))) throw Error(\"spvt\");\n                r = -16760833 & r | (1023 & e) << 14;\n            }\n        }\n    }\n    return Jt(t, r), t;\n}\nconst je = {};\nlet Ve = function() {\n    try {\n        return _(new class extends Map {\n            constructor(){\n                super();\n            }\n        }), !1;\n    } catch  {\n        return !0;\n    }\n}();\nclass Xe {\n    constructor(){\n        this.g = new Map;\n    }\n    get(t) {\n        return this.g.get(t);\n    }\n    set(t, e) {\n        return this.g.set(t, e), this.size = this.g.size, this;\n    }\n    delete(t) {\n        return t = this.g.delete(t), this.size = this.g.size, t;\n    }\n    clear() {\n        this.g.clear(), this.size = this.g.size;\n    }\n    has(t) {\n        return this.g.has(t);\n    }\n    entries() {\n        return this.g.entries();\n    }\n    keys() {\n        return this.g.keys();\n    }\n    values() {\n        return this.g.values();\n    }\n    forEach(t, e) {\n        return this.g.forEach(t, e);\n    }\n    [Symbol.iterator]() {\n        return this.entries();\n    }\n}\nconst He = Ve ? (Object.setPrototypeOf(Xe.prototype, Map.prototype), Object.defineProperties(Xe.prototype, {\n    size: {\n        value: 0,\n        configurable: !0,\n        enumerable: !0,\n        writable: !0\n    }\n}), Xe) : class extends Map {\n    constructor(){\n        super();\n    }\n};\nfunction We(t) {\n    return t;\n}\nfunction ze(t) {\n    if (2 & t.N) throw Error(\"Cannot mutate an immutable Map\");\n}\nvar Ke = class extends He {\n    constructor(t, e, n = We, r = We){\n        super();\n        let i = $t(t);\n        i |= 64, Jt(t, i), this.N = i, this.U = e, this.S = n, this.Z = this.U ? Ye : r;\n        for(let s = 0; s < t.length; s++){\n            const o = t[s], a = n(o[0], !1, !0);\n            let h = o[1];\n            e ? void 0 === h && (h = null) : h = r(o[1], !1, !0, void 0, void 0, i), super.set(a, h);\n        }\n    }\n    oa(t = $e) {\n        if (0 !== this.size) return this.Y(t);\n    }\n    Y(t = $e) {\n        const e = [], n = super.entries();\n        for(var r; !(r = n.next()).done;)(r = r.value)[0] = t(r[0]), r[1] = t(r[1]), e.push(r);\n        return e;\n    }\n    clear() {\n        ze(this), super.clear();\n    }\n    delete(t) {\n        return ze(this), super.delete(this.S(t, !0, !1));\n    }\n    entries() {\n        var t = this.na();\n        return new le(t, qe, this);\n    }\n    keys() {\n        return this.Ia();\n    }\n    values() {\n        var t = this.na();\n        return new le(t, Ke.prototype.get, this);\n    }\n    forEach(t, e) {\n        super.forEach((n, r)=>{\n            t.call(e, this.get(r), r, this);\n        });\n    }\n    set(t, e) {\n        return ze(this), null == (t = this.S(t, !0, !1)) ? this : null == e ? (super.delete(t), this) : super.set(t, this.Z(e, !0, !0, this.U, !1, this.N));\n    }\n    Oa(t) {\n        const e = this.S(t[0], !1, !0);\n        t = t[1], t = this.U ? void 0 === t ? null : t : this.Z(t, !1, !0, void 0, !1, this.N), super.set(e, t);\n    }\n    has(t) {\n        return super.has(this.S(t, !1, !1));\n    }\n    get(t) {\n        t = this.S(t, !1, !1);\n        const e = super.get(t);\n        if (void 0 !== e) {\n            var n = this.U;\n            return n ? ((n = this.Z(e, !1, !0, n, this.ta, this.N)) !== e && super.set(t, n), n) : e;\n        }\n    }\n    na() {\n        return Array.from(super.keys());\n    }\n    Ia() {\n        return super.keys();\n    }\n    [Symbol.iterator]() {\n        return this.entries();\n    }\n};\nfunction Ye(t, e, n, r, i, s) {\n    return t = Ce(t, r, n, s), i && (t = an(t)), t;\n}\nfunction $e(t) {\n    return t;\n}\nfunction qe(t) {\n    return [\n        t,\n        this.get(t)\n    ];\n}\nlet Je;\nfunction Ze() {\n    return Je ||= new Ke(Zt([]), void 0, void 0, void 0, je);\n}\nfunction Qe(t, e, n, r, i) {\n    if (null != t) {\n        if (Array.isArray(t)) t = he(t, void 0, 0) ? void 0 : i && 2 & $t(t) ? t : tn(t, e, n, void 0 !== r, i);\n        else if (oe(t)) {\n            const s = {};\n            for(let o in t)s[o] = Qe(t[o], e, n, r, i);\n            t = s;\n        } else t = e(t, r);\n        return t;\n    }\n}\nfunction tn(t, e, n, r, i) {\n    const s = r || n ? $t(t) : 0;\n    r = r ? !!(32 & s) : void 0;\n    const o = Gt(t);\n    for(let t = 0; t < o.length; t++)o[t] = Qe(o[t], e, n, r, i);\n    return n && (ge(o, t), n(s, o)), o;\n}\nfunction en(t) {\n    return Qe(t, nn, void 0, void 0, !1);\n}\nfunction nn(t) {\n    return t.X === re ? t.toJSON() : t instanceof Ke ? t.oa(en) : function(t) {\n        switch(typeof t){\n            case \"number\":\n                return isFinite(t) ? t : String(t);\n            case \"boolean\":\n                return t ? 1 : 0;\n            case \"object\":\n                if (t) if (Array.isArray(t)) {\n                    if (he(t, void 0, 0)) return;\n                } else {\n                    if (M(t)) return x(t);\n                    if (t instanceof B) {\n                        const e = t.g;\n                        return null == e ? \"\" : \"string\" == typeof e ? e : t.g = x(e);\n                    }\n                    if (t instanceof Ke) return t.oa();\n                }\n        }\n        return t;\n    }(t);\n}\nfunction rn(t, e, n = te) {\n    if (null != t) {\n        if (b && t instanceof Uint8Array) return e ? t : new Uint8Array(t);\n        if (Array.isArray(t)) {\n            var r = $t(t);\n            return 2 & r || (e &&= 0 === r || !!(32 & r) && !(64 & r || !(16 & r)), t = e ? Jt(t, -12293 & (34 | r)) : tn(t, rn, 4 & r ? te : n, !0, !0)), t;\n        }\n        return t.X === re ? (n = t.s, t = 2 & (r = qt(n)) ? t : sn(t, n, r, !0)) : t instanceof Ke && !(2 & t.N) && (n = Zt(t.Y(rn)), t = new Ke(n, t.U, t.S, t.Z)), t;\n    }\n}\nfunction sn(t, e, n, r) {\n    return t = t.constructor, Ie = e = on(e, n, r), e = new t(e), Ie = void 0, e;\n}\nfunction on(t, e, n) {\n    const r = n || 2 & e ? te : Qt, i = !!(32 & e);\n    return t = function(t, e, n) {\n        const r = Gt(t);\n        var i = r.length;\n        const s = 256 & e ? r[i - 1] : void 0;\n        for(i += s ? -1 : 0, e = 512 & e ? 1 : 0; e < i; e++)r[e] = n(r[e]);\n        if (s) {\n            e = r[e] = {};\n            for(const t in s)e[t] = n(s[t]);\n        }\n        return ge(r, t), r;\n    }(t, e, (t)=>rn(t, i, r)), zt(t, 32 | (n ? 2 : 0)), t;\n}\nfunction an(t) {\n    const e = t.s, n = qt(e);\n    return 2 & n ? sn(t, e, n, !1) : t;\n}\nfunction hn(t, e, n, r) {\n    return !(4 & e) || null != n && (!r && 0 === n && (4096 & e || 8192 & e) && 5 > (t.constructor[Wt] = 1 + (0 | t.constructor[Wt])) && ye(), 0 !== n && !(n & e));\n}\nfunction cn(t, e) {\n    return ln(t = t.s, qt(t), e);\n}\nfunction un(t, e, n, r) {\n    if (!(0 > (e = r + (+!!(512 & e) - 1)) || e >= t.length || e >= n)) return t[e];\n}\nfunction ln(t, e, n, r) {\n    if (-1 === n) return null;\n    const i = ee(e);\n    if (!(n >= i)) {\n        var s = t.length;\n        return r && 256 & e && null != (r = t[s - 1][n]) ? (un(t, e, i, n) && null != Ht && (4 <= (e = (t = pe ??= {})[Ht] || 0) || (t[Ht] = e + 1, ye())), r) : un(t, e, i, n);\n    }\n    return 256 & e ? t[t.length - 1][n] : void 0;\n}\nfunction dn(t, e, n, r) {\n    const i = t.s;\n    let s = qt(i);\n    return ue(s), fn(i, s, e, n, r), t;\n}\nfunction fn(t, e, n, r, i) {\n    const s = ee(e);\n    if (n >= s || i) {\n        let o = e;\n        if (256 & e) i = t[t.length - 1];\n        else {\n            if (null == r) return o;\n            i = t[s + (+!!(512 & e) - 1)] = {}, o |= 256;\n        }\n        return i[n] = r, n < s && (t[n + (+!!(512 & e) - 1)] = void 0), o !== e && Jt(t, o), o;\n    }\n    return t[n + (+!!(512 & e) - 1)] = r, 256 & e && n in (t = t[t.length - 1]) && delete t[n], e;\n}\nfunction pn(t, e, n, r, i) {\n    var s = 2 & e;\n    let o = ln(t, e, n, i);\n    Array.isArray(o) || (o = ne);\n    const a = !(2 & r);\n    r = !(1 & r);\n    const h = !!(32 & e);\n    let c = $t(o);\n    return 0 !== c || !h || s || a ? 1 & c || (c |= 1, Jt(o, c)) : (c |= 33, Jt(o, c)), s ? (t = !1, 2 & c || (Zt(o), t = !!(4 & c)), (r || t) && Object.freeze(o)) : (s = !!(2 & c) || !!(2048 & c), r && s ? (o = Gt(o), r = 1, h && !a && (r |= 32), Jt(o, r), fn(t, e, n, o, i)) : a && 32 & c && !s && Kt(o, 32)), o;\n}\nfunction gn(t, e) {\n    t = t.s;\n    let n = qt(t);\n    const r = ln(t, n, e), i = ve(r);\n    return null != i && i !== r && fn(t, n, e, i), i;\n}\nfunction mn(t) {\n    t = t.s;\n    let e = qt(t);\n    const n = ln(t, e, 1), r = ae(n, !0, !!(34 & e));\n    return null != r && r !== n && fn(t, e, 1, r), r;\n}\nfunction yn(t, e, n) {\n    const r = t.s;\n    let i = qt(r);\n    const s = 2 & i ? 1 : 2;\n    let o = _n(r, i, e);\n    var a = $t(o);\n    if (hn(t, a, void 0, !1)) {\n        (4 & a || Object.isFrozen(o)) && (o = Gt(o), a = In(a, i), i = fn(r, i, e, o));\n        let s = t = 0;\n        for(; t < o.length; t++){\n            const e = n(o[t]);\n            null != e && (o[s++] = e);\n        }\n        s < t && (o.length = s), a = Yt(a = vn(a, i), 20, !0), a = Yt(a, 4096, !1), a = Yt(a, 8192, !1), Jt(o, a), 2 & a && Object.freeze(o);\n    }\n    return En(a) || (n = a, (a = (t = 1 === s || 4 === s && !!(32 & a)) ? Yt(a, 2, !0) : Un(a, i, !1)) !== n && Jt(o, a), t && Object.freeze(o)), 2 === s && En(a) && (o = Gt(o), a = Un(a = In(a, i), i, !1), Jt(o, a), fn(r, i, e, o)), o;\n}\nfunction _n(t, e, n) {\n    return t = ln(t, e, n), Array.isArray(t) ? t : ne;\n}\nfunction vn(t, e) {\n    return 0 === t && (t = In(t, e)), Yt(t, 1, !0);\n}\nfunction En(t) {\n    return !!(2 & t) && !!(4 & t) || !!(2048 & t);\n}\nfunction wn(t) {\n    t = Gt(t);\n    for(let e = 0; e < t.length; e++){\n        const n = t[e] = Gt(t[e]);\n        Array.isArray(n[1]) && (n[1] = Zt(n[1]));\n    }\n    return t;\n}\nfunction Tn(t, e, n) {\n    {\n        const a = t.s;\n        let h = qt(a);\n        if (ue(h), null == n) fn(a, h, e);\n        else {\n            var r, i = $t(n), s = i, o = !!(2 & i) || Object.isFrozen(n);\n            if ((r = !o) && (r = !1), hn(t, i)) for(i = 21, o && (n = Gt(n), s = 0, i = Un(i = In(i, h), h, !0)), t = 0; t < n.length; t++)n[t] = Re(n[t]);\n            r && (n = Gt(n), s = 0, i = Un(i = In(i, h), h, !0)), i !== s && Jt(n, i), fn(a, h, e, n);\n        }\n    }\n}\nfunction An(t, e, n, r) {\n    t = t.s;\n    let i = qt(t);\n    ue(i), fn(t, i, e, (\"0\" === r ? 0 === Number(n) : n === r) ? void 0 : n);\n}\nfunction bn(t, e, n, r) {\n    const i = qt(t);\n    ue(i), t = pn(t, i, e, 2), r = n(r, !!(4 & (e = $t(t))) && !!(4096 & e)), t.push(r);\n}\nfunction kn(t) {\n    return t;\n}\nfunction xn(t, e) {\n    return Sn(t = t.s, qt(t), ws) === e ? e : -1;\n}\nfunction Sn(t, e, n) {\n    let r = 0;\n    for(let i = 0; i < n.length; i++){\n        const s = n[i];\n        null != ln(t, e, s) && (0 !== r && (e = fn(t, e, r)), r = s);\n    }\n    return r;\n}\nfunction Ln(t, e, n, r) {\n    let i = qt(t);\n    ue(i);\n    const s = ln(t, i, n, r);\n    let o;\n    if (null != s && s.X === re) return (e = an(s)) !== s && fn(t, i, n, e, r), e.s;\n    if (Array.isArray(s)) {\n        const t = $t(s);\n        o = 2 & t ? on(s, t, !1) : s, o = Be(o, e);\n    } else o = Be(void 0, e);\n    return o !== s && fn(t, i, n, o, r), o;\n}\nfunction Fn(t, e, n, r) {\n    t = t.s;\n    let i = qt(t);\n    const s = ln(t, i, n, r);\n    return (e = Ce(s, e, !1, i)) !== s && null != e && fn(t, i, n, e, r), e;\n}\nfunction Rn(t, e, n, r = !1) {\n    if (null == (e = Fn(t, e, n, r))) return e;\n    t = t.s;\n    let i = qt(t);\n    if (!(2 & i)) {\n        const s = an(e);\n        s !== e && fn(t, i, n, e = s, r);\n    }\n    return e;\n}\nfunction Mn(t, e, n, r, i, s) {\n    var o = 2, a = !!(2 & e);\n    o = a ? 1 : o, i = !!i, s &&= !a, a = _n(t, e, r);\n    var h = $t(a);\n    const c = !!(4 & h);\n    if (!c) {\n        var u = a, l = e;\n        const t = !!(2 & (h = vn(h, e)));\n        t && (l = Yt(l, 2, !0));\n        let r = !t, i = !0, s = 0, o = 0;\n        for(; s < u.length; s++){\n            const e = Ce(u[s], n, !1, l);\n            if (e instanceof n) {\n                if (!t) {\n                    const t = !!(2 & $t(e.s));\n                    r &&= !t, i &&= t;\n                }\n                u[o++] = e;\n            }\n        }\n        o < s && (u.length = o), h = Yt(h, 4, !0), h = Yt(h, 16, i), h = Yt(h, 8, r), Jt(u, h), t && Object.freeze(u);\n    }\n    if (s && !(8 & h || !a.length && (1 === o || 4 === o && 32 & h))) {\n        for(En(h) && (a = Gt(a), h = In(h, e), e = fn(t, e, r, a)), n = a, s = h, u = 0; u < n.length; u++)(h = n[u]) !== (l = an(h)) && (n[u] = l);\n        s = Yt(s, 8, !0), s = Yt(s, 16, !n.length), Jt(n, s), h = s;\n    }\n    return En(h) || (n = h, (h = (s = 1 === o || 4 === o && !!(32 & h)) ? Yt(h, !a.length || 16 & h && (!c || 32 & h) ? 2 : 2048, !0) : Un(h, e, i)) !== n && Jt(a, h), s && Object.freeze(a)), 2 === o && En(h) && (a = Gt(a), h = Un(h = In(h, e), e, i), Jt(a, h), fn(t, e, r, a)), a;\n}\nfunction Pn(t, e, n) {\n    t = t.s;\n    const r = qt(t);\n    return Mn(t, r, e, n, !1, !(2 & r));\n}\nfunction Cn(t, e, n, r, i) {\n    return null == r && (r = void 0), dn(t, n, r, i);\n}\nfunction On(t, e, n, r) {\n    null == r && (r = void 0), t = t.s;\n    let i = qt(t);\n    ue(i), (n = Sn(t, i, n)) && n !== e && null != r && (i = fn(t, i, n)), fn(t, i, e, r);\n}\nfunction In(t, e) {\n    return t = Yt(t, 2, !!(2 & e)), t = Yt(t, 32, !0), Yt(t, 2048, !1);\n}\nfunction Un(t, e, n) {\n    return 32 & e && n || (t = Yt(t, 32, !1)), t;\n}\nfunction Dn(t, e, n, r) {\n    t = t.s;\n    const i = qt(t);\n    ue(i), e = Mn(t, i, n, e, !0), n = null != r ? r : new n, e.push(n), 2 & $t(n.s) ? Kt(e, 8) : Kt(e, 16);\n}\nfunction Nn(t, e) {\n    return Ae(cn(t, e));\n}\nfunction Bn(t, e) {\n    return t ?? e;\n}\nfunction Gn(t, e) {\n    return Bn(gn(t, e), 0);\n}\nfunction jn(t, e) {\n    return Bn(Pe(cn(t, e)), \"\");\n}\nfunction Vn(t, e, n) {\n    if (null != n && \"boolean\" != typeof n) throw t = typeof n, Error(`Expected boolean but got ${\"object\" != t ? t : n ? Array.isArray(n) ? \"array\" : t : \"null\"}: ${n}`);\n    dn(t, e, n);\n}\nfunction Xn(t, e, n) {\n    if (null != n) {\n        if (\"number\" != typeof n) throw _e(\"int32\");\n        if (!Number.isFinite(n)) throw _e(\"int32\");\n        n |= 0;\n    }\n    dn(t, e, n);\n}\nfunction Hn(t, e, n) {\n    if (null != n && \"number\" != typeof n) throw Error(`Value of float/double field must be a number, found ${typeof n}: ${n}`);\n    dn(t, e, n);\n}\nfunction Wn(t, e, n) {\n    e.g ? e.m(t, e.g, e.h, n, !0) : e.m(t, e.h, n, !0);\n}\nKe.prototype.toJSON = void 0, Ke.prototype.Ja = ie;\nvar zn = class {\n    constructor(t, e){\n        this.s = Ge(t, e);\n    }\n    toJSON() {\n        return Kn(this, tn(this.s, nn, void 0, void 0, !1), !0);\n    }\n    l() {\n        var t = ko;\n        return t.g ? t.l(this, t.g, t.h, !0) : t.l(this, t.h, t.defaultValue, !0);\n    }\n    clone() {\n        const t = this.s;\n        return sn(this, t, qt(t), !1);\n    }\n    P() {\n        return !!(2 & $t(this.s));\n    }\n};\nfunction Kn(t, e, n) {\n    var r = d ? void 0 : t.constructor.B;\n    const i = qt(n ? t.s : e);\n    if (!(t = e.length)) return e;\n    let s, o;\n    if (oe(n = e[t - 1])) {\n        t: {\n            var a = n;\n            let t = {}, e = !1;\n            for(var h in a){\n                let n = a[h];\n                if (Array.isArray(n)) {\n                    let t = n;\n                    (he(n, r, +h) || se(n) && 0 === n.size) && (n = null), n != t && (e = !0);\n                }\n                null != n ? t[h] = n : e = !0;\n            }\n            if (e) {\n                for(var c in t){\n                    a = t;\n                    break t;\n                }\n                a = null;\n            }\n        }\n        a != n && (s = !0), t--;\n    }\n    for(h = +!!(512 & i) - 1; 0 < t && (n = e[c = t - 1], c -= h, null == n || he(n, r, c) || se(n) && 0 === n.size); t--)o = !0;\n    return s || o ? (e = Array.prototype.slice.call(e, 0, t), a && e.push(a), e) : e;\n}\nfunction Yn(t) {\n    return Array.isArray(t) ? t[0] instanceof Bt ? t : [\n        $r,\n        t\n    ] : [\n        t,\n        void 0\n    ];\n}\nfunction $n(t, e) {\n    if (Array.isArray(e)) {\n        var n = $t(e);\n        if (4 & n) return e;\n        for(var r = 0, i = 0; r < e.length; r++){\n            const n = t(e[r]);\n            null != n && (e[i++] = n);\n        }\n        return i < r && (e.length = i), Jt(e, -12289 & (5 | n)), 2 & n && Object.freeze(e), e;\n    }\n}\nzn.prototype.X = re, zn.prototype.toString = function() {\n    return Kn(this, this.s, !1).toString();\n};\nconst qn = Symbol();\nfunction Jn(t) {\n    let e = t[qn];\n    if (!e) {\n        const n = sr(t), r = yr(t), i = r.l;\n        e = i ? (t, e)=>i(t, e, r) : (t, e)=>{\n            for(; mt(e) && 4 != e.h;){\n                var i = e.m, s = r[i];\n                if (!s) {\n                    var o = r.ea;\n                    o && (o = o[i]) && (s = r[i] = Zn(o));\n                }\n                s && s(e, t, i) || (i = (s = e).l, yt(s), s.ia ? s = void 0 : (o = s.g.g - i, s.g.g = i, s = pt(s.g, o)), i = t, s && (de ||= Symbol(), (o = i[de]) ? o.push(s) : i[de] = [\n                    s\n                ]));\n            }\n            n === tr || n === er || n.j || (t[fe ||= Symbol()] = n);\n        }, t[qn] = e;\n    }\n    return e;\n}\nfunction Zn(t) {\n    const e = (t = Yn(t))[0].g;\n    if (t = t[1]) {\n        const n = Jn(t), r = yr(t).T;\n        return (t, i, s)=>e(t, i, s, r, n);\n    }\n    return e;\n}\nclass Qn {\n}\nlet tr, er;\nconst nr = Symbol();\nfunction rr(t, e, n) {\n    const r = n[1];\n    let i;\n    if (r) {\n        const n = r[nr];\n        i = n ? n.T : Ne(r[0]), t[e] = n ?? r;\n    }\n    i && i === Ue ? (t.g || (t.g = new Set)).add(e) : n[0] && (t.h || (t.h = new Set)).add(e);\n}\nfunction ir(t, e) {\n    return [\n        t.l,\n        !e || 0 < e[0] ? void 0 : e\n    ];\n}\nfunction sr(t) {\n    var e = t[nr];\n    if (e) return e;\n    if (!(e = ar(t, t[nr] = new Qn, ir, ir, rr)).ea && !e.h && !e.g) {\n        let n = !0;\n        for(let t in e)isNaN(t) || (n = !1);\n        n ? (Ne(t[0]) === Ue ? er ? e = er : ((e = new Qn).T = Ne(!0), e = er = e) : e = tr ||= new Qn, e = t[nr] = e) : e.j = !0;\n    }\n    return e;\n}\nfunction or(t, e, n) {\n    t[e] = n;\n}\nfunction ar(t, e, n, r, i = or) {\n    e.T = Ne(t[0]);\n    let s = 0;\n    var o = t[++s];\n    o && o.constructor === Object && (e.ea = o, \"function\" == typeof (o = t[++s]) && (e.l = o, e.m = t[++s], o = t[++s]));\n    const a = {};\n    for(; Array.isArray(o) && \"number\" == typeof o[0] && 0 < o[0];){\n        for(var h = 0; h < o.length; h++)a[o[h]] = o;\n        o = t[++s];\n    }\n    for(h = 1; void 0 !== o;){\n        let l;\n        \"number\" == typeof o && (h += o, o = t[++s]);\n        var c = void 0;\n        if (o instanceof Bt ? l = o : (l = qr, s--), l.pa) {\n            o = t[++s], c = t;\n            var u = s;\n            \"function\" == typeof o && (o = o(), c[u] = o), c = o;\n        }\n        for(u = h + 1, \"number\" == typeof (o = t[++s]) && 0 > o && (u -= o, o = t[++s]); h < u; h++){\n            const t = a[h];\n            i(e, h, c ? r(l, c, t) : n(l, t));\n        }\n    }\n    return e;\n}\nconst hr = Symbol();\nfunction cr(t) {\n    let e = t[hr];\n    if (!e) {\n        const n = fr(t);\n        e = (t, e)=>Er(t, e, n), t[hr] = e;\n    }\n    return e;\n}\nconst ur = Symbol();\nfunction lr(t) {\n    return t.h;\n}\nfunction dr(t, e) {\n    let n, r;\n    const i = t.h;\n    return (t, s, o)=>i(t, s, o, r ||= fr(e).T, n ||= cr(e));\n}\nfunction fr(t) {\n    let e = t[ur];\n    return e || (e = ar(t, t[ur] = {}, lr, dr), _r(t), e);\n}\nconst pr = Symbol();\nfunction gr(t, e) {\n    const n = t.g;\n    return e ? (t, r, i)=>n(t, r, i, e) : n;\n}\nfunction mr(t, e, n) {\n    const r = t.g;\n    let i, s;\n    return (t, o, a)=>r(t, o, a, s ||= yr(e).T, i ||= Jn(e), n);\n}\nfunction yr(t) {\n    let e = t[pr];\n    return e || (sr(t), e = ar(t, t[pr] = {}, gr, mr), _r(t), e);\n}\nfunction _r(t) {\n    pr in t && nr in t && ur in t && (t.length = 0);\n}\nfunction vr(t, e) {\n    var n = t[e];\n    if (n) return n;\n    if ((n = t.ea) && (n = n[e])) {\n        var r = (n = Yn(n))[0].h;\n        if (n = n[1]) {\n            const e = cr(n), i = fr(n).T;\n            n = (n = t.m) ? n(i, e) : (t, n, s)=>r(t, n, s, i, e);\n        } else n = r;\n        return t[e] = n;\n    }\n}\nfunction Er(t, e, n) {\n    for(var r = qt(t), i = +!!(512 & r) - 1, s = t.length, o = 512 & r ? 1 : 0, a = s + (256 & r ? -1 : 0); o < a; o++){\n        const r = t[o];\n        if (null == r) continue;\n        const s = o - i, a = vr(n, s);\n        a && a(e, r, s);\n    }\n    if (256 & r) {\n        r = t[s - 1];\n        for(let t in r)i = +t, Number.isNaN(i) || null != (s = r[t]) && (a = vr(n, i)) && a(e, s, i);\n    }\n    if (t = de ? t[de] : void 0) for(Ct(e, e.g.end()), n = 0; n < t.length; n++)Ct(e, N(t[n]) || C());\n}\nfunction wr(t, e) {\n    return new Bt(t, e, !1, !1);\n}\nfunction Tr(t, e) {\n    return new Bt(t, e, !0, !1);\n}\nfunction Ar(t, e) {\n    return new Bt(t, e, !1, !0);\n}\nfunction br(t, e, n) {\n    fn(t, qt(t), e, n);\n}\nvar kr = Ar(function(t, e, n, r, i) {\n    return 2 === t.h && (t = _t(t, Be([\n        void 0,\n        void 0\n    ], r), i), ue(r = qt(e)), (i = ln(e, r, n)) instanceof Ke ? 0 != (2 & i.N) ? ((i = i.Y()).push(t), fn(e, r, n, i)) : i.Oa(t) : Array.isArray(i) ? (2 & $t(i) && fn(e, r, n, i = wn(i)), i.push(t)) : fn(e, r, n, [\n        t\n    ]), !0);\n}, function(t, e, n, r, i) {\n    if (e instanceof Ke) e.forEach((e, s)=>{\n        Nt(t, n, Be([\n            s,\n            e\n        ], r), i);\n    });\n    else if (Array.isArray(e)) for(let s = 0; s < e.length; s++){\n        const o = e[s];\n        Array.isArray(o) && Nt(t, n, Be(o, r), i);\n    }\n});\nfunction xr(t, e, n) {\n    t: if (null != e) {\n        if (Te(e)) {\n            if (\"string\" == typeof e) {\n                e = Le(e);\n                break t;\n            }\n            if (\"number\" == typeof e) {\n                e = Se(e);\n                break t;\n            }\n        }\n        e = void 0;\n    }\n    null != e && (\"string\" == typeof e && xt(e), null != e && (Ot(t, n, 0), \"number\" == typeof e ? (t = t.g, $(e), Ft(t, K, Y)) : (n = xt(e), Ft(t.g, n.h, n.g))));\n}\nfunction Sr(t, e, n) {\n    null != (e = Ae(e)) && null != e && (Ot(t, n, 0), Mt(t.g, e));\n}\nfunction Lr(t, e, n) {\n    null != (e = Ee(e)) && (Ot(t, n, 0), t.g.g.push(e ? 1 : 0));\n}\nfunction Fr(t, e, n) {\n    null != (e = Pe(e)) && Dt(t, n, c(e));\n}\nfunction Rr(t, e, n, r, i) {\n    Nt(t, n, e instanceof zn ? e.s : Array.isArray(e) ? Be(e, r) : void 0, i);\n}\nfunction Mr(t, e, n) {\n    null != (e = null == e || \"string\" == typeof e || M(e) || e instanceof B ? e : void 0) && Dt(t, n, X(e).buffer);\n}\nfunction Pr(t, e, n) {\n    return (5 === t.h || 2 === t.h) && (e = pn(e, qt(e), n, 2, !1), 2 == t.h ? wt(t, ct, e) : e.push(ct(t.g)), !0);\n}\nvar Cr, Or = wr(function(t, e, n) {\n    if (1 !== t.h) return !1;\n    var r = t.g;\n    t = ht(r);\n    const i = ht(r);\n    r = 2 * (i >> 31) + 1;\n    const s = i >>> 20 & 2047;\n    return t = 4294967296 * (1048575 & i) + t, br(e, n, 2047 == s ? t ? NaN : 1 / 0 * r : 0 == s ? r * Math.pow(2, -1074) * t : r * Math.pow(2, s - 1075) * (t + 4503599627370496)), !0;\n}, function(t, e, n) {\n    null != (e = ve(e)) && (Ot(t, n, 1), t = t.g, (n = z ||= new DataView(new ArrayBuffer(8))).setFloat64(0, +e, !0), K = n.getUint32(0, !0), Y = n.getUint32(4, !0), Pt(t, K), Pt(t, Y));\n}), Ir = wr(function(t, e, n) {\n    return 5 === t.h && (br(e, n, ct(t.g)), !0);\n}, function(t, e, n) {\n    null != (e = ve(e)) && (Ot(t, n, 5), t = t.g, q(e), Pt(t, K));\n}), Ur = Tr(Pr, function(t, e, n) {\n    if (null != (e = $n(ve, e))) for(let o = 0; o < e.length; o++){\n        var r = t, i = n, s = e[o];\n        null != s && (Ot(r, i, 5), r = r.g, q(s), Pt(r, K));\n    }\n}), Dr = Tr(Pr, function(t, e, n) {\n    if (null != (e = $n(ve, e)) && e.length) {\n        Ot(t, n, 2), Rt(t.g, 4 * e.length);\n        for(let r = 0; r < e.length; r++)n = t.g, q(e[r]), Pt(n, K);\n    }\n}), Nr = wr(function(t, e, n) {\n    return 0 === t.h && (br(e, n, it(t.g, Z)), !0);\n}, xr), Br = wr(function(t, e, n) {\n    return 0 === t.h && (br(e, n, 0 === (t = it(t.g, Z)) ? void 0 : t), !0);\n}, xr), Gr = wr(function(t, e, n) {\n    return 0 === t.h && (br(e, n, it(t.g, J)), !0);\n}, function(t, e, n) {\n    t: if (null != e) {\n        if (Te(e)) {\n            if (\"string\" == typeof e) {\n                var r = Math.trunc(Number(e));\n                Number.isSafeInteger(r) && 0 <= r ? e = String(r) : (-1 !== (r = e.indexOf(\".\")) && (e = e.substring(0, r)), ke(e) || (nt(e), e = Q(K, Y)));\n                break t;\n            }\n            if (\"number\" == typeof e) {\n                e = 0 <= (e = Math.trunc(e)) && Number.isSafeInteger(e) ? e : function(t) {\n                    if (0 > t) {\n                        $(t);\n                        const e = Q(K, Y);\n                        return t = Number(e), Number.isSafeInteger(t) ? t : e;\n                    }\n                    return ke(String(t)) ? t : ($(t), J(K, Y));\n                }(e);\n                break t;\n            }\n        }\n        e = void 0;\n    }\n    null != e && (\"string\" == typeof e && At(e), null != e && (Ot(t, n, 0), \"number\" == typeof e ? (t = t.g, $(e), Ft(t, K, Y)) : (n = At(e), Ft(t.g, n.h, n.g))));\n}), jr = wr(function(t, e, n) {\n    return 0 === t.h && (br(e, n, ot(t.g)), !0);\n}, Sr), Vr = Tr(function(t, e, n) {\n    return (0 === t.h || 2 === t.h) && (e = pn(e, qt(e), n, 2, !1), 2 == t.h ? wt(t, ot, e) : e.push(ot(t.g)), !0);\n}, function(t, e, n) {\n    if (null != (e = $n(Ae, e)) && e.length) {\n        n = It(t, n);\n        for(let n = 0; n < e.length; n++)Mt(t.g, e[n]);\n        Ut(t, n);\n    }\n}), Xr = wr(function(t, e, n) {\n    return 0 === t.h && (br(e, n, 0 === (t = ot(t.g)) ? void 0 : t), !0);\n}, Sr), Hr = wr(function(t, e, n) {\n    return 0 === t.h && (br(e, n, st(t.g)), !0);\n}, Lr), Wr = wr(function(t, e, n) {\n    return 0 === t.h && (br(e, n, !1 === (t = st(t.g)) ? void 0 : t), !0);\n}, Lr), zr = Tr(function(t, e, n) {\n    return 2 === t.h && (bn(e, n, kn, t = vt(t)), !0);\n}, function(t, e, n) {\n    if (null != (e = $n(Pe, e))) for(let o = 0; o < e.length; o++){\n        var r = t, i = n, s = e[o];\n        null != s && Dt(r, i, c(s));\n    }\n}), Kr = wr(function(t, e, n) {\n    return 2 === t.h && (br(e, n, \"\" === (t = vt(t)) ? void 0 : t), !0);\n}, Fr), Yr = wr(function(t, e, n) {\n    return 2 === t.h && (br(e, n, vt(t)), !0);\n}, Fr), $r = Ar(function(t, e, n, r, i) {\n    return 2 === t.h && (_t(t, Ln(e, r, n, !0), i), !0);\n}, Rr), qr = Ar(function(t, e, n, r, i) {\n    return 2 === t.h && (_t(t, Ln(e, r, n), i), !0);\n}, Rr);\nCr = new Bt(function(t, e, n, r, i) {\n    if (2 !== t.h) return !1;\n    r = Be(void 0, r);\n    let s = qt(e);\n    ue(s);\n    let o = pn(e, s, n, 3);\n    return s = qt(e), 4 & $t(o) && (o = Gt(o), Jt(o, -2079 & (1 | $t(o))), fn(e, s, n, o)), o.push(r), _t(t, r, i), !0;\n}, function(t, e, n, r, i) {\n    if (Array.isArray(e)) for(let s = 0; s < e.length; s++)Rr(t, e[s], n, r, i);\n}, !0, !0);\nvar Jr = Ar(function(t, e, n, r, i, s) {\n    if (2 !== t.h) return !1;\n    let o = qt(e);\n    return ue(o), (s = Sn(e, o, s)) && n !== s && fn(e, o, s), _t(t, e = Ln(e, r, n), i), !0;\n}, Rr), Zr = wr(function(t, e, n) {\n    return 2 === t.h && (br(e, n, Et(t)), !0);\n}, Mr), Qr = Tr(function(t, e, n) {\n    return (0 === t.h || 2 === t.h) && (e = pn(e, qt(e), n, 2, !1), 2 == t.h ? wt(t, at, e) : e.push(at(t.g)), !0);\n}, function(t, e, n) {\n    if (null != (e = $n(be, e))) for(let o = 0; o < e.length; o++){\n        var r = t, i = n, s = e[o];\n        null != s && (Ot(r, i, 0), Rt(r.g, s));\n    }\n}), ti = wr(function(t, e, n) {\n    return 0 === t.h && (br(e, n, ot(t.g)), !0);\n}, function(t, e, n) {\n    null != (e = Ae(e)) && (e = parseInt(e, 10), Ot(t, n, 0), Mt(t.g, e));\n}), ei = Tr(function(t, e, n) {\n    return (0 === t.h || 2 === t.h) && (e = pn(e, qt(e), n, 2, !1), 2 == t.h ? wt(t, ut, e) : e.push(ot(t.g)), !0);\n}, function(t, e, n) {\n    if (null != (e = $n(Ae, e)) && e.length) {\n        n = It(t, n);\n        for(let n = 0; n < e.length; n++)Mt(t.g, e[n]);\n        Ut(t, n);\n    }\n});\nclass ni {\n    constructor(t, e){\n        this.h = t, this.g = e, this.l = Rn, this.m = Cn, this.defaultValue = void 0;\n    }\n}\nfunction ri(t, e) {\n    return new ni(t, e);\n}\nfunction ii(t, e) {\n    return (n, r)=>{\n        if (Tt.length) {\n            const t = Tt.pop();\n            t.o(r), lt(t.g, n, r), n = t;\n        } else n = new class {\n            constructor(t, e){\n                if (gt.length) {\n                    const n = gt.pop();\n                    lt(n, t, e), t = n;\n                } else t = new class {\n                    constructor(t, e){\n                        this.h = null, this.m = !1, this.g = this.l = this.j = 0, lt(this, t, e);\n                    }\n                    clear() {\n                        this.h = null, this.m = !1, this.g = this.l = this.j = 0, this.ca = !1;\n                    }\n                }(t, e);\n                this.g = t, this.l = this.g.g, this.h = this.m = -1, this.o(e);\n            }\n            o({ ia: t = !1 } = {}) {\n                this.ia = t;\n            }\n        }(n, r);\n        try {\n            const r = new t, s = r.s;\n            Jn(e)(s, n);\n            var i = r;\n        } finally{\n            n.g.clear(), n.m = -1, n.h = -1, 100 > Tt.length && Tt.push(n);\n        }\n        return i;\n    };\n}\nfunction si(t) {\n    return function() {\n        const e = new class {\n            constructor(){\n                this.l = [], this.h = 0, this.g = new class {\n                    constructor(){\n                        this.g = [];\n                    }\n                    length() {\n                        return this.g.length;\n                    }\n                    end() {\n                        const t = this.g;\n                        return this.g = [], t;\n                    }\n                };\n            }\n        };\n        Er(this.s, e, fr(t)), Ct(e, e.g.end());\n        const n = new Uint8Array(e.h), r = e.l, i = r.length;\n        let s = 0;\n        for(let t = 0; t < i; t++){\n            const e = r[t];\n            n.set(e, s), s += e.length;\n        }\n        return e.l = [\n            n\n        ], n;\n    };\n}\nvar oi = class extends zn {\n    constructor(t){\n        super(t);\n    }\n}, ai = [\n    0,\n    Kr,\n    wr(function(t, e, n) {\n        return 2 === t.h && (br(e, n, (t = Et(t)) === D() ? void 0 : t), !0);\n    }, function(t, e, n) {\n        if (null != e) {\n            if (e instanceof zn) {\n                const r = e.Qa;\n                return void (r && (e = r(e), null != e && Dt(t, n, X(e).buffer)));\n            }\n            if (Array.isArray(e)) return;\n        }\n        Mr(t, e, n);\n    })\n], hi = [\n    0,\n    Yr\n], ci = [\n    0,\n    jr,\n    ti,\n    Hr,\n    -1,\n    Vr,\n    ti,\n    -1\n], ui = [\n    0,\n    Hr,\n    -1\n], li = class extends zn {\n    constructor(){\n        super();\n    }\n};\nli.B = [\n    6\n];\nvar di = [\n    0,\n    Hr,\n    Yr,\n    Hr,\n    ti,\n    -1,\n    ei,\n    Yr,\n    -1,\n    ui,\n    ti\n], fi = [\n    0,\n    Yr,\n    -2\n], pi = class extends zn {\n    constructor(){\n        super();\n    }\n}, gi = [\n    0\n], mi = [\n    0,\n    jr,\n    Hr,\n    -4\n], yi = class extends zn {\n    constructor(t){\n        super(t, 2);\n    }\n}, _i = {}, vi = [\n    -2,\n    _i,\n    Hr\n];\n_i[336783863] = [\n    0,\n    Yr,\n    Hr,\n    -1,\n    jr,\n    [\n        0,\n        [\n            1,\n            2,\n            3,\n            4,\n            5,\n            6\n        ],\n        Jr,\n        gi,\n        Jr,\n        di,\n        Jr,\n        fi,\n        Jr,\n        mi,\n        Jr,\n        ci,\n        Jr,\n        [\n            0,\n            Yr\n        ]\n    ],\n    hi,\n    Hr,\n    [\n        0,\n        [\n            1,\n            3\n        ],\n        [\n            2,\n            4\n        ],\n        Jr,\n        [\n            0,\n            Vr\n        ],\n        -1,\n        Jr,\n        [\n            0,\n            zr\n        ],\n        -1,\n        Cr,\n        [\n            0,\n            Yr,\n            -1\n        ]\n    ],\n    Yr\n];\nvar Ei = [\n    0,\n    Kr,\n    Wr\n], wi = [\n    0,\n    Br,\n    -1,\n    Wr,\n    -3,\n    Br,\n    Vr,\n    Kr,\n    Xr,\n    Br,\n    -1,\n    Wr,\n    Xr,\n    Wr,\n    -2,\n    Kr\n], Ti = [\n    -1,\n    {}\n], Ai = [\n    0,\n    Yr,\n    1,\n    Ti\n], bi = [\n    0,\n    Yr,\n    zr,\n    Ti\n];\nfunction ki(t, e) {\n    An(t, 2, Me(e), \"\");\n}\nfunction xi(t, e) {\n    bn(t.s, 3, Re, e);\n}\nfunction Si(t, e) {\n    bn(t.s, 4, Re, e);\n}\nvar Li = class extends zn {\n    constructor(t){\n        super(t, 500);\n    }\n    o(t) {\n        return Cn(this, 0, 7, t);\n    }\n};\nLi.B = [\n    3,\n    4,\n    5,\n    6,\n    8,\n    13,\n    17,\n    1005\n];\nvar Fi = [\n    -500,\n    Kr,\n    -1,\n    zr,\n    -3,\n    vi,\n    Cr,\n    ai,\n    Xr,\n    -1,\n    Ai,\n    bi,\n    Cr,\n    Ei,\n    Kr,\n    wi,\n    Xr,\n    zr,\n    987,\n    zr\n], Ri = [\n    0,\n    Kr,\n    -1,\n    Ti\n], Mi = [\n    -500,\n    Yr,\n    -1,\n    [\n        -1,\n        {}\n    ],\n    998,\n    Yr\n], Pi = [\n    -500,\n    Yr,\n    zr,\n    -1,\n    [\n        -2,\n        {},\n        Hr\n    ],\n    997,\n    zr,\n    -1\n], Ci = [\n    -500,\n    Yr,\n    zr,\n    Ti,\n    998,\n    zr\n];\nfunction Oi(t, e) {\n    Dn(t, 1, Li, e);\n}\nfunction Ii(t, e) {\n    bn(t.s, 10, Re, e);\n}\nfunction Ui(t, e) {\n    bn(t.s, 15, Re, e);\n}\nvar Di = class extends zn {\n    constructor(t){\n        super(t, 500);\n    }\n    o(t) {\n        return Cn(this, 0, 1001, t);\n    }\n};\nDi.B = [\n    1,\n    6,\n    7,\n    9,\n    10,\n    15,\n    16,\n    17,\n    14,\n    1002\n];\nvar Ni = [\n    -500,\n    Cr,\n    Fi,\n    4,\n    Cr,\n    Mi,\n    Cr,\n    Pi,\n    Xr,\n    Cr,\n    Ci,\n    zr,\n    Xr,\n    Ai,\n    bi,\n    Cr,\n    Ri,\n    zr,\n    -2,\n    wi,\n    Kr,\n    -1,\n    Wr,\n    979,\n    Ti,\n    Cr,\n    ai\n], Bi = ii(Di, Ni);\nDi.prototype.g = si(Ni);\nvar Gi = [\n    0,\n    Cr,\n    [\n        0,\n        jr,\n        -2\n    ]\n], ji = class extends zn {\n    constructor(t){\n        super(t);\n    }\n}, Vi = [\n    0,\n    jr,\n    Ir,\n    Yr,\n    -1\n], Xi = class extends zn {\n    constructor(t){\n        super(t);\n    }\n    g() {\n        return Pn(this, ji, 1);\n    }\n};\nXi.B = [\n    1\n];\nvar Hi = [\n    0,\n    Cr,\n    Vi\n], Wi = ii(Xi, Hi), zi = [\n    0,\n    jr,\n    Ir\n], Ki = [\n    0,\n    jr,\n    -1,\n    Gi\n], Yi = class extends zn {\n    constructor(t){\n        super(t);\n    }\n}, $i = [\n    0,\n    jr,\n    -3\n], qi = [\n    0,\n    Ir,\n    -3\n], Ji = class extends zn {\n    constructor(t){\n        super(t);\n    }\n}, Zi = [\n    0,\n    Ir,\n    -1,\n    Yr,\n    Ir\n], Qi = class extends zn {\n    constructor(t){\n        super(t);\n    }\n    h() {\n        return Rn(this, Yi, 2);\n    }\n    g() {\n        return Pn(this, Ji, 5);\n    }\n};\nQi.B = [\n    5\n];\nvar ts = [\n    0,\n    ti,\n    $i,\n    qi,\n    Ki,\n    Cr,\n    Zi\n], es = class extends zn {\n    constructor(t){\n        super(t);\n    }\n};\nes.B = [\n    1,\n    2,\n    3,\n    8,\n    9\n];\nvar ns = ii(es, [\n    0,\n    zr,\n    Vr,\n    Dr,\n    ts,\n    Yr,\n    -1,\n    Nr,\n    Cr,\n    zi,\n    zr,\n    Nr\n]), rs = class extends zn {\n    constructor(t){\n        super(t);\n    }\n}, is = [\n    0,\n    Ir,\n    -4\n], ss = class extends zn {\n    constructor(t){\n        super(t);\n    }\n};\nss.B = [\n    1\n];\nvar os = ii(ss, [\n    0,\n    Cr,\n    is\n]), as = class extends zn {\n    constructor(t){\n        super(t);\n    }\n}, hs = [\n    0,\n    Ir,\n    -4\n], cs = class extends zn {\n    constructor(t){\n        super(t);\n    }\n};\ncs.B = [\n    1\n];\nvar us = ii(cs, [\n    0,\n    Cr,\n    hs\n]), ls = class extends zn {\n    constructor(t){\n        super(t);\n    }\n};\nls.B = [\n    3\n];\nvar ds = [\n    0,\n    jr,\n    -1,\n    Dr,\n    ti\n], fs = class extends zn {\n    constructor(){\n        super();\n    }\n};\nfs.prototype.g = si([\n    0,\n    Ir,\n    -4,\n    Nr\n]);\nvar ps = class extends zn {\n    constructor(t){\n        super(t);\n    }\n}, gs = [\n    0,\n    1,\n    jr,\n    Yr,\n    Hi\n], ms = class extends zn {\n    constructor(t){\n        super(t);\n    }\n};\nms.B = [\n    1\n];\nvar ys = ii(ms, [\n    0,\n    Cr,\n    gs,\n    Nr\n]), _s = class extends zn {\n    constructor(t){\n        super(t);\n    }\n};\n_s.B = [\n    1\n];\nvar vs = class extends zn {\n    constructor(t){\n        super(t);\n    }\n    qa() {\n        const t = mn(this);\n        return null == t ? D() : t;\n    }\n}, Es = class extends zn {\n    constructor(t){\n        super(t);\n    }\n}, ws = [\n    1,\n    2\n], Ts = [\n    0,\n    ws,\n    Jr,\n    [\n        0,\n        Dr\n    ],\n    Jr,\n    [\n        0,\n        Zr\n    ],\n    jr,\n    Yr\n], As = class extends zn {\n    constructor(t){\n        super(t);\n    }\n};\nAs.B = [\n    1\n];\nvar bs = ii(As, [\n    0,\n    Cr,\n    Ts,\n    Nr\n]), ks = class extends zn {\n    constructor(t){\n        super(t);\n    }\n};\nks.B = [\n    4,\n    5\n];\nvar xs = [\n    0,\n    Yr,\n    jr,\n    Ir,\n    zr,\n    -1\n], Ss = class extends zn {\n    constructor(t){\n        super(t);\n    }\n}, Ls = [\n    0,\n    Hr,\n    -1\n], Fs = class extends zn {\n    constructor(t){\n        super(t);\n    }\n}, Rs = [\n    1,\n    2,\n    3,\n    4,\n    5\n], Ms = class extends zn {\n    constructor(t){\n        super(t);\n    }\n    g() {\n        return null != mn(this);\n    }\n    h() {\n        return null != Pe(cn(this, 2));\n    }\n}, Ps = [\n    0,\n    Zr,\n    Yr,\n    [\n        0,\n        jr,\n        Nr,\n        -1\n    ],\n    [\n        0,\n        Gr,\n        Nr\n    ]\n], Cs = class extends zn {\n    constructor(t){\n        super(t);\n    }\n    g() {\n        return Ee(cn(this, 2)) ?? !1;\n    }\n}, Os = [\n    0,\n    Ps,\n    Hr,\n    [\n        0,\n        Rs,\n        Jr,\n        mi,\n        Jr,\n        di,\n        Jr,\n        ci,\n        Jr,\n        gi,\n        Jr,\n        fi\n    ],\n    ti\n], Is = class extends zn {\n    constructor(t){\n        super(t);\n    }\n}, Us = [\n    0,\n    Os,\n    Ir,\n    -1,\n    jr\n], Ds = ri(502141897, Is);\n_i[502141897] = Us;\nvar Ns = [\n    0,\n    Ps\n];\n_i[512499200] = Ns;\nvar Bs = [\n    0,\n    Ns\n];\n_i[515723506] = Bs;\nvar Gs = ii(class extends zn {\n    constructor(t){\n        super(t);\n    }\n}, [\n    0,\n    [\n        0,\n        ti,\n        -1,\n        Ur,\n        Qr\n    ],\n    ds\n]), js = [\n    0,\n    Os\n];\n_i[508981768] = js;\nvar Vs = class extends zn {\n    constructor(t){\n        super(t);\n    }\n}, Xs = [\n    0,\n    Os,\n    Ir,\n    js,\n    Hr\n], Hs = class extends zn {\n    constructor(t){\n        super(t);\n    }\n}, Ws = [\n    0,\n    Os,\n    Us,\n    Xs,\n    Ir,\n    Bs\n];\n_i[508968149] = Xs;\nvar zs = ri(508968150, Hs);\n_i[508968150] = Ws;\nvar Ks = class extends zn {\n    constructor(t){\n        super(t);\n    }\n}, Ys = ri(513916220, Ks);\n_i[513916220] = [\n    0,\n    Os,\n    Ws,\n    jr\n];\nvar $s = class extends zn {\n    constructor(t){\n        super(t);\n    }\n    h() {\n        return Rn(this, ks, 2);\n    }\n    g() {\n        dn(this, 2);\n    }\n}, qs = [\n    0,\n    Os,\n    xs\n];\n_i[478825465] = qs;\nvar Js = [\n    0,\n    Os\n];\n_i[478825422] = Js;\nvar Zs = class extends zn {\n    constructor(t){\n        super(t);\n    }\n}, Qs = [\n    0,\n    Os,\n    Js,\n    qs,\n    -1\n], to = class extends zn {\n    constructor(t){\n        super(t);\n    }\n}, eo = [\n    0,\n    Os,\n    Ir,\n    jr\n], no = class extends zn {\n    constructor(t){\n        super(t);\n    }\n}, ro = [\n    0,\n    Os,\n    Ir\n], io = class extends zn {\n    constructor(t){\n        super(t);\n    }\n}, so = [\n    0,\n    Os,\n    eo,\n    ro,\n    Ir\n], oo = class extends zn {\n    constructor(t){\n        super(t);\n    }\n}, ao = [\n    0,\n    Os,\n    so,\n    Qs\n];\n_i[463370452] = Qs, _i[464864288] = eo, _i[474472470] = ro;\nvar ho = ri(462713202, io);\n_i[462713202] = so;\nvar co = ri(479097054, oo);\n_i[479097054] = ao;\nvar uo = class extends zn {\n    constructor(t){\n        super(t);\n    }\n}, lo = [\n    0,\n    Os\n], fo = class extends zn {\n    constructor(t){\n        super(t);\n    }\n}, po = [\n    0,\n    Os,\n    Ir,\n    -1,\n    jr\n];\n_i[514774813] = po;\nvar go = class extends zn {\n    constructor(t){\n        super(t);\n    }\n}, mo = [\n    0,\n    Os,\n    Ir,\n    Hr\n];\n_i[518928384] = mo;\nvar yo = class extends zn {\n    constructor(){\n        super();\n    }\n};\nyo.prototype.g = si([\n    0,\n    Os,\n    ro,\n    lo,\n    Us,\n    Xs,\n    po,\n    mo\n]);\nvar _o = class extends zn {\n    constructor(t){\n        super(t);\n    }\n}, vo = ri(456383383, _o);\n_i[456383383] = [\n    0,\n    Os,\n    xs\n];\nvar Eo = class extends zn {\n    constructor(t){\n        super(t);\n    }\n}, wo = ri(476348187, Eo);\n_i[476348187] = [\n    0,\n    Os,\n    Ls\n];\nvar To = class extends zn {\n    constructor(t){\n        super(t);\n    }\n}, Ao = [\n    0,\n    ti,\n    -1\n], bo = class extends zn {\n    constructor(t){\n        super(t);\n    }\n};\nbo.B = [\n    3\n];\nvar ko = ri(458105876, class extends zn {\n    constructor(t){\n        super(t);\n    }\n    g() {\n        var t = this.s;\n        const e = qt(t);\n        var n = 2 & e;\n        return t = function(t, e, n) {\n            var r = bo;\n            const i = 2 & e;\n            let s = !1;\n            if (null == n) {\n                if (i) return Ze();\n                n = [];\n            } else if (n.constructor === Ke) {\n                if (0 == (2 & n.N) || i) return n;\n                n = n.Y();\n            } else Array.isArray(n) ? s = !!(2 & $t(n)) : n = [];\n            if (i) {\n                if (!n.length) return Ze();\n                s || (s = !0, Zt(n));\n            } else s && (s = !1, n = wn(n));\n            return s || (64 & $t(n) ? Kt(n, 32) : 32 & e && zt(n, 32)), fn(t, e, 2, r = new Ke(n, r, Oe, void 0), !1), r;\n        }(t, e, ln(t, e, 2)), null == t || !n && bo && (t.ta = !0), n = t;\n    }\n});\n_i[458105876] = [\n    0,\n    Ao,\n    kr,\n    [\n        !0,\n        Nr,\n        [\n            0,\n            Yr,\n            -1,\n            zr\n        ]\n    ]\n];\nvar xo = class extends zn {\n    constructor(t){\n        super(t);\n    }\n}, So = ri(458105758, xo);\n_i[458105758] = [\n    0,\n    Os,\n    Yr,\n    Ao\n];\nvar Lo = class extends zn {\n    constructor(t){\n        super(t);\n    }\n};\nLo.B = [\n    5,\n    6\n];\nvar Fo = ri(443442058, Lo);\n_i[443442058] = [\n    0,\n    Os,\n    Yr,\n    jr,\n    Ir,\n    zr,\n    -1\n];\nvar Ro = class extends zn {\n    constructor(t){\n        super(t);\n    }\n}, Mo = ri(516587230, Ro);\nfunction Po(t, e) {\n    return e = e ? e.clone() : new ks, void 0 !== t.displayNamesLocale ? dn(e, 1, Me(t.displayNamesLocale)) : void 0 === t.displayNamesLocale && dn(e, 1), void 0 !== t.maxResults ? Xn(e, 2, t.maxResults) : \"maxResults\" in t && dn(e, 2), void 0 !== t.scoreThreshold ? Hn(e, 3, t.scoreThreshold) : \"scoreThreshold\" in t && dn(e, 3), void 0 !== t.categoryAllowlist ? Tn(e, 4, t.categoryAllowlist) : \"categoryAllowlist\" in t && dn(e, 4), void 0 !== t.categoryDenylist ? Tn(e, 5, t.categoryDenylist) : \"categoryDenylist\" in t && dn(e, 5), e;\n}\nfunction Co(t, e = -1, n = \"\") {\n    return {\n        categories: t.map((t)=>({\n                index: Bn(Nn(t, 1), 0) ?? -1,\n                score: Gn(t, 2) ?? 0,\n                categoryName: jn(t, 3) ?? \"\",\n                displayName: jn(t, 4) ?? \"\"\n            })),\n        headIndex: e,\n        headName: n\n    };\n}\nfunction Oo(t) {\n    var e = yn(t, 3, ve), n = yn(t, 2, Ae), r = yn(t, 1, Pe), i = yn(t, 9, Pe);\n    const s = {\n        categories: [],\n        keypoints: []\n    };\n    for(let t = 0; t < e.length; t++)s.categories.push({\n        score: e[t],\n        index: n[t] ?? -1,\n        categoryName: r[t] ?? \"\",\n        displayName: i[t] ?? \"\"\n    });\n    if ((e = Rn(t, Qi, 4)?.h()) && (s.boundingBox = {\n        originX: Nn(e, 1) ?? 0,\n        originY: Nn(e, 2) ?? 0,\n        width: Nn(e, 3) ?? 0,\n        height: Nn(e, 4) ?? 0,\n        angle: 0\n    }), Rn(t, Qi, 4)?.g().length) for (const e of Rn(t, Qi, 4).g())s.keypoints.push({\n        x: gn(e, 1) ?? 0,\n        y: gn(e, 2) ?? 0,\n        score: gn(e, 4) ?? 0,\n        label: Pe(cn(e, 3)) ?? \"\"\n    });\n    return s;\n}\nfunction Io(t) {\n    const e = [];\n    for (const n of Pn(t, as, 1))e.push({\n        x: Gn(n, 1) ?? 0,\n        y: Gn(n, 2) ?? 0,\n        z: Gn(n, 3) ?? 0,\n        visibility: Gn(n, 4) ?? 0\n    });\n    return e;\n}\nfunction Uo(t) {\n    const e = [];\n    for (const n of Pn(t, rs, 1))e.push({\n        x: Gn(n, 1) ?? 0,\n        y: Gn(n, 2) ?? 0,\n        z: Gn(n, 3) ?? 0,\n        visibility: Gn(n, 4) ?? 0\n    });\n    return e;\n}\nfunction Do(t) {\n    return Array.from(t, (t)=>127 < t ? t - 256 : t);\n}\nfunction No(t, e) {\n    if (t.length !== e.length) throw Error(`Cannot compute cosine similarity between embeddings of different sizes (${t.length} vs. ${e.length}).`);\n    let n = 0, r = 0, i = 0;\n    for(let s = 0; s < t.length; s++)n += t[s] * e[s], r += t[s] * t[s], i += e[s] * e[s];\n    if (0 >= r || 0 >= i) throw Error(\"Cannot compute cosine similarity on embedding with 0 norm.\");\n    return n / Math.sqrt(r * i);\n}\nlet Bo;\n_i[516587230] = [\n    0,\n    Os,\n    po,\n    mo,\n    Ir\n];\nconst Go = new Uint8Array([\n    0,\n    97,\n    115,\n    109,\n    1,\n    0,\n    0,\n    0,\n    1,\n    5,\n    1,\n    96,\n    0,\n    1,\n    123,\n    3,\n    2,\n    1,\n    0,\n    10,\n    10,\n    1,\n    8,\n    0,\n    65,\n    0,\n    253,\n    15,\n    253,\n    98,\n    11\n]);\nasync function jo() {\n    if (void 0 === Bo) try {\n        await WebAssembly.instantiate(Go), Bo = !0;\n    } catch  {\n        Bo = !1;\n    }\n    return Bo;\n}\nasync function Vo(t, e = \"\") {\n    const n = await jo() ? \"wasm_internal\" : \"wasm_nosimd_internal\";\n    return {\n        wasmLoaderPath: `${e}/${t}_${n}.js`,\n        wasmBinaryPath: `${e}/${t}_${n}.wasm`\n    };\n}\nvar Xo = class {\n};\nfunction Ho() {\n    var t = navigator;\n    return \"undefined\" != typeof OffscreenCanvas && (!function(t = navigator) {\n        return (t = t.userAgent).includes(\"Safari\") && !t.includes(\"Chrome\");\n    }(t) || !!((t = t.userAgent.match(/Version\\/([\\d]+).*Safari/)) && 1 <= t.length && 17 <= Number(t[1])));\n}\nasync function Wo(t) {\n    if (\"function\" != typeof importScripts) {\n        const e = document.createElement(\"script\");\n        return e.src = t.toString(), e.crossOrigin = \"anonymous\", new Promise((t, n)=>{\n            e.addEventListener(\"load\", ()=>{\n                t();\n            }, !1), e.addEventListener(\"error\", (t)=>{\n                n(t);\n            }, !1), document.body.appendChild(e);\n        });\n    }\n    importScripts(t.toString());\n}\nfunction zo(t) {\n    return void 0 !== t.videoWidth ? [\n        t.videoWidth,\n        t.videoHeight\n    ] : void 0 !== t.naturalWidth ? [\n        t.naturalWidth,\n        t.naturalHeight\n    ] : void 0 !== t.displayWidth ? [\n        t.displayWidth,\n        t.displayHeight\n    ] : [\n        t.width,\n        t.height\n    ];\n}\nfunction Ko(t, e, n) {\n    t.m || console.error(\"No wasm multistream support detected: ensure dependency inclusion of :gl_graph_runner_internal_multi_input target\"), n(e = t.i.stringToNewUTF8(e)), t.i._free(e);\n}\nfunction Yo(t, e, n) {\n    if (!t.i.canvas) throw Error(\"No OpenGL canvas configured.\");\n    if (n ? t.i._bindTextureToStream(n) : t.i._bindTextureToCanvas(), !(n = t.i.canvas.getContext(\"webgl2\") || t.i.canvas.getContext(\"webgl\"))) throw Error(\"Failed to obtain WebGL context from the provided canvas. `getContext()` should only be invoked with `webgl` or `webgl2`.\");\n    t.i.gpuOriginForWebTexturesIsBottomLeft && n.pixelStorei(n.UNPACK_FLIP_Y_WEBGL, !0), n.texImage2D(n.TEXTURE_2D, 0, n.RGBA, n.RGBA, n.UNSIGNED_BYTE, e), t.i.gpuOriginForWebTexturesIsBottomLeft && n.pixelStorei(n.UNPACK_FLIP_Y_WEBGL, !1);\n    const [r, i] = zo(e);\n    return !t.l || r === t.i.canvas.width && i === t.i.canvas.height || (t.i.canvas.width = r, t.i.canvas.height = i), [\n        r,\n        i\n    ];\n}\nfunction $o(t, e, n) {\n    t.m || console.error(\"No wasm multistream support detected: ensure dependency inclusion of :gl_graph_runner_internal_multi_input target\");\n    const r = new Uint32Array(e.length);\n    for(let n = 0; n < e.length; n++)r[n] = t.i.stringToNewUTF8(e[n]);\n    e = t.i._malloc(4 * r.length), t.i.HEAPU32.set(r, e >> 2), n(e);\n    for (const e of r)t.i._free(e);\n    t.i._free(e);\n}\nfunction qo(t, e, n) {\n    t.i.simpleListeners = t.i.simpleListeners || {}, t.i.simpleListeners[e] = n;\n}\nfunction Jo(t, e, n) {\n    let r = [];\n    t.i.simpleListeners = t.i.simpleListeners || {}, t.i.simpleListeners[e] = (t, e, i)=>{\n        e ? (n(r, i), r = []) : r.push(t);\n    };\n}\nXo.forVisionTasks = function(t) {\n    return Vo(\"vision\", t);\n}, Xo.forTextTasks = function(t) {\n    return Vo(\"text\", t);\n}, Xo.forGenAiExperimentalTasks = function(t) {\n    return Vo(\"genai_experimental\", t);\n}, Xo.forGenAiTasks = function(t) {\n    return Vo(\"genai\", t);\n}, Xo.forAudioTasks = function(t) {\n    return Vo(\"audio\", t);\n}, Xo.isSimdSupported = function() {\n    return jo();\n};\nasync function Zo(t, e, n, r) {\n    return t = await (async (t, e, n, r, i)=>{\n        if (e && await Wo(e), !self.ModuleFactory) throw Error(\"ModuleFactory not set.\");\n        if (n && (await Wo(n), !self.ModuleFactory)) throw Error(\"ModuleFactory not set.\");\n        return self.Module && i && ((e = self.Module).locateFile = i.locateFile, i.mainScriptUrlOrBlob && (e.mainScriptUrlOrBlob = i.mainScriptUrlOrBlob)), i = await self.ModuleFactory(self.Module || i), self.ModuleFactory = self.Module = void 0, new t(i, r);\n    })(t, n.wasmLoaderPath, n.assetLoaderPath, e, {\n        locateFile: (t)=>t.endsWith(\".wasm\") ? n.wasmBinaryPath.toString() : n.assetBinaryPath && t.endsWith(\".data\") ? n.assetBinaryPath.toString() : t\n    }), await t.o(r), t;\n}\nfunction Qo(t, e) {\n    const n = Rn(t.baseOptions, Ms, 1) || new Ms;\n    \"string\" == typeof e ? (dn(n, 2, Me(e)), dn(n, 1)) : e instanceof Uint8Array && (dn(n, 1, ae(e, !1, !1)), dn(n, 2)), Cn(t.baseOptions, 0, 1, n);\n}\nfunction ta(t) {\n    try {\n        const e = t.K.length;\n        if (1 === e) throw Error(t.K[0].message);\n        if (1 < e) throw Error(\"Encountered multiple errors: \" + t.K.map((t)=>t.message).join(\", \"));\n    } finally{\n        t.K = [];\n    }\n}\nfunction ea(t, e) {\n    t.J = Math.max(t.J, e);\n}\nfunction na(t, e) {\n    t.C = new Li, ki(t.C, \"PassThroughCalculator\"), xi(t.C, \"free_memory\"), Si(t.C, \"free_memory_unused_out\"), Ii(e, \"free_memory\"), Oi(e, t.C);\n}\nfunction ra(t, e) {\n    xi(t.C, e), Si(t.C, e + \"_unused_out\");\n}\nfunction ia(t) {\n    t.g.addBoolToStream(!0, \"free_memory\", t.J);\n}\nvar sa = class {\n    constructor(t){\n        this.g = t, this.K = [], this.J = 0, this.g.setAutoRenderToScreen(!1);\n    }\n    l(t, e = !0) {\n        if (e) {\n            const e = t.baseOptions || {};\n            if (t.baseOptions?.modelAssetBuffer && t.baseOptions?.modelAssetPath) throw Error(\"Cannot set both baseOptions.modelAssetPath and baseOptions.modelAssetBuffer\");\n            if (!(Rn(this.baseOptions, Ms, 1)?.g() || Rn(this.baseOptions, Ms, 1)?.h() || t.baseOptions?.modelAssetBuffer || t.baseOptions?.modelAssetPath)) throw Error(\"Either baseOptions.modelAssetPath or baseOptions.modelAssetBuffer must be set\");\n            if (function(t, e) {\n                let n = Rn(t.baseOptions, Fs, 3);\n                if (!n) {\n                    var r = n = new Fs, i = new pi;\n                    On(r, 4, Rs, i);\n                }\n                \"delegate\" in e && (\"GPU\" === e.delegate ? (e = n, r = new li, On(e, 2, Rs, r)) : (e = n, r = new pi, On(e, 4, Rs, r))), Cn(t.baseOptions, 0, 3, n);\n            }(this, e), e.modelAssetPath) return fetch(e.modelAssetPath.toString()).then((t)=>{\n                if (t.ok) return t.arrayBuffer();\n                throw Error(`Failed to fetch model: ${e.modelAssetPath} (${t.status})`);\n            }).then((t)=>{\n                try {\n                    this.g.i.FS_unlink(\"/model.dat\");\n                } catch  {}\n                this.g.i.FS_createDataFile(\"/\", \"model.dat\", new Uint8Array(t), !0, !1, !1), Qo(this, \"/model.dat\"), this.m(), this.L();\n            });\n            if (e.modelAssetBuffer instanceof Uint8Array) Qo(this, e.modelAssetBuffer);\n            else if (e.modelAssetBuffer) return (async function(t) {\n                const e = [];\n                for(var n = 0;;){\n                    const { done: r, value: i } = await t.read();\n                    if (r) break;\n                    e.push(i), n += i.length;\n                }\n                if (0 === e.length) return new Uint8Array(0);\n                if (1 === e.length) return e[0];\n                t = new Uint8Array(n), n = 0;\n                for (const r of e)t.set(r, n), n += r.length;\n                return t;\n            })(e.modelAssetBuffer).then((t)=>{\n                Qo(this, t), this.m(), this.L();\n            });\n        }\n        return this.m(), this.L(), Promise.resolve();\n    }\n    L() {}\n    fa() {\n        let t;\n        if (this.g.fa((e)=>{\n            t = Bi(e);\n        }), !t) throw Error(\"Failed to retrieve CalculatorGraphConfig\");\n        return t;\n    }\n    setGraph(t, e) {\n        this.g.attachErrorListener((t, e)=>{\n            this.K.push(Error(e));\n        }), this.g.Ma(), this.g.setGraph(t, e), this.C = void 0, ta(this);\n    }\n    finishProcessing() {\n        this.g.finishProcessing(), ta(this);\n    }\n    close() {\n        this.C = void 0, this.g.closeGraph();\n    }\n};\nfunction oa(t, e) {\n    if (!t) throw Error(`Unable to obtain required WebGL resource: ${e}`);\n    return t;\n}\nsa.prototype.close = sa.prototype.close, function(e, n) {\n    e = e.split(\".\");\n    var r, i = t;\n    e[0] in i || void 0 === i.execScript || i.execScript(\"var \" + e[0]);\n    for(; e.length && (r = e.shift());)e.length || void 0 === n ? i = i[r] && i[r] !== Object.prototype[r] ? i[r] : i[r] = {} : i[r] = n;\n}(\"TaskRunner\", sa);\nclass aa {\n    constructor(t, e, n, r){\n        this.g = t, this.h = e, this.m = n, this.l = r;\n    }\n    bind() {\n        this.g.bindVertexArray(this.h);\n    }\n    close() {\n        this.g.deleteVertexArray(this.h), this.g.deleteBuffer(this.m), this.g.deleteBuffer(this.l);\n    }\n}\nfunction ha(t, e, n) {\n    const r = t.g;\n    if (n = oa(r.createShader(n), \"Failed to create WebGL shader\"), r.shaderSource(n, e), r.compileShader(n), !r.getShaderParameter(n, r.COMPILE_STATUS)) throw Error(`Could not compile WebGL shader: ${r.getShaderInfoLog(n)}`);\n    return r.attachShader(t.h, n), n;\n}\nfunction ca(t, e) {\n    const n = t.g, r = oa(n.createVertexArray(), \"Failed to create vertex array\");\n    n.bindVertexArray(r);\n    const i = oa(n.createBuffer(), \"Failed to create buffer\");\n    n.bindBuffer(n.ARRAY_BUFFER, i), n.enableVertexAttribArray(t.K), n.vertexAttribPointer(t.K, 2, n.FLOAT, !1, 0, 0), n.bufferData(n.ARRAY_BUFFER, new Float32Array([\n        -1,\n        -1,\n        -1,\n        1,\n        1,\n        1,\n        1,\n        -1\n    ]), n.STATIC_DRAW);\n    const s = oa(n.createBuffer(), \"Failed to create buffer\");\n    return n.bindBuffer(n.ARRAY_BUFFER, s), n.enableVertexAttribArray(t.J), n.vertexAttribPointer(t.J, 2, n.FLOAT, !1, 0, 0), n.bufferData(n.ARRAY_BUFFER, new Float32Array(e ? [\n        0,\n        1,\n        0,\n        0,\n        1,\n        0,\n        1,\n        1\n    ] : [\n        0,\n        0,\n        0,\n        1,\n        1,\n        1,\n        1,\n        0\n    ]), n.STATIC_DRAW), n.bindBuffer(n.ARRAY_BUFFER, null), n.bindVertexArray(null), new aa(n, r, i, s);\n}\nfunction ua(t, e) {\n    if (t.g) {\n        if (e !== t.g) throw Error(\"Cannot change GL context once initialized\");\n    } else t.g = e;\n}\nfunction la(t, e, n, r) {\n    return ua(t, e), t.h || (t.m(), t.D()), n ? (t.v || (t.v = ca(t, !0)), n = t.v) : (t.A || (t.A = ca(t, !1)), n = t.A), e.useProgram(t.h), n.bind(), t.l(), t = r(), n.g.bindVertexArray(null), t;\n}\nfunction da(t, e, n) {\n    return ua(t, e), t = oa(e.createTexture(), \"Failed to create texture\"), e.bindTexture(e.TEXTURE_2D, t), e.texParameteri(e.TEXTURE_2D, e.TEXTURE_WRAP_S, e.CLAMP_TO_EDGE), e.texParameteri(e.TEXTURE_2D, e.TEXTURE_WRAP_T, e.CLAMP_TO_EDGE), e.texParameteri(e.TEXTURE_2D, e.TEXTURE_MIN_FILTER, n ?? e.LINEAR), e.texParameteri(e.TEXTURE_2D, e.TEXTURE_MAG_FILTER, n ?? e.LINEAR), e.bindTexture(e.TEXTURE_2D, null), t;\n}\nfunction fa(t, e, n) {\n    ua(t, e), t.u || (t.u = oa(e.createFramebuffer(), \"Failed to create framebuffe.\")), e.bindFramebuffer(e.FRAMEBUFFER, t.u), e.framebufferTexture2D(e.FRAMEBUFFER, e.COLOR_ATTACHMENT0, e.TEXTURE_2D, n, 0);\n}\nfunction pa(t) {\n    t.g?.bindFramebuffer(t.g.FRAMEBUFFER, null);\n}\nvar ga = class {\n    H() {\n        return \"\\n  precision mediump float;\\n  varying vec2 vTex;\\n  uniform sampler2D inputTexture;\\n  void main() {\\n    gl_FragColor = texture2D(inputTexture, vTex);\\n  }\\n \";\n    }\n    m() {\n        const t = this.g;\n        if (this.h = oa(t.createProgram(), \"Failed to create WebGL program\"), this.ba = ha(this, \"\\n  attribute vec2 aVertex;\\n  attribute vec2 aTex;\\n  varying vec2 vTex;\\n  void main(void) {\\n    gl_Position = vec4(aVertex, 0.0, 1.0);\\n    vTex = aTex;\\n  }\", t.VERTEX_SHADER), this.aa = ha(this, this.H(), t.FRAGMENT_SHADER), t.linkProgram(this.h), !t.getProgramParameter(this.h, t.LINK_STATUS)) throw Error(`Error during program linking: ${t.getProgramInfoLog(this.h)}`);\n        this.K = t.getAttribLocation(this.h, \"aVertex\"), this.J = t.getAttribLocation(this.h, \"aTex\");\n    }\n    D() {}\n    l() {}\n    close() {\n        if (this.h) {\n            const t = this.g;\n            t.deleteProgram(this.h), t.deleteShader(this.ba), t.deleteShader(this.aa);\n        }\n        this.u && this.g.deleteFramebuffer(this.u), this.A && this.A.close(), this.v && this.v.close();\n    }\n};\nvar ma = class extends ga {\n    H() {\n        return \"\\n  precision mediump float;\\n  uniform sampler2D backgroundTexture;\\n  uniform sampler2D maskTexture;\\n  uniform sampler2D colorMappingTexture;\\n  varying vec2 vTex;\\n  void main() {\\n    vec4 backgroundColor = texture2D(backgroundTexture, vTex);\\n    float category = texture2D(maskTexture, vTex).r;\\n    vec4 categoryColor = texture2D(colorMappingTexture, vec2(category, 0.0));\\n    gl_FragColor = mix(backgroundColor, categoryColor, categoryColor.a);\\n  }\\n \";\n    }\n    D() {\n        const t = this.g;\n        t.activeTexture(t.TEXTURE1), this.C = da(this, t, t.LINEAR), t.activeTexture(t.TEXTURE2), this.j = da(this, t, t.NEAREST);\n    }\n    m() {\n        super.m();\n        const t = this.g;\n        this.M = oa(t.getUniformLocation(this.h, \"backgroundTexture\"), \"Uniform location\"), this.V = oa(t.getUniformLocation(this.h, \"colorMappingTexture\"), \"Uniform location\"), this.L = oa(t.getUniformLocation(this.h, \"maskTexture\"), \"Uniform location\");\n    }\n    l() {\n        super.l();\n        const t = this.g;\n        t.uniform1i(this.L, 0), t.uniform1i(this.M, 1), t.uniform1i(this.V, 2);\n    }\n    close() {\n        this.C && this.g.deleteTexture(this.C), this.j && this.g.deleteTexture(this.j), super.close();\n    }\n}, ya = class extends ga {\n    H() {\n        return \"\\n  precision mediump float;\\n  uniform sampler2D maskTexture;\\n  uniform sampler2D defaultTexture;\\n  uniform sampler2D overlayTexture;\\n  varying vec2 vTex;\\n  void main() {\\n    float confidence = texture2D(maskTexture, vTex).r;\\n    vec4 defaultColor = texture2D(defaultTexture, vTex);\\n    vec4 overlayColor = texture2D(overlayTexture, vTex);\\n    // Apply the alpha from the overlay and merge in the default color\\n    overlayColor = mix(defaultColor, overlayColor, overlayColor.a);\\n    gl_FragColor = mix(defaultColor, overlayColor, confidence);\\n  }\\n \";\n    }\n    D() {\n        const t = this.g;\n        t.activeTexture(t.TEXTURE1), this.j = da(this, t), t.activeTexture(t.TEXTURE2), this.C = da(this, t);\n    }\n    m() {\n        super.m();\n        const t = this.g;\n        this.L = oa(t.getUniformLocation(this.h, \"defaultTexture\"), \"Uniform location\"), this.M = oa(t.getUniformLocation(this.h, \"overlayTexture\"), \"Uniform location\"), this.I = oa(t.getUniformLocation(this.h, \"maskTexture\"), \"Uniform location\");\n    }\n    l() {\n        super.l();\n        const t = this.g;\n        t.uniform1i(this.I, 0), t.uniform1i(this.L, 1), t.uniform1i(this.M, 2);\n    }\n    close() {\n        this.j && this.g.deleteTexture(this.j), this.C && this.g.deleteTexture(this.C), super.close();\n    }\n};\nfunction _a(t, e) {\n    switch(e){\n        case 0:\n            return t.g.find((t)=>t instanceof Uint8Array);\n        case 1:\n            return t.g.find((t)=>t instanceof Float32Array);\n        case 2:\n            return t.g.find((t)=>\"undefined\" != typeof WebGLTexture && t instanceof WebGLTexture);\n        default:\n            throw Error(`Type is not supported: ${e}`);\n    }\n}\nfunction va(t) {\n    var e = _a(t, 1);\n    if (!e) {\n        if (e = _a(t, 0)) e = new Float32Array(e).map((t)=>t / 255);\n        else {\n            e = new Float32Array(t.width * t.height);\n            const r = wa(t);\n            var n = Aa(t);\n            if (fa(n, r, Ea(t)), \"iPad Simulator;iPhone Simulator;iPod Simulator;iPad;iPhone;iPod\".split(\";\").includes(navigator.platform) || navigator.userAgent.includes(\"Mac\") && \"ontouchend\" in self.document) {\n                n = new Float32Array(t.width * t.height * 4), r.readPixels(0, 0, t.width, t.height, r.RGBA, r.FLOAT, n);\n                for(let t = 0, r = 0; t < e.length; ++t, r += 4)e[t] = n[r];\n            } else r.readPixels(0, 0, t.width, t.height, r.RED, r.FLOAT, e);\n        }\n        t.g.push(e);\n    }\n    return e;\n}\nfunction Ea(t) {\n    let e = _a(t, 2);\n    if (!e) {\n        const n = wa(t);\n        e = ba(t);\n        const r = va(t), i = Ta(t);\n        n.texImage2D(n.TEXTURE_2D, 0, i, t.width, t.height, 0, n.RED, n.FLOAT, r), ka(t);\n    }\n    return e;\n}\nfunction wa(t) {\n    if (!t.canvas) throw Error(\"Conversion to different image formats require that a canvas is passed when initializing the image.\");\n    return t.h || (t.h = oa(t.canvas.getContext(\"webgl2\"), \"You cannot use a canvas that is already bound to a different type of rendering context.\")), t.h;\n}\nfunction Ta(t) {\n    if (t = wa(t), !xa) if (t.getExtension(\"EXT_color_buffer_float\") && t.getExtension(\"OES_texture_float_linear\") && t.getExtension(\"EXT_float_blend\")) xa = t.R32F;\n    else {\n        if (!t.getExtension(\"EXT_color_buffer_half_float\")) throw Error(\"GPU does not fully support 4-channel float32 or float16 formats\");\n        xa = t.R16F;\n    }\n    return xa;\n}\nfunction Aa(t) {\n    return t.l || (t.l = new ga), t.l;\n}\nfunction ba(t) {\n    const e = wa(t);\n    e.viewport(0, 0, t.width, t.height), e.activeTexture(e.TEXTURE0);\n    let n = _a(t, 2);\n    return n || (n = da(Aa(t), e, t.m ? e.LINEAR : e.NEAREST), t.g.push(n), t.j = !0), e.bindTexture(e.TEXTURE_2D, n), n;\n}\nfunction ka(t) {\n    t.h.bindTexture(t.h.TEXTURE_2D, null);\n}\nvar xa, Sa = class {\n    constructor(t, e, n, r, i, s, o){\n        this.g = t, this.m = e, this.j = n, this.canvas = r, this.l = i, this.width = s, this.height = o, this.j && 0 === --La && console.error(\"You seem to be creating MPMask instances without invoking .close(). This leaks resources.\");\n    }\n    Ha() {\n        return !!_a(this, 0);\n    }\n    la() {\n        return !!_a(this, 1);\n    }\n    R() {\n        return !!_a(this, 2);\n    }\n    ka() {\n        return (e = _a(t = this, 0)) || (e = va(t), e = new Uint8Array(e.map((t)=>255 * t)), t.g.push(e)), e;\n        var t, e;\n    }\n    ja() {\n        return va(this);\n    }\n    O() {\n        return Ea(this);\n    }\n    clone() {\n        const t = [];\n        for (const e of this.g){\n            let n;\n            if (e instanceof Uint8Array) n = new Uint8Array(e);\n            else if (e instanceof Float32Array) n = new Float32Array(e);\n            else {\n                if (!(e instanceof WebGLTexture)) throw Error(`Type is not supported: ${e}`);\n                {\n                    const t = wa(this), e = Aa(this);\n                    t.activeTexture(t.TEXTURE1), n = da(e, t, this.m ? t.LINEAR : t.NEAREST), t.bindTexture(t.TEXTURE_2D, n);\n                    const r = Ta(this);\n                    t.texImage2D(t.TEXTURE_2D, 0, r, this.width, this.height, 0, t.RED, t.FLOAT, null), t.bindTexture(t.TEXTURE_2D, null), fa(e, t, n), la(e, t, !1, ()=>{\n                        ba(this), t.clearColor(0, 0, 0, 0), t.clear(t.COLOR_BUFFER_BIT), t.drawArrays(t.TRIANGLE_FAN, 0, 4), ka(this);\n                    }), pa(e), ka(this);\n                }\n            }\n            t.push(n);\n        }\n        return new Sa(t, this.m, this.R(), this.canvas, this.l, this.width, this.height);\n    }\n    close() {\n        this.j && wa(this).deleteTexture(_a(this, 2)), La = -1;\n    }\n};\nSa.prototype.close = Sa.prototype.close, Sa.prototype.clone = Sa.prototype.clone, Sa.prototype.getAsWebGLTexture = Sa.prototype.O, Sa.prototype.getAsFloat32Array = Sa.prototype.ja, Sa.prototype.getAsUint8Array = Sa.prototype.ka, Sa.prototype.hasWebGLTexture = Sa.prototype.R, Sa.prototype.hasFloat32Array = Sa.prototype.la, Sa.prototype.hasUint8Array = Sa.prototype.Ha;\nvar La = 250;\nconst Fa = {\n    color: \"white\",\n    lineWidth: 4,\n    radius: 6\n};\nfunction Ra(t) {\n    return {\n        ...Fa,\n        fillColor: (t = t || {}).color,\n        ...t\n    };\n}\nfunction Ma(t, e) {\n    return t instanceof Function ? t(e) : t;\n}\nfunction Pa(t, e, n) {\n    return Math.max(Math.min(e, n), Math.min(Math.max(e, n), t));\n}\nfunction Ca(t) {\n    if (!t.l) throw Error(\"CPU rendering requested but CanvasRenderingContext2D not provided.\");\n    return t.l;\n}\nfunction Oa(t) {\n    if (!t.j) throw Error(\"GPU rendering requested but WebGL2RenderingContext not provided.\");\n    return t.j;\n}\nfunction Ia(t, e, n) {\n    if (e.R()) n(e.O());\n    else {\n        const r = e.la() ? e.ja() : e.ka();\n        t.m = t.m ?? new ga;\n        const i = Oa(t);\n        n((t = new Sa([\n            r\n        ], e.m, !1, i.canvas, t.m, e.width, e.height)).O()), t.close();\n    }\n}\nfunction Ua(t, e, n, r) {\n    const i = function(t) {\n        return t.g || (t.g = new ma), t.g;\n    }(t), s = Oa(t), o = Array.isArray(n) ? new ImageData(new Uint8ClampedArray(n), 1, 1) : n;\n    la(i, s, !0, ()=>{\n        !function(t, e, n, r) {\n            const i = t.g;\n            if (i.activeTexture(i.TEXTURE0), i.bindTexture(i.TEXTURE_2D, e), i.activeTexture(i.TEXTURE1), i.bindTexture(i.TEXTURE_2D, t.C), i.texImage2D(i.TEXTURE_2D, 0, i.RGBA, i.RGBA, i.UNSIGNED_BYTE, n), t.I && function(t, e) {\n                if (t !== e) return !1;\n                t = t.entries(), e = e.entries();\n                for (const [r, i] of t){\n                    t = r;\n                    const s = i;\n                    var n = e.next();\n                    if (n.done) return !1;\n                    const [o, a] = n.value;\n                    if (n = a, t !== o || s[0] !== n[0] || s[1] !== n[1] || s[2] !== n[2] || s[3] !== n[3]) return !1;\n                }\n                return !!e.next().done;\n            }(t.I, r)) i.activeTexture(i.TEXTURE2), i.bindTexture(i.TEXTURE_2D, t.j);\n            else {\n                t.I = r;\n                const e = Array(1024).fill(0);\n                r.forEach((t, n)=>{\n                    if (4 !== t.length) throw Error(`Color at index ${n} is not a four-channel value.`);\n                    e[4 * n] = t[0], e[4 * n + 1] = t[1], e[4 * n + 2] = t[2], e[4 * n + 3] = t[3];\n                }), i.activeTexture(i.TEXTURE2), i.bindTexture(i.TEXTURE_2D, t.j), i.texImage2D(i.TEXTURE_2D, 0, i.RGBA, 256, 1, 0, i.RGBA, i.UNSIGNED_BYTE, new Uint8Array(e));\n            }\n        }(i, e, o, r), s.clearColor(0, 0, 0, 0), s.clear(s.COLOR_BUFFER_BIT), s.drawArrays(s.TRIANGLE_FAN, 0, 4);\n        const t = i.g;\n        t.activeTexture(t.TEXTURE0), t.bindTexture(t.TEXTURE_2D, null), t.activeTexture(t.TEXTURE1), t.bindTexture(t.TEXTURE_2D, null), t.activeTexture(t.TEXTURE2), t.bindTexture(t.TEXTURE_2D, null);\n    });\n}\nfunction Da(t, e, n, r) {\n    const i = Oa(t), s = function(t) {\n        return t.h || (t.h = new ya), t.h;\n    }(t), o = Array.isArray(n) ? new ImageData(new Uint8ClampedArray(n), 1, 1) : n, a = Array.isArray(r) ? new ImageData(new Uint8ClampedArray(r), 1, 1) : r;\n    la(s, i, !0, ()=>{\n        var t = s.g;\n        t.activeTexture(t.TEXTURE0), t.bindTexture(t.TEXTURE_2D, e), t.activeTexture(t.TEXTURE1), t.bindTexture(t.TEXTURE_2D, s.j), t.texImage2D(t.TEXTURE_2D, 0, t.RGBA, t.RGBA, t.UNSIGNED_BYTE, o), t.activeTexture(t.TEXTURE2), t.bindTexture(t.TEXTURE_2D, s.C), t.texImage2D(t.TEXTURE_2D, 0, t.RGBA, t.RGBA, t.UNSIGNED_BYTE, a), i.clearColor(0, 0, 0, 0), i.clear(i.COLOR_BUFFER_BIT), i.drawArrays(i.TRIANGLE_FAN, 0, 4), i.bindTexture(i.TEXTURE_2D, null), (t = s.g).activeTexture(t.TEXTURE0), t.bindTexture(t.TEXTURE_2D, null), t.activeTexture(t.TEXTURE1), t.bindTexture(t.TEXTURE_2D, null), t.activeTexture(t.TEXTURE2), t.bindTexture(t.TEXTURE_2D, null);\n    });\n}\nvar Na = class {\n    constructor(t, e){\n        t instanceof CanvasRenderingContext2D || t instanceof OffscreenCanvasRenderingContext2D ? (this.l = t, this.j = e) : this.j = t;\n    }\n    Aa(t, e) {\n        if (t) {\n            var n = Ca(this);\n            e = Ra(e), n.save();\n            var r = n.canvas, i = 0;\n            for (const s of t)n.fillStyle = Ma(e.fillColor, {\n                index: i,\n                from: s\n            }), n.strokeStyle = Ma(e.color, {\n                index: i,\n                from: s\n            }), n.lineWidth = Ma(e.lineWidth, {\n                index: i,\n                from: s\n            }), (t = new Path2D).arc(s.x * r.width, s.y * r.height, Ma(e.radius, {\n                index: i,\n                from: s\n            }), 0, 2 * Math.PI), n.fill(t), n.stroke(t), ++i;\n            n.restore();\n        }\n    }\n    za(t, e, n) {\n        if (t && e) {\n            var r = Ca(this);\n            n = Ra(n), r.save();\n            var i = r.canvas, s = 0;\n            for (const o of e){\n                r.beginPath(), e = t[o.start];\n                const a = t[o.end];\n                e && a && (r.strokeStyle = Ma(n.color, {\n                    index: s,\n                    from: e,\n                    to: a\n                }), r.lineWidth = Ma(n.lineWidth, {\n                    index: s,\n                    from: e,\n                    to: a\n                }), r.moveTo(e.x * i.width, e.y * i.height), r.lineTo(a.x * i.width, a.y * i.height)), ++s, r.stroke();\n            }\n            r.restore();\n        }\n    }\n    wa(t, e) {\n        const n = Ca(this);\n        e = Ra(e), n.save(), n.beginPath(), n.lineWidth = Ma(e.lineWidth, {}), n.strokeStyle = Ma(e.color, {}), n.fillStyle = Ma(e.fillColor, {}), n.moveTo(t.originX, t.originY), n.lineTo(t.originX + t.width, t.originY), n.lineTo(t.originX + t.width, t.originY + t.height), n.lineTo(t.originX, t.originY + t.height), n.lineTo(t.originX, t.originY), n.stroke(), n.fill(), n.restore();\n    }\n    xa(t, e, n = [\n        0,\n        0,\n        0,\n        255\n    ]) {\n        this.l ? function(t, e, n, r) {\n            const i = Oa(t);\n            Ia(t, e, (e)=>{\n                Ua(t, e, n, r), (e = Ca(t)).drawImage(i.canvas, 0, 0, e.canvas.width, e.canvas.height);\n            });\n        }(this, t, n, e) : Ua(this, t.O(), n, e);\n    }\n    ya(t, e, n) {\n        this.l ? function(t, e, n, r) {\n            const i = Oa(t);\n            Ia(t, e, (e)=>{\n                Da(t, e, n, r), (e = Ca(t)).drawImage(i.canvas, 0, 0, e.canvas.width, e.canvas.height);\n            });\n        }(this, t, e, n) : Da(this, t.O(), e, n);\n    }\n    close() {\n        this.g?.close(), this.g = void 0, this.h?.close(), this.h = void 0, this.m?.close(), this.m = void 0;\n    }\n};\nfunction Ba(t, e) {\n    switch(e){\n        case 0:\n            return t.g.find((t)=>t instanceof ImageData);\n        case 1:\n            return t.g.find((t)=>\"undefined\" != typeof ImageBitmap && t instanceof ImageBitmap);\n        case 2:\n            return t.g.find((t)=>\"undefined\" != typeof WebGLTexture && t instanceof WebGLTexture);\n        default:\n            throw Error(`Type is not supported: ${e}`);\n    }\n}\nfunction Ga(t) {\n    var e = Ba(t, 0);\n    if (!e) {\n        e = Va(t);\n        const n = Xa(t), r = new Uint8Array(t.width * t.height * 4);\n        fa(n, e, ja(t)), e.readPixels(0, 0, t.width, t.height, e.RGBA, e.UNSIGNED_BYTE, r), pa(n), e = new ImageData(new Uint8ClampedArray(r.buffer), t.width, t.height), t.g.push(e);\n    }\n    return e;\n}\nfunction ja(t) {\n    let e = Ba(t, 2);\n    if (!e) {\n        const n = Va(t);\n        e = Ha(t);\n        const r = Ba(t, 1) || Ga(t);\n        n.texImage2D(n.TEXTURE_2D, 0, n.RGBA, n.RGBA, n.UNSIGNED_BYTE, r), Wa(t);\n    }\n    return e;\n}\nfunction Va(t) {\n    if (!t.canvas) throw Error(\"Conversion to different image formats require that a canvas is passed when iniitializing the image.\");\n    return t.h || (t.h = oa(t.canvas.getContext(\"webgl2\"), \"You cannot use a canvas that is already bound to a different type of rendering context.\")), t.h;\n}\nfunction Xa(t) {\n    return t.l || (t.l = new ga), t.l;\n}\nfunction Ha(t) {\n    const e = Va(t);\n    e.viewport(0, 0, t.width, t.height), e.activeTexture(e.TEXTURE0);\n    let n = Ba(t, 2);\n    return n || (n = da(Xa(t), e), t.g.push(n), t.m = !0), e.bindTexture(e.TEXTURE_2D, n), n;\n}\nfunction Wa(t) {\n    t.h.bindTexture(t.h.TEXTURE_2D, null);\n}\nfunction za(t) {\n    const e = Va(t);\n    return la(Xa(t), e, !0, ()=>(function(t, e) {\n            const n = t.canvas;\n            if (n.width === t.width && n.height === t.height) return e();\n            const r = n.width, i = n.height;\n            return n.width = t.width, n.height = t.height, t = e(), n.width = r, n.height = i, t;\n        })(t, ()=>{\n            if (e.bindFramebuffer(e.FRAMEBUFFER, null), e.clearColor(0, 0, 0, 0), e.clear(e.COLOR_BUFFER_BIT), e.drawArrays(e.TRIANGLE_FAN, 0, 4), !(t.canvas instanceof OffscreenCanvas)) throw Error(\"Conversion to ImageBitmap requires that the MediaPipe Tasks is initialized with an OffscreenCanvas\");\n            return t.canvas.transferToImageBitmap();\n        }));\n}\nNa.prototype.close = Na.prototype.close, Na.prototype.drawConfidenceMask = Na.prototype.ya, Na.prototype.drawCategoryMask = Na.prototype.xa, Na.prototype.drawBoundingBox = Na.prototype.wa, Na.prototype.drawConnectors = Na.prototype.za, Na.prototype.drawLandmarks = Na.prototype.Aa, Na.lerp = function(t, e, n, r, i) {\n    return Pa(r * (1 - (t - e) / (n - e)) + i * (1 - (n - t) / (n - e)), r, i);\n}, Na.clamp = Pa;\nvar Ka = class {\n    constructor(t, e, n, r, i, s, o){\n        this.g = t, this.j = e, this.m = n, this.canvas = r, this.l = i, this.width = s, this.height = o, (this.j || this.m) && 0 === --Ya && console.error(\"You seem to be creating MPImage instances without invoking .close(). This leaks resources.\");\n    }\n    Ga() {\n        return !!Ba(this, 0);\n    }\n    ma() {\n        return !!Ba(this, 1);\n    }\n    R() {\n        return !!Ba(this, 2);\n    }\n    Ea() {\n        return Ga(this);\n    }\n    Da() {\n        var t = Ba(this, 1);\n        return t || (ja(this), Ha(this), t = za(this), Wa(this), this.g.push(t), this.j = !0), t;\n    }\n    O() {\n        return ja(this);\n    }\n    clone() {\n        const t = [];\n        for (const e of this.g){\n            let n;\n            if (e instanceof ImageData) n = new ImageData(e.data, this.width, this.height);\n            else if (e instanceof WebGLTexture) {\n                const t = Va(this), e = Xa(this);\n                t.activeTexture(t.TEXTURE1), n = da(e, t), t.bindTexture(t.TEXTURE_2D, n), t.texImage2D(t.TEXTURE_2D, 0, t.RGBA, this.width, this.height, 0, t.RGBA, t.UNSIGNED_BYTE, null), t.bindTexture(t.TEXTURE_2D, null), fa(e, t, n), la(e, t, !1, ()=>{\n                    Ha(this), t.clearColor(0, 0, 0, 0), t.clear(t.COLOR_BUFFER_BIT), t.drawArrays(t.TRIANGLE_FAN, 0, 4), Wa(this);\n                }), pa(e), Wa(this);\n            } else {\n                if (!(e instanceof ImageBitmap)) throw Error(`Type is not supported: ${e}`);\n                ja(this), Ha(this), n = za(this), Wa(this);\n            }\n            t.push(n);\n        }\n        return new Ka(t, this.ma(), this.R(), this.canvas, this.l, this.width, this.height);\n    }\n    close() {\n        this.j && Ba(this, 1).close(), this.m && Va(this).deleteTexture(Ba(this, 2)), Ya = -1;\n    }\n};\nKa.prototype.close = Ka.prototype.close, Ka.prototype.clone = Ka.prototype.clone, Ka.prototype.getAsWebGLTexture = Ka.prototype.O, Ka.prototype.getAsImageBitmap = Ka.prototype.Da, Ka.prototype.getAsImageData = Ka.prototype.Ea, Ka.prototype.hasWebGLTexture = Ka.prototype.R, Ka.prototype.hasImageBitmap = Ka.prototype.ma, Ka.prototype.hasImageData = Ka.prototype.Ga;\nvar Ya = 250;\nfunction $a(...t) {\n    return t.map(([t, e])=>({\n            start: t,\n            end: e\n        }));\n}\nconst qa = function(t) {\n    return class extends t {\n        Ma() {\n            this.i._registerModelResourcesGraphService();\n        }\n    };\n}((Ja = class {\n    constructor(t, e){\n        this.l = !0, this.i = t, this.g = null, this.h = 0, this.m = \"function\" == typeof this.i._addIntToInputStream, void 0 !== e ? this.i.canvas = e : Ho() ? this.i.canvas = new OffscreenCanvas(1, 1) : (console.warn(\"OffscreenCanvas not supported and GraphRunner constructor glCanvas parameter is undefined. Creating backup canvas.\"), this.i.canvas = document.createElement(\"canvas\"));\n    }\n    async initializeGraph(t) {\n        const e = await (await fetch(t)).arrayBuffer();\n        t = !(t.endsWith(\".pbtxt\") || t.endsWith(\".textproto\")), this.setGraph(new Uint8Array(e), t);\n    }\n    setGraphFromString(t) {\n        this.setGraph((new TextEncoder).encode(t), !1);\n    }\n    setGraph(t, e) {\n        const n = t.length, r = this.i._malloc(n);\n        this.i.HEAPU8.set(t, r), e ? this.i._changeBinaryGraph(n, r) : this.i._changeTextGraph(n, r), this.i._free(r);\n    }\n    configureAudio(t, e, n, r, i) {\n        this.i._configureAudio || console.warn('Attempting to use configureAudio without support for input audio. Is build dep \":gl_graph_runner_audio\" missing?'), Ko(this, r || \"input_audio\", (r)=>{\n            Ko(this, i = i || \"audio_header\", (i)=>{\n                this.i._configureAudio(r, i, t, e, n);\n            });\n        });\n    }\n    setAutoResizeCanvas(t) {\n        this.l = t;\n    }\n    setAutoRenderToScreen(t) {\n        this.i._setAutoRenderToScreen(t);\n    }\n    setGpuBufferVerticalFlip(t) {\n        this.i.gpuOriginForWebTexturesIsBottomLeft = t;\n    }\n    fa(t) {\n        qo(this, \"__graph_config__\", (e)=>{\n            t(e);\n        }), Ko(this, \"__graph_config__\", (t)=>{\n            this.i._getGraphConfig(t, void 0);\n        }), delete this.i.simpleListeners.__graph_config__;\n    }\n    attachErrorListener(t) {\n        this.i.errorListener = t;\n    }\n    attachEmptyPacketListener(t, e) {\n        this.i.emptyPacketListeners = this.i.emptyPacketListeners || {}, this.i.emptyPacketListeners[t] = e;\n    }\n    addAudioToStream(t, e, n) {\n        this.addAudioToStreamWithShape(t, 0, 0, e, n);\n    }\n    addAudioToStreamWithShape(t, e, n, r, i) {\n        const s = 4 * t.length;\n        this.h !== s && (this.g && this.i._free(this.g), this.g = this.i._malloc(s), this.h = s), this.i.HEAPF32.set(t, this.g / 4), Ko(this, r, (t)=>{\n            this.i._addAudioToInputStream(this.g, e, n, t, i);\n        });\n    }\n    addGpuBufferToStream(t, e, n) {\n        Ko(this, e, (e)=>{\n            const [r, i] = Yo(this, t, e);\n            this.i._addBoundTextureToStream(e, r, i, n);\n        });\n    }\n    addBoolToStream(t, e, n) {\n        Ko(this, e, (e)=>{\n            this.i._addBoolToInputStream(t, e, n);\n        });\n    }\n    addDoubleToStream(t, e, n) {\n        Ko(this, e, (e)=>{\n            this.i._addDoubleToInputStream(t, e, n);\n        });\n    }\n    addFloatToStream(t, e, n) {\n        Ko(this, e, (e)=>{\n            this.i._addFloatToInputStream(t, e, n);\n        });\n    }\n    addIntToStream(t, e, n) {\n        Ko(this, e, (e)=>{\n            this.i._addIntToInputStream(t, e, n);\n        });\n    }\n    addUintToStream(t, e, n) {\n        Ko(this, e, (e)=>{\n            this.i._addUintToInputStream(t, e, n);\n        });\n    }\n    addStringToStream(t, e, n) {\n        Ko(this, e, (e)=>{\n            Ko(this, t, (t)=>{\n                this.i._addStringToInputStream(t, e, n);\n            });\n        });\n    }\n    addStringRecordToStream(t, e, n) {\n        Ko(this, e, (e)=>{\n            $o(this, Object.keys(t), (r)=>{\n                $o(this, Object.values(t), (i)=>{\n                    this.i._addFlatHashMapToInputStream(r, i, Object.keys(t).length, e, n);\n                });\n            });\n        });\n    }\n    addProtoToStream(t, e, n, r) {\n        Ko(this, n, (n)=>{\n            Ko(this, e, (e)=>{\n                const i = this.i._malloc(t.length);\n                this.i.HEAPU8.set(t, i), this.i._addProtoToInputStream(i, t.length, e, n, r), this.i._free(i);\n            });\n        });\n    }\n    addEmptyPacketToStream(t, e) {\n        Ko(this, t, (t)=>{\n            this.i._addEmptyPacketToInputStream(t, e);\n        });\n    }\n    addBoolVectorToStream(t, e, n) {\n        Ko(this, e, (e)=>{\n            const r = this.i._allocateBoolVector(t.length);\n            if (!r) throw Error(\"Unable to allocate new bool vector on heap.\");\n            for (const e of t)this.i._addBoolVectorEntry(r, e);\n            this.i._addBoolVectorToInputStream(r, e, n);\n        });\n    }\n    addDoubleVectorToStream(t, e, n) {\n        Ko(this, e, (e)=>{\n            const r = this.i._allocateDoubleVector(t.length);\n            if (!r) throw Error(\"Unable to allocate new double vector on heap.\");\n            for (const e of t)this.i._addDoubleVectorEntry(r, e);\n            this.i._addDoubleVectorToInputStream(r, e, n);\n        });\n    }\n    addFloatVectorToStream(t, e, n) {\n        Ko(this, e, (e)=>{\n            const r = this.i._allocateFloatVector(t.length);\n            if (!r) throw Error(\"Unable to allocate new float vector on heap.\");\n            for (const e of t)this.i._addFloatVectorEntry(r, e);\n            this.i._addFloatVectorToInputStream(r, e, n);\n        });\n    }\n    addIntVectorToStream(t, e, n) {\n        Ko(this, e, (e)=>{\n            const r = this.i._allocateIntVector(t.length);\n            if (!r) throw Error(\"Unable to allocate new int vector on heap.\");\n            for (const e of t)this.i._addIntVectorEntry(r, e);\n            this.i._addIntVectorToInputStream(r, e, n);\n        });\n    }\n    addUintVectorToStream(t, e, n) {\n        Ko(this, e, (e)=>{\n            const r = this.i._allocateUintVector(t.length);\n            if (!r) throw Error(\"Unable to allocate new unsigned int vector on heap.\");\n            for (const e of t)this.i._addUintVectorEntry(r, e);\n            this.i._addUintVectorToInputStream(r, e, n);\n        });\n    }\n    addStringVectorToStream(t, e, n) {\n        Ko(this, e, (e)=>{\n            const r = this.i._allocateStringVector(t.length);\n            if (!r) throw Error(\"Unable to allocate new string vector on heap.\");\n            for (const e of t)Ko(this, e, (t)=>{\n                this.i._addStringVectorEntry(r, t);\n            });\n            this.i._addStringVectorToInputStream(r, e, n);\n        });\n    }\n    addBoolToInputSidePacket(t, e) {\n        Ko(this, e, (e)=>{\n            this.i._addBoolToInputSidePacket(t, e);\n        });\n    }\n    addDoubleToInputSidePacket(t, e) {\n        Ko(this, e, (e)=>{\n            this.i._addDoubleToInputSidePacket(t, e);\n        });\n    }\n    addFloatToInputSidePacket(t, e) {\n        Ko(this, e, (e)=>{\n            this.i._addFloatToInputSidePacket(t, e);\n        });\n    }\n    addIntToInputSidePacket(t, e) {\n        Ko(this, e, (e)=>{\n            this.i._addIntToInputSidePacket(t, e);\n        });\n    }\n    addUintToInputSidePacket(t, e) {\n        Ko(this, e, (e)=>{\n            this.i._addUintToInputSidePacket(t, e);\n        });\n    }\n    addStringToInputSidePacket(t, e) {\n        Ko(this, e, (e)=>{\n            Ko(this, t, (t)=>{\n                this.i._addStringToInputSidePacket(t, e);\n            });\n        });\n    }\n    addProtoToInputSidePacket(t, e, n) {\n        Ko(this, n, (n)=>{\n            Ko(this, e, (e)=>{\n                const r = this.i._malloc(t.length);\n                this.i.HEAPU8.set(t, r), this.i._addProtoToInputSidePacket(r, t.length, e, n), this.i._free(r);\n            });\n        });\n    }\n    addBoolVectorToInputSidePacket(t, e) {\n        Ko(this, e, (e)=>{\n            const n = this.i._allocateBoolVector(t.length);\n            if (!n) throw Error(\"Unable to allocate new bool vector on heap.\");\n            for (const e of t)this.i._addBoolVectorEntry(n, e);\n            this.i._addBoolVectorToInputSidePacket(n, e);\n        });\n    }\n    addDoubleVectorToInputSidePacket(t, e) {\n        Ko(this, e, (e)=>{\n            const n = this.i._allocateDoubleVector(t.length);\n            if (!n) throw Error(\"Unable to allocate new double vector on heap.\");\n            for (const e of t)this.i._addDoubleVectorEntry(n, e);\n            this.i._addDoubleVectorToInputSidePacket(n, e);\n        });\n    }\n    addFloatVectorToInputSidePacket(t, e) {\n        Ko(this, e, (e)=>{\n            const n = this.i._allocateFloatVector(t.length);\n            if (!n) throw Error(\"Unable to allocate new float vector on heap.\");\n            for (const e of t)this.i._addFloatVectorEntry(n, e);\n            this.i._addFloatVectorToInputSidePacket(n, e);\n        });\n    }\n    addIntVectorToInputSidePacket(t, e) {\n        Ko(this, e, (e)=>{\n            const n = this.i._allocateIntVector(t.length);\n            if (!n) throw Error(\"Unable to allocate new int vector on heap.\");\n            for (const e of t)this.i._addIntVectorEntry(n, e);\n            this.i._addIntVectorToInputSidePacket(n, e);\n        });\n    }\n    addUintVectorToInputSidePacket(t, e) {\n        Ko(this, e, (e)=>{\n            const n = this.i._allocateUintVector(t.length);\n            if (!n) throw Error(\"Unable to allocate new unsigned int vector on heap.\");\n            for (const e of t)this.i._addUintVectorEntry(n, e);\n            this.i._addUintVectorToInputSidePacket(n, e);\n        });\n    }\n    addStringVectorToInputSidePacket(t, e) {\n        Ko(this, e, (e)=>{\n            const n = this.i._allocateStringVector(t.length);\n            if (!n) throw Error(\"Unable to allocate new string vector on heap.\");\n            for (const e of t)Ko(this, e, (t)=>{\n                this.i._addStringVectorEntry(n, t);\n            });\n            this.i._addStringVectorToInputSidePacket(n, e);\n        });\n    }\n    attachBoolListener(t, e) {\n        qo(this, t, e), Ko(this, t, (t)=>{\n            this.i._attachBoolListener(t);\n        });\n    }\n    attachBoolVectorListener(t, e) {\n        Jo(this, t, e), Ko(this, t, (t)=>{\n            this.i._attachBoolVectorListener(t);\n        });\n    }\n    attachIntListener(t, e) {\n        qo(this, t, e), Ko(this, t, (t)=>{\n            this.i._attachIntListener(t);\n        });\n    }\n    attachIntVectorListener(t, e) {\n        Jo(this, t, e), Ko(this, t, (t)=>{\n            this.i._attachIntVectorListener(t);\n        });\n    }\n    attachUintListener(t, e) {\n        qo(this, t, e), Ko(this, t, (t)=>{\n            this.i._attachUintListener(t);\n        });\n    }\n    attachUintVectorListener(t, e) {\n        Jo(this, t, e), Ko(this, t, (t)=>{\n            this.i._attachUintVectorListener(t);\n        });\n    }\n    attachDoubleListener(t, e) {\n        qo(this, t, e), Ko(this, t, (t)=>{\n            this.i._attachDoubleListener(t);\n        });\n    }\n    attachDoubleVectorListener(t, e) {\n        Jo(this, t, e), Ko(this, t, (t)=>{\n            this.i._attachDoubleVectorListener(t);\n        });\n    }\n    attachFloatListener(t, e) {\n        qo(this, t, e), Ko(this, t, (t)=>{\n            this.i._attachFloatListener(t);\n        });\n    }\n    attachFloatVectorListener(t, e) {\n        Jo(this, t, e), Ko(this, t, (t)=>{\n            this.i._attachFloatVectorListener(t);\n        });\n    }\n    attachStringListener(t, e) {\n        qo(this, t, e), Ko(this, t, (t)=>{\n            this.i._attachStringListener(t);\n        });\n    }\n    attachStringVectorListener(t, e) {\n        Jo(this, t, e), Ko(this, t, (t)=>{\n            this.i._attachStringVectorListener(t);\n        });\n    }\n    attachProtoListener(t, e, n) {\n        qo(this, t, e), Ko(this, t, (t)=>{\n            this.i._attachProtoListener(t, n || !1);\n        });\n    }\n    attachProtoVectorListener(t, e, n) {\n        Jo(this, t, e), Ko(this, t, (t)=>{\n            this.i._attachProtoVectorListener(t, n || !1);\n        });\n    }\n    attachAudioListener(t, e, n) {\n        this.i._attachAudioListener || console.warn('Attempting to use attachAudioListener without support for output audio. Is build dep \":gl_graph_runner_audio_out\" missing?'), qo(this, t, (t, n)=>{\n            t = new Float32Array(t.buffer, t.byteOffset, t.length / 4), e(t, n);\n        }), Ko(this, t, (t)=>{\n            this.i._attachAudioListener(t, n || !1);\n        });\n    }\n    finishProcessing() {\n        this.i._waitUntilIdle();\n    }\n    closeGraph() {\n        this.i._closeGraph(), this.i.simpleListeners = void 0, this.i.emptyPacketListeners = void 0;\n    }\n}, class extends Ja {\n    get ha() {\n        return this.i;\n    }\n    sa(t, e, n) {\n        Ko(this, e, (e)=>{\n            const [r, i] = Yo(this, t, e);\n            this.ha._addBoundTextureAsImageToStream(e, r, i, n);\n        });\n    }\n    W(t, e) {\n        qo(this, t, e), Ko(this, t, (t)=>{\n            this.ha._attachImageListener(t);\n        });\n    }\n    da(t, e) {\n        Jo(this, t, e), Ko(this, t, (t)=>{\n            this.ha._attachImageVectorListener(t);\n        });\n    }\n}));\nvar Ja, Za = class extends qa {\n};\nasync function Qa(t, e, n) {\n    return async function(t, e, n, r) {\n        return Zo(t, e, n, r);\n    }(t, n.canvas ?? (Ho() ? void 0 : document.createElement(\"canvas\")), e, n);\n}\nfunction th(t, e, n, r) {\n    if (t.V) {\n        const s = new fs;\n        if (n?.regionOfInterest) {\n            if (!t.ra) throw Error(\"This task doesn't support region-of-interest.\");\n            var i = n.regionOfInterest;\n            if (i.left >= i.right || i.top >= i.bottom) throw Error(\"Expected RectF with left < right and top < bottom.\");\n            if (0 > i.left || 0 > i.top || 1 < i.right || 1 < i.bottom) throw Error(\"Expected RectF values to be in [0,1].\");\n            Hn(s, 1, (i.left + i.right) / 2), Hn(s, 2, (i.top + i.bottom) / 2), Hn(s, 4, i.right - i.left), Hn(s, 3, i.bottom - i.top);\n        } else Hn(s, 1, .5), Hn(s, 2, .5), Hn(s, 4, 1), Hn(s, 3, 1);\n        if (n?.rotationDegrees) {\n            if (0 != n?.rotationDegrees % 90) throw Error(\"Expected rotation to be a multiple of 90\\xb0.\");\n            if (Hn(s, 5, -Math.PI * n.rotationDegrees / 180), 0 != n?.rotationDegrees % 180) {\n                const [t, r] = zo(e);\n                n = Gn(s, 3) * r / t, i = Gn(s, 4) * t / r, Hn(s, 4, n), Hn(s, 3, i);\n            }\n        }\n        t.g.addProtoToStream(s.g(), \"mediapipe.NormalizedRect\", t.V, r);\n    }\n    t.g.sa(e, t.ba, r ?? performance.now()), t.finishProcessing();\n}\nfunction eh(t, e, n) {\n    if (t.baseOptions?.g()) throw Error(\"Task is not initialized with image mode. 'runningMode' must be set to 'IMAGE'.\");\n    th(t, e, n, t.J + 1);\n}\nfunction nh(t, e, n, r) {\n    if (!t.baseOptions?.g()) throw Error(\"Task is not initialized with video mode. 'runningMode' must be set to 'VIDEO'.\");\n    th(t, e, n, r);\n}\nfunction rh(t, e, n, r) {\n    var i = e.data;\n    const s = e.width, o = s * (e = e.height);\n    if ((i instanceof Uint8Array || i instanceof Float32Array) && i.length !== o) throw Error(\"Unsupported channel count: \" + i.length / o);\n    return t = new Sa([\n        i\n    ], n, !1, t.g.i.canvas, t.M, s, e), r ? t.clone() : t;\n}\nvar ih = class extends sa {\n    constructor(t, e, n, r){\n        super(t), this.g = t, this.ba = e, this.V = n, this.ra = r, this.M = new ga;\n    }\n    l(t, e = !0) {\n        if (\"runningMode\" in t && Vn(this.baseOptions, 2, !!t.runningMode && \"IMAGE\" !== t.runningMode), void 0 !== t.canvas && this.g.i.canvas !== t.canvas) throw Error(\"You must create a new task to reset the canvas.\");\n        return super.l(t, e);\n    }\n    close() {\n        this.M.close(), super.close();\n    }\n};\nih.prototype.close = ih.prototype.close;\nvar sh = class extends ih {\n    constructor(t, e){\n        super(new Za(t, e), \"image_in\", \"norm_rect_in\", !1), this.j = {\n            detections: []\n        }, Cn(t = this.h = new Is, 0, 1, e = new Cs), Hn(this.h, 2, .5), Hn(this.h, 3, .3);\n    }\n    get baseOptions() {\n        return Rn(this.h, Cs, 1);\n    }\n    set baseOptions(t) {\n        Cn(this.h, 0, 1, t);\n    }\n    o(t) {\n        return \"minDetectionConfidence\" in t && Hn(this.h, 2, t.minDetectionConfidence ?? .5), \"minSuppressionThreshold\" in t && Hn(this.h, 3, t.minSuppressionThreshold ?? .3), this.l(t);\n    }\n    F(t, e) {\n        return this.j = {\n            detections: []\n        }, eh(this, t, e), this.j;\n    }\n    G(t, e, n) {\n        return this.j = {\n            detections: []\n        }, nh(this, t, n, e), this.j;\n    }\n    m() {\n        var t = new Di;\n        Ii(t, \"image_in\"), Ii(t, \"norm_rect_in\"), Ui(t, \"detections\");\n        const e = new yi;\n        Wn(e, Ds, this.h);\n        const n = new Li;\n        ki(n, \"mediapipe.tasks.vision.face_detector.FaceDetectorGraph\"), xi(n, \"IMAGE:image_in\"), xi(n, \"NORM_RECT:norm_rect_in\"), Si(n, \"DETECTIONS:detections\"), n.o(e), Oi(t, n), this.g.attachProtoVectorListener(\"detections\", (t, e)=>{\n            for (const e of t)t = ns(e), this.j.detections.push(Oo(t));\n            ea(this, e);\n        }), this.g.attachEmptyPacketListener(\"detections\", (t)=>{\n            ea(this, t);\n        }), t = t.g(), this.setGraph(new Uint8Array(t), !0);\n    }\n};\nsh.prototype.detectForVideo = sh.prototype.G, sh.prototype.detect = sh.prototype.F, sh.prototype.setOptions = sh.prototype.o, sh.createFromModelPath = async function(t, e) {\n    return Qa(sh, t, {\n        baseOptions: {\n            modelAssetPath: e\n        }\n    });\n}, sh.createFromModelBuffer = function(t, e) {\n    return Qa(sh, t, {\n        baseOptions: {\n            modelAssetBuffer: e\n        }\n    });\n}, sh.createFromOptions = function(t, e) {\n    return Qa(sh, t, e);\n};\nvar oh = $a([\n    61,\n    146\n], [\n    146,\n    91\n], [\n    91,\n    181\n], [\n    181,\n    84\n], [\n    84,\n    17\n], [\n    17,\n    314\n], [\n    314,\n    405\n], [\n    405,\n    321\n], [\n    321,\n    375\n], [\n    375,\n    291\n], [\n    61,\n    185\n], [\n    185,\n    40\n], [\n    40,\n    39\n], [\n    39,\n    37\n], [\n    37,\n    0\n], [\n    0,\n    267\n], [\n    267,\n    269\n], [\n    269,\n    270\n], [\n    270,\n    409\n], [\n    409,\n    291\n], [\n    78,\n    95\n], [\n    95,\n    88\n], [\n    88,\n    178\n], [\n    178,\n    87\n], [\n    87,\n    14\n], [\n    14,\n    317\n], [\n    317,\n    402\n], [\n    402,\n    318\n], [\n    318,\n    324\n], [\n    324,\n    308\n], [\n    78,\n    191\n], [\n    191,\n    80\n], [\n    80,\n    81\n], [\n    81,\n    82\n], [\n    82,\n    13\n], [\n    13,\n    312\n], [\n    312,\n    311\n], [\n    311,\n    310\n], [\n    310,\n    415\n], [\n    415,\n    308\n]), ah = $a([\n    263,\n    249\n], [\n    249,\n    390\n], [\n    390,\n    373\n], [\n    373,\n    374\n], [\n    374,\n    380\n], [\n    380,\n    381\n], [\n    381,\n    382\n], [\n    382,\n    362\n], [\n    263,\n    466\n], [\n    466,\n    388\n], [\n    388,\n    387\n], [\n    387,\n    386\n], [\n    386,\n    385\n], [\n    385,\n    384\n], [\n    384,\n    398\n], [\n    398,\n    362\n]), hh = $a([\n    276,\n    283\n], [\n    283,\n    282\n], [\n    282,\n    295\n], [\n    295,\n    285\n], [\n    300,\n    293\n], [\n    293,\n    334\n], [\n    334,\n    296\n], [\n    296,\n    336\n]), ch = $a([\n    474,\n    475\n], [\n    475,\n    476\n], [\n    476,\n    477\n], [\n    477,\n    474\n]), uh = $a([\n    33,\n    7\n], [\n    7,\n    163\n], [\n    163,\n    144\n], [\n    144,\n    145\n], [\n    145,\n    153\n], [\n    153,\n    154\n], [\n    154,\n    155\n], [\n    155,\n    133\n], [\n    33,\n    246\n], [\n    246,\n    161\n], [\n    161,\n    160\n], [\n    160,\n    159\n], [\n    159,\n    158\n], [\n    158,\n    157\n], [\n    157,\n    173\n], [\n    173,\n    133\n]), lh = $a([\n    46,\n    53\n], [\n    53,\n    52\n], [\n    52,\n    65\n], [\n    65,\n    55\n], [\n    70,\n    63\n], [\n    63,\n    105\n], [\n    105,\n    66\n], [\n    66,\n    107\n]), dh = $a([\n    469,\n    470\n], [\n    470,\n    471\n], [\n    471,\n    472\n], [\n    472,\n    469\n]), fh = $a([\n    10,\n    338\n], [\n    338,\n    297\n], [\n    297,\n    332\n], [\n    332,\n    284\n], [\n    284,\n    251\n], [\n    251,\n    389\n], [\n    389,\n    356\n], [\n    356,\n    454\n], [\n    454,\n    323\n], [\n    323,\n    361\n], [\n    361,\n    288\n], [\n    288,\n    397\n], [\n    397,\n    365\n], [\n    365,\n    379\n], [\n    379,\n    378\n], [\n    378,\n    400\n], [\n    400,\n    377\n], [\n    377,\n    152\n], [\n    152,\n    148\n], [\n    148,\n    176\n], [\n    176,\n    149\n], [\n    149,\n    150\n], [\n    150,\n    136\n], [\n    136,\n    172\n], [\n    172,\n    58\n], [\n    58,\n    132\n], [\n    132,\n    93\n], [\n    93,\n    234\n], [\n    234,\n    127\n], [\n    127,\n    162\n], [\n    162,\n    21\n], [\n    21,\n    54\n], [\n    54,\n    103\n], [\n    103,\n    67\n], [\n    67,\n    109\n], [\n    109,\n    10\n]), ph = [\n    ...oh,\n    ...ah,\n    ...hh,\n    ...uh,\n    ...lh,\n    ...fh\n], gh = $a([\n    127,\n    34\n], [\n    34,\n    139\n], [\n    139,\n    127\n], [\n    11,\n    0\n], [\n    0,\n    37\n], [\n    37,\n    11\n], [\n    232,\n    231\n], [\n    231,\n    120\n], [\n    120,\n    232\n], [\n    72,\n    37\n], [\n    37,\n    39\n], [\n    39,\n    72\n], [\n    128,\n    121\n], [\n    121,\n    47\n], [\n    47,\n    128\n], [\n    232,\n    121\n], [\n    121,\n    128\n], [\n    128,\n    232\n], [\n    104,\n    69\n], [\n    69,\n    67\n], [\n    67,\n    104\n], [\n    175,\n    171\n], [\n    171,\n    148\n], [\n    148,\n    175\n], [\n    118,\n    50\n], [\n    50,\n    101\n], [\n    101,\n    118\n], [\n    73,\n    39\n], [\n    39,\n    40\n], [\n    40,\n    73\n], [\n    9,\n    151\n], [\n    151,\n    108\n], [\n    108,\n    9\n], [\n    48,\n    115\n], [\n    115,\n    131\n], [\n    131,\n    48\n], [\n    194,\n    204\n], [\n    204,\n    211\n], [\n    211,\n    194\n], [\n    74,\n    40\n], [\n    40,\n    185\n], [\n    185,\n    74\n], [\n    80,\n    42\n], [\n    42,\n    183\n], [\n    183,\n    80\n], [\n    40,\n    92\n], [\n    92,\n    186\n], [\n    186,\n    40\n], [\n    230,\n    229\n], [\n    229,\n    118\n], [\n    118,\n    230\n], [\n    202,\n    212\n], [\n    212,\n    214\n], [\n    214,\n    202\n], [\n    83,\n    18\n], [\n    18,\n    17\n], [\n    17,\n    83\n], [\n    76,\n    61\n], [\n    61,\n    146\n], [\n    146,\n    76\n], [\n    160,\n    29\n], [\n    29,\n    30\n], [\n    30,\n    160\n], [\n    56,\n    157\n], [\n    157,\n    173\n], [\n    173,\n    56\n], [\n    106,\n    204\n], [\n    204,\n    194\n], [\n    194,\n    106\n], [\n    135,\n    214\n], [\n    214,\n    192\n], [\n    192,\n    135\n], [\n    203,\n    165\n], [\n    165,\n    98\n], [\n    98,\n    203\n], [\n    21,\n    71\n], [\n    71,\n    68\n], [\n    68,\n    21\n], [\n    51,\n    45\n], [\n    45,\n    4\n], [\n    4,\n    51\n], [\n    144,\n    24\n], [\n    24,\n    23\n], [\n    23,\n    144\n], [\n    77,\n    146\n], [\n    146,\n    91\n], [\n    91,\n    77\n], [\n    205,\n    50\n], [\n    50,\n    187\n], [\n    187,\n    205\n], [\n    201,\n    200\n], [\n    200,\n    18\n], [\n    18,\n    201\n], [\n    91,\n    106\n], [\n    106,\n    182\n], [\n    182,\n    91\n], [\n    90,\n    91\n], [\n    91,\n    181\n], [\n    181,\n    90\n], [\n    85,\n    84\n], [\n    84,\n    17\n], [\n    17,\n    85\n], [\n    206,\n    203\n], [\n    203,\n    36\n], [\n    36,\n    206\n], [\n    148,\n    171\n], [\n    171,\n    140\n], [\n    140,\n    148\n], [\n    92,\n    40\n], [\n    40,\n    39\n], [\n    39,\n    92\n], [\n    193,\n    189\n], [\n    189,\n    244\n], [\n    244,\n    193\n], [\n    159,\n    158\n], [\n    158,\n    28\n], [\n    28,\n    159\n], [\n    247,\n    246\n], [\n    246,\n    161\n], [\n    161,\n    247\n], [\n    236,\n    3\n], [\n    3,\n    196\n], [\n    196,\n    236\n], [\n    54,\n    68\n], [\n    68,\n    104\n], [\n    104,\n    54\n], [\n    193,\n    168\n], [\n    168,\n    8\n], [\n    8,\n    193\n], [\n    117,\n    228\n], [\n    228,\n    31\n], [\n    31,\n    117\n], [\n    189,\n    193\n], [\n    193,\n    55\n], [\n    55,\n    189\n], [\n    98,\n    97\n], [\n    97,\n    99\n], [\n    99,\n    98\n], [\n    126,\n    47\n], [\n    47,\n    100\n], [\n    100,\n    126\n], [\n    166,\n    79\n], [\n    79,\n    218\n], [\n    218,\n    166\n], [\n    155,\n    154\n], [\n    154,\n    26\n], [\n    26,\n    155\n], [\n    209,\n    49\n], [\n    49,\n    131\n], [\n    131,\n    209\n], [\n    135,\n    136\n], [\n    136,\n    150\n], [\n    150,\n    135\n], [\n    47,\n    126\n], [\n    126,\n    217\n], [\n    217,\n    47\n], [\n    223,\n    52\n], [\n    52,\n    53\n], [\n    53,\n    223\n], [\n    45,\n    51\n], [\n    51,\n    134\n], [\n    134,\n    45\n], [\n    211,\n    170\n], [\n    170,\n    140\n], [\n    140,\n    211\n], [\n    67,\n    69\n], [\n    69,\n    108\n], [\n    108,\n    67\n], [\n    43,\n    106\n], [\n    106,\n    91\n], [\n    91,\n    43\n], [\n    230,\n    119\n], [\n    119,\n    120\n], [\n    120,\n    230\n], [\n    226,\n    130\n], [\n    130,\n    247\n], [\n    247,\n    226\n], [\n    63,\n    53\n], [\n    53,\n    52\n], [\n    52,\n    63\n], [\n    238,\n    20\n], [\n    20,\n    242\n], [\n    242,\n    238\n], [\n    46,\n    70\n], [\n    70,\n    156\n], [\n    156,\n    46\n], [\n    78,\n    62\n], [\n    62,\n    96\n], [\n    96,\n    78\n], [\n    46,\n    53\n], [\n    53,\n    63\n], [\n    63,\n    46\n], [\n    143,\n    34\n], [\n    34,\n    227\n], [\n    227,\n    143\n], [\n    123,\n    117\n], [\n    117,\n    111\n], [\n    111,\n    123\n], [\n    44,\n    125\n], [\n    125,\n    19\n], [\n    19,\n    44\n], [\n    236,\n    134\n], [\n    134,\n    51\n], [\n    51,\n    236\n], [\n    216,\n    206\n], [\n    206,\n    205\n], [\n    205,\n    216\n], [\n    154,\n    153\n], [\n    153,\n    22\n], [\n    22,\n    154\n], [\n    39,\n    37\n], [\n    37,\n    167\n], [\n    167,\n    39\n], [\n    200,\n    201\n], [\n    201,\n    208\n], [\n    208,\n    200\n], [\n    36,\n    142\n], [\n    142,\n    100\n], [\n    100,\n    36\n], [\n    57,\n    212\n], [\n    212,\n    202\n], [\n    202,\n    57\n], [\n    20,\n    60\n], [\n    60,\n    99\n], [\n    99,\n    20\n], [\n    28,\n    158\n], [\n    158,\n    157\n], [\n    157,\n    28\n], [\n    35,\n    226\n], [\n    226,\n    113\n], [\n    113,\n    35\n], [\n    160,\n    159\n], [\n    159,\n    27\n], [\n    27,\n    160\n], [\n    204,\n    202\n], [\n    202,\n    210\n], [\n    210,\n    204\n], [\n    113,\n    225\n], [\n    225,\n    46\n], [\n    46,\n    113\n], [\n    43,\n    202\n], [\n    202,\n    204\n], [\n    204,\n    43\n], [\n    62,\n    76\n], [\n    76,\n    77\n], [\n    77,\n    62\n], [\n    137,\n    123\n], [\n    123,\n    116\n], [\n    116,\n    137\n], [\n    41,\n    38\n], [\n    38,\n    72\n], [\n    72,\n    41\n], [\n    203,\n    129\n], [\n    129,\n    142\n], [\n    142,\n    203\n], [\n    64,\n    98\n], [\n    98,\n    240\n], [\n    240,\n    64\n], [\n    49,\n    102\n], [\n    102,\n    64\n], [\n    64,\n    49\n], [\n    41,\n    73\n], [\n    73,\n    74\n], [\n    74,\n    41\n], [\n    212,\n    216\n], [\n    216,\n    207\n], [\n    207,\n    212\n], [\n    42,\n    74\n], [\n    74,\n    184\n], [\n    184,\n    42\n], [\n    169,\n    170\n], [\n    170,\n    211\n], [\n    211,\n    169\n], [\n    170,\n    149\n], [\n    149,\n    176\n], [\n    176,\n    170\n], [\n    105,\n    66\n], [\n    66,\n    69\n], [\n    69,\n    105\n], [\n    122,\n    6\n], [\n    6,\n    168\n], [\n    168,\n    122\n], [\n    123,\n    147\n], [\n    147,\n    187\n], [\n    187,\n    123\n], [\n    96,\n    77\n], [\n    77,\n    90\n], [\n    90,\n    96\n], [\n    65,\n    55\n], [\n    55,\n    107\n], [\n    107,\n    65\n], [\n    89,\n    90\n], [\n    90,\n    180\n], [\n    180,\n    89\n], [\n    101,\n    100\n], [\n    100,\n    120\n], [\n    120,\n    101\n], [\n    63,\n    105\n], [\n    105,\n    104\n], [\n    104,\n    63\n], [\n    93,\n    137\n], [\n    137,\n    227\n], [\n    227,\n    93\n], [\n    15,\n    86\n], [\n    86,\n    85\n], [\n    85,\n    15\n], [\n    129,\n    102\n], [\n    102,\n    49\n], [\n    49,\n    129\n], [\n    14,\n    87\n], [\n    87,\n    86\n], [\n    86,\n    14\n], [\n    55,\n    8\n], [\n    8,\n    9\n], [\n    9,\n    55\n], [\n    100,\n    47\n], [\n    47,\n    121\n], [\n    121,\n    100\n], [\n    145,\n    23\n], [\n    23,\n    22\n], [\n    22,\n    145\n], [\n    88,\n    89\n], [\n    89,\n    179\n], [\n    179,\n    88\n], [\n    6,\n    122\n], [\n    122,\n    196\n], [\n    196,\n    6\n], [\n    88,\n    95\n], [\n    95,\n    96\n], [\n    96,\n    88\n], [\n    138,\n    172\n], [\n    172,\n    136\n], [\n    136,\n    138\n], [\n    215,\n    58\n], [\n    58,\n    172\n], [\n    172,\n    215\n], [\n    115,\n    48\n], [\n    48,\n    219\n], [\n    219,\n    115\n], [\n    42,\n    80\n], [\n    80,\n    81\n], [\n    81,\n    42\n], [\n    195,\n    3\n], [\n    3,\n    51\n], [\n    51,\n    195\n], [\n    43,\n    146\n], [\n    146,\n    61\n], [\n    61,\n    43\n], [\n    171,\n    175\n], [\n    175,\n    199\n], [\n    199,\n    171\n], [\n    81,\n    82\n], [\n    82,\n    38\n], [\n    38,\n    81\n], [\n    53,\n    46\n], [\n    46,\n    225\n], [\n    225,\n    53\n], [\n    144,\n    163\n], [\n    163,\n    110\n], [\n    110,\n    144\n], [\n    52,\n    65\n], [\n    65,\n    66\n], [\n    66,\n    52\n], [\n    229,\n    228\n], [\n    228,\n    117\n], [\n    117,\n    229\n], [\n    34,\n    127\n], [\n    127,\n    234\n], [\n    234,\n    34\n], [\n    107,\n    108\n], [\n    108,\n    69\n], [\n    69,\n    107\n], [\n    109,\n    108\n], [\n    108,\n    151\n], [\n    151,\n    109\n], [\n    48,\n    64\n], [\n    64,\n    235\n], [\n    235,\n    48\n], [\n    62,\n    78\n], [\n    78,\n    191\n], [\n    191,\n    62\n], [\n    129,\n    209\n], [\n    209,\n    126\n], [\n    126,\n    129\n], [\n    111,\n    35\n], [\n    35,\n    143\n], [\n    143,\n    111\n], [\n    117,\n    123\n], [\n    123,\n    50\n], [\n    50,\n    117\n], [\n    222,\n    65\n], [\n    65,\n    52\n], [\n    52,\n    222\n], [\n    19,\n    125\n], [\n    125,\n    141\n], [\n    141,\n    19\n], [\n    221,\n    55\n], [\n    55,\n    65\n], [\n    65,\n    221\n], [\n    3,\n    195\n], [\n    195,\n    197\n], [\n    197,\n    3\n], [\n    25,\n    7\n], [\n    7,\n    33\n], [\n    33,\n    25\n], [\n    220,\n    237\n], [\n    237,\n    44\n], [\n    44,\n    220\n], [\n    70,\n    71\n], [\n    71,\n    139\n], [\n    139,\n    70\n], [\n    122,\n    193\n], [\n    193,\n    245\n], [\n    245,\n    122\n], [\n    247,\n    130\n], [\n    130,\n    33\n], [\n    33,\n    247\n], [\n    71,\n    21\n], [\n    21,\n    162\n], [\n    162,\n    71\n], [\n    170,\n    169\n], [\n    169,\n    150\n], [\n    150,\n    170\n], [\n    188,\n    174\n], [\n    174,\n    196\n], [\n    196,\n    188\n], [\n    216,\n    186\n], [\n    186,\n    92\n], [\n    92,\n    216\n], [\n    2,\n    97\n], [\n    97,\n    167\n], [\n    167,\n    2\n], [\n    141,\n    125\n], [\n    125,\n    241\n], [\n    241,\n    141\n], [\n    164,\n    167\n], [\n    167,\n    37\n], [\n    37,\n    164\n], [\n    72,\n    38\n], [\n    38,\n    12\n], [\n    12,\n    72\n], [\n    38,\n    82\n], [\n    82,\n    13\n], [\n    13,\n    38\n], [\n    63,\n    68\n], [\n    68,\n    71\n], [\n    71,\n    63\n], [\n    226,\n    35\n], [\n    35,\n    111\n], [\n    111,\n    226\n], [\n    101,\n    50\n], [\n    50,\n    205\n], [\n    205,\n    101\n], [\n    206,\n    92\n], [\n    92,\n    165\n], [\n    165,\n    206\n], [\n    209,\n    198\n], [\n    198,\n    217\n], [\n    217,\n    209\n], [\n    165,\n    167\n], [\n    167,\n    97\n], [\n    97,\n    165\n], [\n    220,\n    115\n], [\n    115,\n    218\n], [\n    218,\n    220\n], [\n    133,\n    112\n], [\n    112,\n    243\n], [\n    243,\n    133\n], [\n    239,\n    238\n], [\n    238,\n    241\n], [\n    241,\n    239\n], [\n    214,\n    135\n], [\n    135,\n    169\n], [\n    169,\n    214\n], [\n    190,\n    173\n], [\n    173,\n    133\n], [\n    133,\n    190\n], [\n    171,\n    208\n], [\n    208,\n    32\n], [\n    32,\n    171\n], [\n    125,\n    44\n], [\n    44,\n    237\n], [\n    237,\n    125\n], [\n    86,\n    87\n], [\n    87,\n    178\n], [\n    178,\n    86\n], [\n    85,\n    86\n], [\n    86,\n    179\n], [\n    179,\n    85\n], [\n    84,\n    85\n], [\n    85,\n    180\n], [\n    180,\n    84\n], [\n    83,\n    84\n], [\n    84,\n    181\n], [\n    181,\n    83\n], [\n    201,\n    83\n], [\n    83,\n    182\n], [\n    182,\n    201\n], [\n    137,\n    93\n], [\n    93,\n    132\n], [\n    132,\n    137\n], [\n    76,\n    62\n], [\n    62,\n    183\n], [\n    183,\n    76\n], [\n    61,\n    76\n], [\n    76,\n    184\n], [\n    184,\n    61\n], [\n    57,\n    61\n], [\n    61,\n    185\n], [\n    185,\n    57\n], [\n    212,\n    57\n], [\n    57,\n    186\n], [\n    186,\n    212\n], [\n    214,\n    207\n], [\n    207,\n    187\n], [\n    187,\n    214\n], [\n    34,\n    143\n], [\n    143,\n    156\n], [\n    156,\n    34\n], [\n    79,\n    239\n], [\n    239,\n    237\n], [\n    237,\n    79\n], [\n    123,\n    137\n], [\n    137,\n    177\n], [\n    177,\n    123\n], [\n    44,\n    1\n], [\n    1,\n    4\n], [\n    4,\n    44\n], [\n    201,\n    194\n], [\n    194,\n    32\n], [\n    32,\n    201\n], [\n    64,\n    102\n], [\n    102,\n    129\n], [\n    129,\n    64\n], [\n    213,\n    215\n], [\n    215,\n    138\n], [\n    138,\n    213\n], [\n    59,\n    166\n], [\n    166,\n    219\n], [\n    219,\n    59\n], [\n    242,\n    99\n], [\n    99,\n    97\n], [\n    97,\n    242\n], [\n    2,\n    94\n], [\n    94,\n    141\n], [\n    141,\n    2\n], [\n    75,\n    59\n], [\n    59,\n    235\n], [\n    235,\n    75\n], [\n    24,\n    110\n], [\n    110,\n    228\n], [\n    228,\n    24\n], [\n    25,\n    130\n], [\n    130,\n    226\n], [\n    226,\n    25\n], [\n    23,\n    24\n], [\n    24,\n    229\n], [\n    229,\n    23\n], [\n    22,\n    23\n], [\n    23,\n    230\n], [\n    230,\n    22\n], [\n    26,\n    22\n], [\n    22,\n    231\n], [\n    231,\n    26\n], [\n    112,\n    26\n], [\n    26,\n    232\n], [\n    232,\n    112\n], [\n    189,\n    190\n], [\n    190,\n    243\n], [\n    243,\n    189\n], [\n    221,\n    56\n], [\n    56,\n    190\n], [\n    190,\n    221\n], [\n    28,\n    56\n], [\n    56,\n    221\n], [\n    221,\n    28\n], [\n    27,\n    28\n], [\n    28,\n    222\n], [\n    222,\n    27\n], [\n    29,\n    27\n], [\n    27,\n    223\n], [\n    223,\n    29\n], [\n    30,\n    29\n], [\n    29,\n    224\n], [\n    224,\n    30\n], [\n    247,\n    30\n], [\n    30,\n    225\n], [\n    225,\n    247\n], [\n    238,\n    79\n], [\n    79,\n    20\n], [\n    20,\n    238\n], [\n    166,\n    59\n], [\n    59,\n    75\n], [\n    75,\n    166\n], [\n    60,\n    75\n], [\n    75,\n    240\n], [\n    240,\n    60\n], [\n    147,\n    177\n], [\n    177,\n    215\n], [\n    215,\n    147\n], [\n    20,\n    79\n], [\n    79,\n    166\n], [\n    166,\n    20\n], [\n    187,\n    147\n], [\n    147,\n    213\n], [\n    213,\n    187\n], [\n    112,\n    233\n], [\n    233,\n    244\n], [\n    244,\n    112\n], [\n    233,\n    128\n], [\n    128,\n    245\n], [\n    245,\n    233\n], [\n    128,\n    114\n], [\n    114,\n    188\n], [\n    188,\n    128\n], [\n    114,\n    217\n], [\n    217,\n    174\n], [\n    174,\n    114\n], [\n    131,\n    115\n], [\n    115,\n    220\n], [\n    220,\n    131\n], [\n    217,\n    198\n], [\n    198,\n    236\n], [\n    236,\n    217\n], [\n    198,\n    131\n], [\n    131,\n    134\n], [\n    134,\n    198\n], [\n    177,\n    132\n], [\n    132,\n    58\n], [\n    58,\n    177\n], [\n    143,\n    35\n], [\n    35,\n    124\n], [\n    124,\n    143\n], [\n    110,\n    163\n], [\n    163,\n    7\n], [\n    7,\n    110\n], [\n    228,\n    110\n], [\n    110,\n    25\n], [\n    25,\n    228\n], [\n    356,\n    389\n], [\n    389,\n    368\n], [\n    368,\n    356\n], [\n    11,\n    302\n], [\n    302,\n    267\n], [\n    267,\n    11\n], [\n    452,\n    350\n], [\n    350,\n    349\n], [\n    349,\n    452\n], [\n    302,\n    303\n], [\n    303,\n    269\n], [\n    269,\n    302\n], [\n    357,\n    343\n], [\n    343,\n    277\n], [\n    277,\n    357\n], [\n    452,\n    453\n], [\n    453,\n    357\n], [\n    357,\n    452\n], [\n    333,\n    332\n], [\n    332,\n    297\n], [\n    297,\n    333\n], [\n    175,\n    152\n], [\n    152,\n    377\n], [\n    377,\n    175\n], [\n    347,\n    348\n], [\n    348,\n    330\n], [\n    330,\n    347\n], [\n    303,\n    304\n], [\n    304,\n    270\n], [\n    270,\n    303\n], [\n    9,\n    336\n], [\n    336,\n    337\n], [\n    337,\n    9\n], [\n    278,\n    279\n], [\n    279,\n    360\n], [\n    360,\n    278\n], [\n    418,\n    262\n], [\n    262,\n    431\n], [\n    431,\n    418\n], [\n    304,\n    408\n], [\n    408,\n    409\n], [\n    409,\n    304\n], [\n    310,\n    415\n], [\n    415,\n    407\n], [\n    407,\n    310\n], [\n    270,\n    409\n], [\n    409,\n    410\n], [\n    410,\n    270\n], [\n    450,\n    348\n], [\n    348,\n    347\n], [\n    347,\n    450\n], [\n    422,\n    430\n], [\n    430,\n    434\n], [\n    434,\n    422\n], [\n    313,\n    314\n], [\n    314,\n    17\n], [\n    17,\n    313\n], [\n    306,\n    307\n], [\n    307,\n    375\n], [\n    375,\n    306\n], [\n    387,\n    388\n], [\n    388,\n    260\n], [\n    260,\n    387\n], [\n    286,\n    414\n], [\n    414,\n    398\n], [\n    398,\n    286\n], [\n    335,\n    406\n], [\n    406,\n    418\n], [\n    418,\n    335\n], [\n    364,\n    367\n], [\n    367,\n    416\n], [\n    416,\n    364\n], [\n    423,\n    358\n], [\n    358,\n    327\n], [\n    327,\n    423\n], [\n    251,\n    284\n], [\n    284,\n    298\n], [\n    298,\n    251\n], [\n    281,\n    5\n], [\n    5,\n    4\n], [\n    4,\n    281\n], [\n    373,\n    374\n], [\n    374,\n    253\n], [\n    253,\n    373\n], [\n    307,\n    320\n], [\n    320,\n    321\n], [\n    321,\n    307\n], [\n    425,\n    427\n], [\n    427,\n    411\n], [\n    411,\n    425\n], [\n    421,\n    313\n], [\n    313,\n    18\n], [\n    18,\n    421\n], [\n    321,\n    405\n], [\n    405,\n    406\n], [\n    406,\n    321\n], [\n    320,\n    404\n], [\n    404,\n    405\n], [\n    405,\n    320\n], [\n    315,\n    16\n], [\n    16,\n    17\n], [\n    17,\n    315\n], [\n    426,\n    425\n], [\n    425,\n    266\n], [\n    266,\n    426\n], [\n    377,\n    400\n], [\n    400,\n    369\n], [\n    369,\n    377\n], [\n    322,\n    391\n], [\n    391,\n    269\n], [\n    269,\n    322\n], [\n    417,\n    465\n], [\n    465,\n    464\n], [\n    464,\n    417\n], [\n    386,\n    257\n], [\n    257,\n    258\n], [\n    258,\n    386\n], [\n    466,\n    260\n], [\n    260,\n    388\n], [\n    388,\n    466\n], [\n    456,\n    399\n], [\n    399,\n    419\n], [\n    419,\n    456\n], [\n    284,\n    332\n], [\n    332,\n    333\n], [\n    333,\n    284\n], [\n    417,\n    285\n], [\n    285,\n    8\n], [\n    8,\n    417\n], [\n    346,\n    340\n], [\n    340,\n    261\n], [\n    261,\n    346\n], [\n    413,\n    441\n], [\n    441,\n    285\n], [\n    285,\n    413\n], [\n    327,\n    460\n], [\n    460,\n    328\n], [\n    328,\n    327\n], [\n    355,\n    371\n], [\n    371,\n    329\n], [\n    329,\n    355\n], [\n    392,\n    439\n], [\n    439,\n    438\n], [\n    438,\n    392\n], [\n    382,\n    341\n], [\n    341,\n    256\n], [\n    256,\n    382\n], [\n    429,\n    420\n], [\n    420,\n    360\n], [\n    360,\n    429\n], [\n    364,\n    394\n], [\n    394,\n    379\n], [\n    379,\n    364\n], [\n    277,\n    343\n], [\n    343,\n    437\n], [\n    437,\n    277\n], [\n    443,\n    444\n], [\n    444,\n    283\n], [\n    283,\n    443\n], [\n    275,\n    440\n], [\n    440,\n    363\n], [\n    363,\n    275\n], [\n    431,\n    262\n], [\n    262,\n    369\n], [\n    369,\n    431\n], [\n    297,\n    338\n], [\n    338,\n    337\n], [\n    337,\n    297\n], [\n    273,\n    375\n], [\n    375,\n    321\n], [\n    321,\n    273\n], [\n    450,\n    451\n], [\n    451,\n    349\n], [\n    349,\n    450\n], [\n    446,\n    342\n], [\n    342,\n    467\n], [\n    467,\n    446\n], [\n    293,\n    334\n], [\n    334,\n    282\n], [\n    282,\n    293\n], [\n    458,\n    461\n], [\n    461,\n    462\n], [\n    462,\n    458\n], [\n    276,\n    353\n], [\n    353,\n    383\n], [\n    383,\n    276\n], [\n    308,\n    324\n], [\n    324,\n    325\n], [\n    325,\n    308\n], [\n    276,\n    300\n], [\n    300,\n    293\n], [\n    293,\n    276\n], [\n    372,\n    345\n], [\n    345,\n    447\n], [\n    447,\n    372\n], [\n    352,\n    345\n], [\n    345,\n    340\n], [\n    340,\n    352\n], [\n    274,\n    1\n], [\n    1,\n    19\n], [\n    19,\n    274\n], [\n    456,\n    248\n], [\n    248,\n    281\n], [\n    281,\n    456\n], [\n    436,\n    427\n], [\n    427,\n    425\n], [\n    425,\n    436\n], [\n    381,\n    256\n], [\n    256,\n    252\n], [\n    252,\n    381\n], [\n    269,\n    391\n], [\n    391,\n    393\n], [\n    393,\n    269\n], [\n    200,\n    199\n], [\n    199,\n    428\n], [\n    428,\n    200\n], [\n    266,\n    330\n], [\n    330,\n    329\n], [\n    329,\n    266\n], [\n    287,\n    273\n], [\n    273,\n    422\n], [\n    422,\n    287\n], [\n    250,\n    462\n], [\n    462,\n    328\n], [\n    328,\n    250\n], [\n    258,\n    286\n], [\n    286,\n    384\n], [\n    384,\n    258\n], [\n    265,\n    353\n], [\n    353,\n    342\n], [\n    342,\n    265\n], [\n    387,\n    259\n], [\n    259,\n    257\n], [\n    257,\n    387\n], [\n    424,\n    431\n], [\n    431,\n    430\n], [\n    430,\n    424\n], [\n    342,\n    353\n], [\n    353,\n    276\n], [\n    276,\n    342\n], [\n    273,\n    335\n], [\n    335,\n    424\n], [\n    424,\n    273\n], [\n    292,\n    325\n], [\n    325,\n    307\n], [\n    307,\n    292\n], [\n    366,\n    447\n], [\n    447,\n    345\n], [\n    345,\n    366\n], [\n    271,\n    303\n], [\n    303,\n    302\n], [\n    302,\n    271\n], [\n    423,\n    266\n], [\n    266,\n    371\n], [\n    371,\n    423\n], [\n    294,\n    455\n], [\n    455,\n    460\n], [\n    460,\n    294\n], [\n    279,\n    278\n], [\n    278,\n    294\n], [\n    294,\n    279\n], [\n    271,\n    272\n], [\n    272,\n    304\n], [\n    304,\n    271\n], [\n    432,\n    434\n], [\n    434,\n    427\n], [\n    427,\n    432\n], [\n    272,\n    407\n], [\n    407,\n    408\n], [\n    408,\n    272\n], [\n    394,\n    430\n], [\n    430,\n    431\n], [\n    431,\n    394\n], [\n    395,\n    369\n], [\n    369,\n    400\n], [\n    400,\n    395\n], [\n    334,\n    333\n], [\n    333,\n    299\n], [\n    299,\n    334\n], [\n    351,\n    417\n], [\n    417,\n    168\n], [\n    168,\n    351\n], [\n    352,\n    280\n], [\n    280,\n    411\n], [\n    411,\n    352\n], [\n    325,\n    319\n], [\n    319,\n    320\n], [\n    320,\n    325\n], [\n    295,\n    296\n], [\n    296,\n    336\n], [\n    336,\n    295\n], [\n    319,\n    403\n], [\n    403,\n    404\n], [\n    404,\n    319\n], [\n    330,\n    348\n], [\n    348,\n    349\n], [\n    349,\n    330\n], [\n    293,\n    298\n], [\n    298,\n    333\n], [\n    333,\n    293\n], [\n    323,\n    454\n], [\n    454,\n    447\n], [\n    447,\n    323\n], [\n    15,\n    16\n], [\n    16,\n    315\n], [\n    315,\n    15\n], [\n    358,\n    429\n], [\n    429,\n    279\n], [\n    279,\n    358\n], [\n    14,\n    15\n], [\n    15,\n    316\n], [\n    316,\n    14\n], [\n    285,\n    336\n], [\n    336,\n    9\n], [\n    9,\n    285\n], [\n    329,\n    349\n], [\n    349,\n    350\n], [\n    350,\n    329\n], [\n    374,\n    380\n], [\n    380,\n    252\n], [\n    252,\n    374\n], [\n    318,\n    402\n], [\n    402,\n    403\n], [\n    403,\n    318\n], [\n    6,\n    197\n], [\n    197,\n    419\n], [\n    419,\n    6\n], [\n    318,\n    319\n], [\n    319,\n    325\n], [\n    325,\n    318\n], [\n    367,\n    364\n], [\n    364,\n    365\n], [\n    365,\n    367\n], [\n    435,\n    367\n], [\n    367,\n    397\n], [\n    397,\n    435\n], [\n    344,\n    438\n], [\n    438,\n    439\n], [\n    439,\n    344\n], [\n    272,\n    271\n], [\n    271,\n    311\n], [\n    311,\n    272\n], [\n    195,\n    5\n], [\n    5,\n    281\n], [\n    281,\n    195\n], [\n    273,\n    287\n], [\n    287,\n    291\n], [\n    291,\n    273\n], [\n    396,\n    428\n], [\n    428,\n    199\n], [\n    199,\n    396\n], [\n    311,\n    271\n], [\n    271,\n    268\n], [\n    268,\n    311\n], [\n    283,\n    444\n], [\n    444,\n    445\n], [\n    445,\n    283\n], [\n    373,\n    254\n], [\n    254,\n    339\n], [\n    339,\n    373\n], [\n    282,\n    334\n], [\n    334,\n    296\n], [\n    296,\n    282\n], [\n    449,\n    347\n], [\n    347,\n    346\n], [\n    346,\n    449\n], [\n    264,\n    447\n], [\n    447,\n    454\n], [\n    454,\n    264\n], [\n    336,\n    296\n], [\n    296,\n    299\n], [\n    299,\n    336\n], [\n    338,\n    10\n], [\n    10,\n    151\n], [\n    151,\n    338\n], [\n    278,\n    439\n], [\n    439,\n    455\n], [\n    455,\n    278\n], [\n    292,\n    407\n], [\n    407,\n    415\n], [\n    415,\n    292\n], [\n    358,\n    371\n], [\n    371,\n    355\n], [\n    355,\n    358\n], [\n    340,\n    345\n], [\n    345,\n    372\n], [\n    372,\n    340\n], [\n    346,\n    347\n], [\n    347,\n    280\n], [\n    280,\n    346\n], [\n    442,\n    443\n], [\n    443,\n    282\n], [\n    282,\n    442\n], [\n    19,\n    94\n], [\n    94,\n    370\n], [\n    370,\n    19\n], [\n    441,\n    442\n], [\n    442,\n    295\n], [\n    295,\n    441\n], [\n    248,\n    419\n], [\n    419,\n    197\n], [\n    197,\n    248\n], [\n    263,\n    255\n], [\n    255,\n    359\n], [\n    359,\n    263\n], [\n    440,\n    275\n], [\n    275,\n    274\n], [\n    274,\n    440\n], [\n    300,\n    383\n], [\n    383,\n    368\n], [\n    368,\n    300\n], [\n    351,\n    412\n], [\n    412,\n    465\n], [\n    465,\n    351\n], [\n    263,\n    467\n], [\n    467,\n    466\n], [\n    466,\n    263\n], [\n    301,\n    368\n], [\n    368,\n    389\n], [\n    389,\n    301\n], [\n    395,\n    378\n], [\n    378,\n    379\n], [\n    379,\n    395\n], [\n    412,\n    351\n], [\n    351,\n    419\n], [\n    419,\n    412\n], [\n    436,\n    426\n], [\n    426,\n    322\n], [\n    322,\n    436\n], [\n    2,\n    164\n], [\n    164,\n    393\n], [\n    393,\n    2\n], [\n    370,\n    462\n], [\n    462,\n    461\n], [\n    461,\n    370\n], [\n    164,\n    0\n], [\n    0,\n    267\n], [\n    267,\n    164\n], [\n    302,\n    11\n], [\n    11,\n    12\n], [\n    12,\n    302\n], [\n    268,\n    12\n], [\n    12,\n    13\n], [\n    13,\n    268\n], [\n    293,\n    300\n], [\n    300,\n    301\n], [\n    301,\n    293\n], [\n    446,\n    261\n], [\n    261,\n    340\n], [\n    340,\n    446\n], [\n    330,\n    266\n], [\n    266,\n    425\n], [\n    425,\n    330\n], [\n    426,\n    423\n], [\n    423,\n    391\n], [\n    391,\n    426\n], [\n    429,\n    355\n], [\n    355,\n    437\n], [\n    437,\n    429\n], [\n    391,\n    327\n], [\n    327,\n    326\n], [\n    326,\n    391\n], [\n    440,\n    457\n], [\n    457,\n    438\n], [\n    438,\n    440\n], [\n    341,\n    382\n], [\n    382,\n    362\n], [\n    362,\n    341\n], [\n    459,\n    457\n], [\n    457,\n    461\n], [\n    461,\n    459\n], [\n    434,\n    430\n], [\n    430,\n    394\n], [\n    394,\n    434\n], [\n    414,\n    463\n], [\n    463,\n    362\n], [\n    362,\n    414\n], [\n    396,\n    369\n], [\n    369,\n    262\n], [\n    262,\n    396\n], [\n    354,\n    461\n], [\n    461,\n    457\n], [\n    457,\n    354\n], [\n    316,\n    403\n], [\n    403,\n    402\n], [\n    402,\n    316\n], [\n    315,\n    404\n], [\n    404,\n    403\n], [\n    403,\n    315\n], [\n    314,\n    405\n], [\n    405,\n    404\n], [\n    404,\n    314\n], [\n    313,\n    406\n], [\n    406,\n    405\n], [\n    405,\n    313\n], [\n    421,\n    418\n], [\n    418,\n    406\n], [\n    406,\n    421\n], [\n    366,\n    401\n], [\n    401,\n    361\n], [\n    361,\n    366\n], [\n    306,\n    408\n], [\n    408,\n    407\n], [\n    407,\n    306\n], [\n    291,\n    409\n], [\n    409,\n    408\n], [\n    408,\n    291\n], [\n    287,\n    410\n], [\n    410,\n    409\n], [\n    409,\n    287\n], [\n    432,\n    436\n], [\n    436,\n    410\n], [\n    410,\n    432\n], [\n    434,\n    416\n], [\n    416,\n    411\n], [\n    411,\n    434\n], [\n    264,\n    368\n], [\n    368,\n    383\n], [\n    383,\n    264\n], [\n    309,\n    438\n], [\n    438,\n    457\n], [\n    457,\n    309\n], [\n    352,\n    376\n], [\n    376,\n    401\n], [\n    401,\n    352\n], [\n    274,\n    275\n], [\n    275,\n    4\n], [\n    4,\n    274\n], [\n    421,\n    428\n], [\n    428,\n    262\n], [\n    262,\n    421\n], [\n    294,\n    327\n], [\n    327,\n    358\n], [\n    358,\n    294\n], [\n    433,\n    416\n], [\n    416,\n    367\n], [\n    367,\n    433\n], [\n    289,\n    455\n], [\n    455,\n    439\n], [\n    439,\n    289\n], [\n    462,\n    370\n], [\n    370,\n    326\n], [\n    326,\n    462\n], [\n    2,\n    326\n], [\n    326,\n    370\n], [\n    370,\n    2\n], [\n    305,\n    460\n], [\n    460,\n    455\n], [\n    455,\n    305\n], [\n    254,\n    449\n], [\n    449,\n    448\n], [\n    448,\n    254\n], [\n    255,\n    261\n], [\n    261,\n    446\n], [\n    446,\n    255\n], [\n    253,\n    450\n], [\n    450,\n    449\n], [\n    449,\n    253\n], [\n    252,\n    451\n], [\n    451,\n    450\n], [\n    450,\n    252\n], [\n    256,\n    452\n], [\n    452,\n    451\n], [\n    451,\n    256\n], [\n    341,\n    453\n], [\n    453,\n    452\n], [\n    452,\n    341\n], [\n    413,\n    464\n], [\n    464,\n    463\n], [\n    463,\n    413\n], [\n    441,\n    413\n], [\n    413,\n    414\n], [\n    414,\n    441\n], [\n    258,\n    442\n], [\n    442,\n    441\n], [\n    441,\n    258\n], [\n    257,\n    443\n], [\n    443,\n    442\n], [\n    442,\n    257\n], [\n    259,\n    444\n], [\n    444,\n    443\n], [\n    443,\n    259\n], [\n    260,\n    445\n], [\n    445,\n    444\n], [\n    444,\n    260\n], [\n    467,\n    342\n], [\n    342,\n    445\n], [\n    445,\n    467\n], [\n    459,\n    458\n], [\n    458,\n    250\n], [\n    250,\n    459\n], [\n    289,\n    392\n], [\n    392,\n    290\n], [\n    290,\n    289\n], [\n    290,\n    328\n], [\n    328,\n    460\n], [\n    460,\n    290\n], [\n    376,\n    433\n], [\n    433,\n    435\n], [\n    435,\n    376\n], [\n    250,\n    290\n], [\n    290,\n    392\n], [\n    392,\n    250\n], [\n    411,\n    416\n], [\n    416,\n    433\n], [\n    433,\n    411\n], [\n    341,\n    463\n], [\n    463,\n    464\n], [\n    464,\n    341\n], [\n    453,\n    464\n], [\n    464,\n    465\n], [\n    465,\n    453\n], [\n    357,\n    465\n], [\n    465,\n    412\n], [\n    412,\n    357\n], [\n    343,\n    412\n], [\n    412,\n    399\n], [\n    399,\n    343\n], [\n    360,\n    363\n], [\n    363,\n    440\n], [\n    440,\n    360\n], [\n    437,\n    399\n], [\n    399,\n    456\n], [\n    456,\n    437\n], [\n    420,\n    456\n], [\n    456,\n    363\n], [\n    363,\n    420\n], [\n    401,\n    435\n], [\n    435,\n    288\n], [\n    288,\n    401\n], [\n    372,\n    383\n], [\n    383,\n    353\n], [\n    353,\n    372\n], [\n    339,\n    255\n], [\n    255,\n    249\n], [\n    249,\n    339\n], [\n    448,\n    261\n], [\n    261,\n    255\n], [\n    255,\n    448\n], [\n    133,\n    243\n], [\n    243,\n    190\n], [\n    190,\n    133\n], [\n    133,\n    155\n], [\n    155,\n    112\n], [\n    112,\n    133\n], [\n    33,\n    246\n], [\n    246,\n    247\n], [\n    247,\n    33\n], [\n    33,\n    130\n], [\n    130,\n    25\n], [\n    25,\n    33\n], [\n    398,\n    384\n], [\n    384,\n    286\n], [\n    286,\n    398\n], [\n    362,\n    398\n], [\n    398,\n    414\n], [\n    414,\n    362\n], [\n    362,\n    463\n], [\n    463,\n    341\n], [\n    341,\n    362\n], [\n    263,\n    359\n], [\n    359,\n    467\n], [\n    467,\n    263\n], [\n    263,\n    249\n], [\n    249,\n    255\n], [\n    255,\n    263\n], [\n    466,\n    467\n], [\n    467,\n    260\n], [\n    260,\n    466\n], [\n    75,\n    60\n], [\n    60,\n    166\n], [\n    166,\n    75\n], [\n    238,\n    239\n], [\n    239,\n    79\n], [\n    79,\n    238\n], [\n    162,\n    127\n], [\n    127,\n    139\n], [\n    139,\n    162\n], [\n    72,\n    11\n], [\n    11,\n    37\n], [\n    37,\n    72\n], [\n    121,\n    232\n], [\n    232,\n    120\n], [\n    120,\n    121\n], [\n    73,\n    72\n], [\n    72,\n    39\n], [\n    39,\n    73\n], [\n    114,\n    128\n], [\n    128,\n    47\n], [\n    47,\n    114\n], [\n    233,\n    232\n], [\n    232,\n    128\n], [\n    128,\n    233\n], [\n    103,\n    104\n], [\n    104,\n    67\n], [\n    67,\n    103\n], [\n    152,\n    175\n], [\n    175,\n    148\n], [\n    148,\n    152\n], [\n    119,\n    118\n], [\n    118,\n    101\n], [\n    101,\n    119\n], [\n    74,\n    73\n], [\n    73,\n    40\n], [\n    40,\n    74\n], [\n    107,\n    9\n], [\n    9,\n    108\n], [\n    108,\n    107\n], [\n    49,\n    48\n], [\n    48,\n    131\n], [\n    131,\n    49\n], [\n    32,\n    194\n], [\n    194,\n    211\n], [\n    211,\n    32\n], [\n    184,\n    74\n], [\n    74,\n    185\n], [\n    185,\n    184\n], [\n    191,\n    80\n], [\n    80,\n    183\n], [\n    183,\n    191\n], [\n    185,\n    40\n], [\n    40,\n    186\n], [\n    186,\n    185\n], [\n    119,\n    230\n], [\n    230,\n    118\n], [\n    118,\n    119\n], [\n    210,\n    202\n], [\n    202,\n    214\n], [\n    214,\n    210\n], [\n    84,\n    83\n], [\n    83,\n    17\n], [\n    17,\n    84\n], [\n    77,\n    76\n], [\n    76,\n    146\n], [\n    146,\n    77\n], [\n    161,\n    160\n], [\n    160,\n    30\n], [\n    30,\n    161\n], [\n    190,\n    56\n], [\n    56,\n    173\n], [\n    173,\n    190\n], [\n    182,\n    106\n], [\n    106,\n    194\n], [\n    194,\n    182\n], [\n    138,\n    135\n], [\n    135,\n    192\n], [\n    192,\n    138\n], [\n    129,\n    203\n], [\n    203,\n    98\n], [\n    98,\n    129\n], [\n    54,\n    21\n], [\n    21,\n    68\n], [\n    68,\n    54\n], [\n    5,\n    51\n], [\n    51,\n    4\n], [\n    4,\n    5\n], [\n    145,\n    144\n], [\n    144,\n    23\n], [\n    23,\n    145\n], [\n    90,\n    77\n], [\n    77,\n    91\n], [\n    91,\n    90\n], [\n    207,\n    205\n], [\n    205,\n    187\n], [\n    187,\n    207\n], [\n    83,\n    201\n], [\n    201,\n    18\n], [\n    18,\n    83\n], [\n    181,\n    91\n], [\n    91,\n    182\n], [\n    182,\n    181\n], [\n    180,\n    90\n], [\n    90,\n    181\n], [\n    181,\n    180\n], [\n    16,\n    85\n], [\n    85,\n    17\n], [\n    17,\n    16\n], [\n    205,\n    206\n], [\n    206,\n    36\n], [\n    36,\n    205\n], [\n    176,\n    148\n], [\n    148,\n    140\n], [\n    140,\n    176\n], [\n    165,\n    92\n], [\n    92,\n    39\n], [\n    39,\n    165\n], [\n    245,\n    193\n], [\n    193,\n    244\n], [\n    244,\n    245\n], [\n    27,\n    159\n], [\n    159,\n    28\n], [\n    28,\n    27\n], [\n    30,\n    247\n], [\n    247,\n    161\n], [\n    161,\n    30\n], [\n    174,\n    236\n], [\n    236,\n    196\n], [\n    196,\n    174\n], [\n    103,\n    54\n], [\n    54,\n    104\n], [\n    104,\n    103\n], [\n    55,\n    193\n], [\n    193,\n    8\n], [\n    8,\n    55\n], [\n    111,\n    117\n], [\n    117,\n    31\n], [\n    31,\n    111\n], [\n    221,\n    189\n], [\n    189,\n    55\n], [\n    55,\n    221\n], [\n    240,\n    98\n], [\n    98,\n    99\n], [\n    99,\n    240\n], [\n    142,\n    126\n], [\n    126,\n    100\n], [\n    100,\n    142\n], [\n    219,\n    166\n], [\n    166,\n    218\n], [\n    218,\n    219\n], [\n    112,\n    155\n], [\n    155,\n    26\n], [\n    26,\n    112\n], [\n    198,\n    209\n], [\n    209,\n    131\n], [\n    131,\n    198\n], [\n    169,\n    135\n], [\n    135,\n    150\n], [\n    150,\n    169\n], [\n    114,\n    47\n], [\n    47,\n    217\n], [\n    217,\n    114\n], [\n    224,\n    223\n], [\n    223,\n    53\n], [\n    53,\n    224\n], [\n    220,\n    45\n], [\n    45,\n    134\n], [\n    134,\n    220\n], [\n    32,\n    211\n], [\n    211,\n    140\n], [\n    140,\n    32\n], [\n    109,\n    67\n], [\n    67,\n    108\n], [\n    108,\n    109\n], [\n    146,\n    43\n], [\n    43,\n    91\n], [\n    91,\n    146\n], [\n    231,\n    230\n], [\n    230,\n    120\n], [\n    120,\n    231\n], [\n    113,\n    226\n], [\n    226,\n    247\n], [\n    247,\n    113\n], [\n    105,\n    63\n], [\n    63,\n    52\n], [\n    52,\n    105\n], [\n    241,\n    238\n], [\n    238,\n    242\n], [\n    242,\n    241\n], [\n    124,\n    46\n], [\n    46,\n    156\n], [\n    156,\n    124\n], [\n    95,\n    78\n], [\n    78,\n    96\n], [\n    96,\n    95\n], [\n    70,\n    46\n], [\n    46,\n    63\n], [\n    63,\n    70\n], [\n    116,\n    143\n], [\n    143,\n    227\n], [\n    227,\n    116\n], [\n    116,\n    123\n], [\n    123,\n    111\n], [\n    111,\n    116\n], [\n    1,\n    44\n], [\n    44,\n    19\n], [\n    19,\n    1\n], [\n    3,\n    236\n], [\n    236,\n    51\n], [\n    51,\n    3\n], [\n    207,\n    216\n], [\n    216,\n    205\n], [\n    205,\n    207\n], [\n    26,\n    154\n], [\n    154,\n    22\n], [\n    22,\n    26\n], [\n    165,\n    39\n], [\n    39,\n    167\n], [\n    167,\n    165\n], [\n    199,\n    200\n], [\n    200,\n    208\n], [\n    208,\n    199\n], [\n    101,\n    36\n], [\n    36,\n    100\n], [\n    100,\n    101\n], [\n    43,\n    57\n], [\n    57,\n    202\n], [\n    202,\n    43\n], [\n    242,\n    20\n], [\n    20,\n    99\n], [\n    99,\n    242\n], [\n    56,\n    28\n], [\n    28,\n    157\n], [\n    157,\n    56\n], [\n    124,\n    35\n], [\n    35,\n    113\n], [\n    113,\n    124\n], [\n    29,\n    160\n], [\n    160,\n    27\n], [\n    27,\n    29\n], [\n    211,\n    204\n], [\n    204,\n    210\n], [\n    210,\n    211\n], [\n    124,\n    113\n], [\n    113,\n    46\n], [\n    46,\n    124\n], [\n    106,\n    43\n], [\n    43,\n    204\n], [\n    204,\n    106\n], [\n    96,\n    62\n], [\n    62,\n    77\n], [\n    77,\n    96\n], [\n    227,\n    137\n], [\n    137,\n    116\n], [\n    116,\n    227\n], [\n    73,\n    41\n], [\n    41,\n    72\n], [\n    72,\n    73\n], [\n    36,\n    203\n], [\n    203,\n    142\n], [\n    142,\n    36\n], [\n    235,\n    64\n], [\n    64,\n    240\n], [\n    240,\n    235\n], [\n    48,\n    49\n], [\n    49,\n    64\n], [\n    64,\n    48\n], [\n    42,\n    41\n], [\n    41,\n    74\n], [\n    74,\n    42\n], [\n    214,\n    212\n], [\n    212,\n    207\n], [\n    207,\n    214\n], [\n    183,\n    42\n], [\n    42,\n    184\n], [\n    184,\n    183\n], [\n    210,\n    169\n], [\n    169,\n    211\n], [\n    211,\n    210\n], [\n    140,\n    170\n], [\n    170,\n    176\n], [\n    176,\n    140\n], [\n    104,\n    105\n], [\n    105,\n    69\n], [\n    69,\n    104\n], [\n    193,\n    122\n], [\n    122,\n    168\n], [\n    168,\n    193\n], [\n    50,\n    123\n], [\n    123,\n    187\n], [\n    187,\n    50\n], [\n    89,\n    96\n], [\n    96,\n    90\n], [\n    90,\n    89\n], [\n    66,\n    65\n], [\n    65,\n    107\n], [\n    107,\n    66\n], [\n    179,\n    89\n], [\n    89,\n    180\n], [\n    180,\n    179\n], [\n    119,\n    101\n], [\n    101,\n    120\n], [\n    120,\n    119\n], [\n    68,\n    63\n], [\n    63,\n    104\n], [\n    104,\n    68\n], [\n    234,\n    93\n], [\n    93,\n    227\n], [\n    227,\n    234\n], [\n    16,\n    15\n], [\n    15,\n    85\n], [\n    85,\n    16\n], [\n    209,\n    129\n], [\n    129,\n    49\n], [\n    49,\n    209\n], [\n    15,\n    14\n], [\n    14,\n    86\n], [\n    86,\n    15\n], [\n    107,\n    55\n], [\n    55,\n    9\n], [\n    9,\n    107\n], [\n    120,\n    100\n], [\n    100,\n    121\n], [\n    121,\n    120\n], [\n    153,\n    145\n], [\n    145,\n    22\n], [\n    22,\n    153\n], [\n    178,\n    88\n], [\n    88,\n    179\n], [\n    179,\n    178\n], [\n    197,\n    6\n], [\n    6,\n    196\n], [\n    196,\n    197\n], [\n    89,\n    88\n], [\n    88,\n    96\n], [\n    96,\n    89\n], [\n    135,\n    138\n], [\n    138,\n    136\n], [\n    136,\n    135\n], [\n    138,\n    215\n], [\n    215,\n    172\n], [\n    172,\n    138\n], [\n    218,\n    115\n], [\n    115,\n    219\n], [\n    219,\n    218\n], [\n    41,\n    42\n], [\n    42,\n    81\n], [\n    81,\n    41\n], [\n    5,\n    195\n], [\n    195,\n    51\n], [\n    51,\n    5\n], [\n    57,\n    43\n], [\n    43,\n    61\n], [\n    61,\n    57\n], [\n    208,\n    171\n], [\n    171,\n    199\n], [\n    199,\n    208\n], [\n    41,\n    81\n], [\n    81,\n    38\n], [\n    38,\n    41\n], [\n    224,\n    53\n], [\n    53,\n    225\n], [\n    225,\n    224\n], [\n    24,\n    144\n], [\n    144,\n    110\n], [\n    110,\n    24\n], [\n    105,\n    52\n], [\n    52,\n    66\n], [\n    66,\n    105\n], [\n    118,\n    229\n], [\n    229,\n    117\n], [\n    117,\n    118\n], [\n    227,\n    34\n], [\n    34,\n    234\n], [\n    234,\n    227\n], [\n    66,\n    107\n], [\n    107,\n    69\n], [\n    69,\n    66\n], [\n    10,\n    109\n], [\n    109,\n    151\n], [\n    151,\n    10\n], [\n    219,\n    48\n], [\n    48,\n    235\n], [\n    235,\n    219\n], [\n    183,\n    62\n], [\n    62,\n    191\n], [\n    191,\n    183\n], [\n    142,\n    129\n], [\n    129,\n    126\n], [\n    126,\n    142\n], [\n    116,\n    111\n], [\n    111,\n    143\n], [\n    143,\n    116\n], [\n    118,\n    117\n], [\n    117,\n    50\n], [\n    50,\n    118\n], [\n    223,\n    222\n], [\n    222,\n    52\n], [\n    52,\n    223\n], [\n    94,\n    19\n], [\n    19,\n    141\n], [\n    141,\n    94\n], [\n    222,\n    221\n], [\n    221,\n    65\n], [\n    65,\n    222\n], [\n    196,\n    3\n], [\n    3,\n    197\n], [\n    197,\n    196\n], [\n    45,\n    220\n], [\n    220,\n    44\n], [\n    44,\n    45\n], [\n    156,\n    70\n], [\n    70,\n    139\n], [\n    139,\n    156\n], [\n    188,\n    122\n], [\n    122,\n    245\n], [\n    245,\n    188\n], [\n    139,\n    71\n], [\n    71,\n    162\n], [\n    162,\n    139\n], [\n    149,\n    170\n], [\n    170,\n    150\n], [\n    150,\n    149\n], [\n    122,\n    188\n], [\n    188,\n    196\n], [\n    196,\n    122\n], [\n    206,\n    216\n], [\n    216,\n    92\n], [\n    92,\n    206\n], [\n    164,\n    2\n], [\n    2,\n    167\n], [\n    167,\n    164\n], [\n    242,\n    141\n], [\n    141,\n    241\n], [\n    241,\n    242\n], [\n    0,\n    164\n], [\n    164,\n    37\n], [\n    37,\n    0\n], [\n    11,\n    72\n], [\n    72,\n    12\n], [\n    12,\n    11\n], [\n    12,\n    38\n], [\n    38,\n    13\n], [\n    13,\n    12\n], [\n    70,\n    63\n], [\n    63,\n    71\n], [\n    71,\n    70\n], [\n    31,\n    226\n], [\n    226,\n    111\n], [\n    111,\n    31\n], [\n    36,\n    101\n], [\n    101,\n    205\n], [\n    205,\n    36\n], [\n    203,\n    206\n], [\n    206,\n    165\n], [\n    165,\n    203\n], [\n    126,\n    209\n], [\n    209,\n    217\n], [\n    217,\n    126\n], [\n    98,\n    165\n], [\n    165,\n    97\n], [\n    97,\n    98\n], [\n    237,\n    220\n], [\n    220,\n    218\n], [\n    218,\n    237\n], [\n    237,\n    239\n], [\n    239,\n    241\n], [\n    241,\n    237\n], [\n    210,\n    214\n], [\n    214,\n    169\n], [\n    169,\n    210\n], [\n    140,\n    171\n], [\n    171,\n    32\n], [\n    32,\n    140\n], [\n    241,\n    125\n], [\n    125,\n    237\n], [\n    237,\n    241\n], [\n    179,\n    86\n], [\n    86,\n    178\n], [\n    178,\n    179\n], [\n    180,\n    85\n], [\n    85,\n    179\n], [\n    179,\n    180\n], [\n    181,\n    84\n], [\n    84,\n    180\n], [\n    180,\n    181\n], [\n    182,\n    83\n], [\n    83,\n    181\n], [\n    181,\n    182\n], [\n    194,\n    201\n], [\n    201,\n    182\n], [\n    182,\n    194\n], [\n    177,\n    137\n], [\n    137,\n    132\n], [\n    132,\n    177\n], [\n    184,\n    76\n], [\n    76,\n    183\n], [\n    183,\n    184\n], [\n    185,\n    61\n], [\n    61,\n    184\n], [\n    184,\n    185\n], [\n    186,\n    57\n], [\n    57,\n    185\n], [\n    185,\n    186\n], [\n    216,\n    212\n], [\n    212,\n    186\n], [\n    186,\n    216\n], [\n    192,\n    214\n], [\n    214,\n    187\n], [\n    187,\n    192\n], [\n    139,\n    34\n], [\n    34,\n    156\n], [\n    156,\n    139\n], [\n    218,\n    79\n], [\n    79,\n    237\n], [\n    237,\n    218\n], [\n    147,\n    123\n], [\n    123,\n    177\n], [\n    177,\n    147\n], [\n    45,\n    44\n], [\n    44,\n    4\n], [\n    4,\n    45\n], [\n    208,\n    201\n], [\n    201,\n    32\n], [\n    32,\n    208\n], [\n    98,\n    64\n], [\n    64,\n    129\n], [\n    129,\n    98\n], [\n    192,\n    213\n], [\n    213,\n    138\n], [\n    138,\n    192\n], [\n    235,\n    59\n], [\n    59,\n    219\n], [\n    219,\n    235\n], [\n    141,\n    242\n], [\n    242,\n    97\n], [\n    97,\n    141\n], [\n    97,\n    2\n], [\n    2,\n    141\n], [\n    141,\n    97\n], [\n    240,\n    75\n], [\n    75,\n    235\n], [\n    235,\n    240\n], [\n    229,\n    24\n], [\n    24,\n    228\n], [\n    228,\n    229\n], [\n    31,\n    25\n], [\n    25,\n    226\n], [\n    226,\n    31\n], [\n    230,\n    23\n], [\n    23,\n    229\n], [\n    229,\n    230\n], [\n    231,\n    22\n], [\n    22,\n    230\n], [\n    230,\n    231\n], [\n    232,\n    26\n], [\n    26,\n    231\n], [\n    231,\n    232\n], [\n    233,\n    112\n], [\n    112,\n    232\n], [\n    232,\n    233\n], [\n    244,\n    189\n], [\n    189,\n    243\n], [\n    243,\n    244\n], [\n    189,\n    221\n], [\n    221,\n    190\n], [\n    190,\n    189\n], [\n    222,\n    28\n], [\n    28,\n    221\n], [\n    221,\n    222\n], [\n    223,\n    27\n], [\n    27,\n    222\n], [\n    222,\n    223\n], [\n    224,\n    29\n], [\n    29,\n    223\n], [\n    223,\n    224\n], [\n    225,\n    30\n], [\n    30,\n    224\n], [\n    224,\n    225\n], [\n    113,\n    247\n], [\n    247,\n    225\n], [\n    225,\n    113\n], [\n    99,\n    60\n], [\n    60,\n    240\n], [\n    240,\n    99\n], [\n    213,\n    147\n], [\n    147,\n    215\n], [\n    215,\n    213\n], [\n    60,\n    20\n], [\n    20,\n    166\n], [\n    166,\n    60\n], [\n    192,\n    187\n], [\n    187,\n    213\n], [\n    213,\n    192\n], [\n    243,\n    112\n], [\n    112,\n    244\n], [\n    244,\n    243\n], [\n    244,\n    233\n], [\n    233,\n    245\n], [\n    245,\n    244\n], [\n    245,\n    128\n], [\n    128,\n    188\n], [\n    188,\n    245\n], [\n    188,\n    114\n], [\n    114,\n    174\n], [\n    174,\n    188\n], [\n    134,\n    131\n], [\n    131,\n    220\n], [\n    220,\n    134\n], [\n    174,\n    217\n], [\n    217,\n    236\n], [\n    236,\n    174\n], [\n    236,\n    198\n], [\n    198,\n    134\n], [\n    134,\n    236\n], [\n    215,\n    177\n], [\n    177,\n    58\n], [\n    58,\n    215\n], [\n    156,\n    143\n], [\n    143,\n    124\n], [\n    124,\n    156\n], [\n    25,\n    110\n], [\n    110,\n    7\n], [\n    7,\n    25\n], [\n    31,\n    228\n], [\n    228,\n    25\n], [\n    25,\n    31\n], [\n    264,\n    356\n], [\n    356,\n    368\n], [\n    368,\n    264\n], [\n    0,\n    11\n], [\n    11,\n    267\n], [\n    267,\n    0\n], [\n    451,\n    452\n], [\n    452,\n    349\n], [\n    349,\n    451\n], [\n    267,\n    302\n], [\n    302,\n    269\n], [\n    269,\n    267\n], [\n    350,\n    357\n], [\n    357,\n    277\n], [\n    277,\n    350\n], [\n    350,\n    452\n], [\n    452,\n    357\n], [\n    357,\n    350\n], [\n    299,\n    333\n], [\n    333,\n    297\n], [\n    297,\n    299\n], [\n    396,\n    175\n], [\n    175,\n    377\n], [\n    377,\n    396\n], [\n    280,\n    347\n], [\n    347,\n    330\n], [\n    330,\n    280\n], [\n    269,\n    303\n], [\n    303,\n    270\n], [\n    270,\n    269\n], [\n    151,\n    9\n], [\n    9,\n    337\n], [\n    337,\n    151\n], [\n    344,\n    278\n], [\n    278,\n    360\n], [\n    360,\n    344\n], [\n    424,\n    418\n], [\n    418,\n    431\n], [\n    431,\n    424\n], [\n    270,\n    304\n], [\n    304,\n    409\n], [\n    409,\n    270\n], [\n    272,\n    310\n], [\n    310,\n    407\n], [\n    407,\n    272\n], [\n    322,\n    270\n], [\n    270,\n    410\n], [\n    410,\n    322\n], [\n    449,\n    450\n], [\n    450,\n    347\n], [\n    347,\n    449\n], [\n    432,\n    422\n], [\n    422,\n    434\n], [\n    434,\n    432\n], [\n    18,\n    313\n], [\n    313,\n    17\n], [\n    17,\n    18\n], [\n    291,\n    306\n], [\n    306,\n    375\n], [\n    375,\n    291\n], [\n    259,\n    387\n], [\n    387,\n    260\n], [\n    260,\n    259\n], [\n    424,\n    335\n], [\n    335,\n    418\n], [\n    418,\n    424\n], [\n    434,\n    364\n], [\n    364,\n    416\n], [\n    416,\n    434\n], [\n    391,\n    423\n], [\n    423,\n    327\n], [\n    327,\n    391\n], [\n    301,\n    251\n], [\n    251,\n    298\n], [\n    298,\n    301\n], [\n    275,\n    281\n], [\n    281,\n    4\n], [\n    4,\n    275\n], [\n    254,\n    373\n], [\n    373,\n    253\n], [\n    253,\n    254\n], [\n    375,\n    307\n], [\n    307,\n    321\n], [\n    321,\n    375\n], [\n    280,\n    425\n], [\n    425,\n    411\n], [\n    411,\n    280\n], [\n    200,\n    421\n], [\n    421,\n    18\n], [\n    18,\n    200\n], [\n    335,\n    321\n], [\n    321,\n    406\n], [\n    406,\n    335\n], [\n    321,\n    320\n], [\n    320,\n    405\n], [\n    405,\n    321\n], [\n    314,\n    315\n], [\n    315,\n    17\n], [\n    17,\n    314\n], [\n    423,\n    426\n], [\n    426,\n    266\n], [\n    266,\n    423\n], [\n    396,\n    377\n], [\n    377,\n    369\n], [\n    369,\n    396\n], [\n    270,\n    322\n], [\n    322,\n    269\n], [\n    269,\n    270\n], [\n    413,\n    417\n], [\n    417,\n    464\n], [\n    464,\n    413\n], [\n    385,\n    386\n], [\n    386,\n    258\n], [\n    258,\n    385\n], [\n    248,\n    456\n], [\n    456,\n    419\n], [\n    419,\n    248\n], [\n    298,\n    284\n], [\n    284,\n    333\n], [\n    333,\n    298\n], [\n    168,\n    417\n], [\n    417,\n    8\n], [\n    8,\n    168\n], [\n    448,\n    346\n], [\n    346,\n    261\n], [\n    261,\n    448\n], [\n    417,\n    413\n], [\n    413,\n    285\n], [\n    285,\n    417\n], [\n    326,\n    327\n], [\n    327,\n    328\n], [\n    328,\n    326\n], [\n    277,\n    355\n], [\n    355,\n    329\n], [\n    329,\n    277\n], [\n    309,\n    392\n], [\n    392,\n    438\n], [\n    438,\n    309\n], [\n    381,\n    382\n], [\n    382,\n    256\n], [\n    256,\n    381\n], [\n    279,\n    429\n], [\n    429,\n    360\n], [\n    360,\n    279\n], [\n    365,\n    364\n], [\n    364,\n    379\n], [\n    379,\n    365\n], [\n    355,\n    277\n], [\n    277,\n    437\n], [\n    437,\n    355\n], [\n    282,\n    443\n], [\n    443,\n    283\n], [\n    283,\n    282\n], [\n    281,\n    275\n], [\n    275,\n    363\n], [\n    363,\n    281\n], [\n    395,\n    431\n], [\n    431,\n    369\n], [\n    369,\n    395\n], [\n    299,\n    297\n], [\n    297,\n    337\n], [\n    337,\n    299\n], [\n    335,\n    273\n], [\n    273,\n    321\n], [\n    321,\n    335\n], [\n    348,\n    450\n], [\n    450,\n    349\n], [\n    349,\n    348\n], [\n    359,\n    446\n], [\n    446,\n    467\n], [\n    467,\n    359\n], [\n    283,\n    293\n], [\n    293,\n    282\n], [\n    282,\n    283\n], [\n    250,\n    458\n], [\n    458,\n    462\n], [\n    462,\n    250\n], [\n    300,\n    276\n], [\n    276,\n    383\n], [\n    383,\n    300\n], [\n    292,\n    308\n], [\n    308,\n    325\n], [\n    325,\n    292\n], [\n    283,\n    276\n], [\n    276,\n    293\n], [\n    293,\n    283\n], [\n    264,\n    372\n], [\n    372,\n    447\n], [\n    447,\n    264\n], [\n    346,\n    352\n], [\n    352,\n    340\n], [\n    340,\n    346\n], [\n    354,\n    274\n], [\n    274,\n    19\n], [\n    19,\n    354\n], [\n    363,\n    456\n], [\n    456,\n    281\n], [\n    281,\n    363\n], [\n    426,\n    436\n], [\n    436,\n    425\n], [\n    425,\n    426\n], [\n    380,\n    381\n], [\n    381,\n    252\n], [\n    252,\n    380\n], [\n    267,\n    269\n], [\n    269,\n    393\n], [\n    393,\n    267\n], [\n    421,\n    200\n], [\n    200,\n    428\n], [\n    428,\n    421\n], [\n    371,\n    266\n], [\n    266,\n    329\n], [\n    329,\n    371\n], [\n    432,\n    287\n], [\n    287,\n    422\n], [\n    422,\n    432\n], [\n    290,\n    250\n], [\n    250,\n    328\n], [\n    328,\n    290\n], [\n    385,\n    258\n], [\n    258,\n    384\n], [\n    384,\n    385\n], [\n    446,\n    265\n], [\n    265,\n    342\n], [\n    342,\n    446\n], [\n    386,\n    387\n], [\n    387,\n    257\n], [\n    257,\n    386\n], [\n    422,\n    424\n], [\n    424,\n    430\n], [\n    430,\n    422\n], [\n    445,\n    342\n], [\n    342,\n    276\n], [\n    276,\n    445\n], [\n    422,\n    273\n], [\n    273,\n    424\n], [\n    424,\n    422\n], [\n    306,\n    292\n], [\n    292,\n    307\n], [\n    307,\n    306\n], [\n    352,\n    366\n], [\n    366,\n    345\n], [\n    345,\n    352\n], [\n    268,\n    271\n], [\n    271,\n    302\n], [\n    302,\n    268\n], [\n    358,\n    423\n], [\n    423,\n    371\n], [\n    371,\n    358\n], [\n    327,\n    294\n], [\n    294,\n    460\n], [\n    460,\n    327\n], [\n    331,\n    279\n], [\n    279,\n    294\n], [\n    294,\n    331\n], [\n    303,\n    271\n], [\n    271,\n    304\n], [\n    304,\n    303\n], [\n    436,\n    432\n], [\n    432,\n    427\n], [\n    427,\n    436\n], [\n    304,\n    272\n], [\n    272,\n    408\n], [\n    408,\n    304\n], [\n    395,\n    394\n], [\n    394,\n    431\n], [\n    431,\n    395\n], [\n    378,\n    395\n], [\n    395,\n    400\n], [\n    400,\n    378\n], [\n    296,\n    334\n], [\n    334,\n    299\n], [\n    299,\n    296\n], [\n    6,\n    351\n], [\n    351,\n    168\n], [\n    168,\n    6\n], [\n    376,\n    352\n], [\n    352,\n    411\n], [\n    411,\n    376\n], [\n    307,\n    325\n], [\n    325,\n    320\n], [\n    320,\n    307\n], [\n    285,\n    295\n], [\n    295,\n    336\n], [\n    336,\n    285\n], [\n    320,\n    319\n], [\n    319,\n    404\n], [\n    404,\n    320\n], [\n    329,\n    330\n], [\n    330,\n    349\n], [\n    349,\n    329\n], [\n    334,\n    293\n], [\n    293,\n    333\n], [\n    333,\n    334\n], [\n    366,\n    323\n], [\n    323,\n    447\n], [\n    447,\n    366\n], [\n    316,\n    15\n], [\n    15,\n    315\n], [\n    315,\n    316\n], [\n    331,\n    358\n], [\n    358,\n    279\n], [\n    279,\n    331\n], [\n    317,\n    14\n], [\n    14,\n    316\n], [\n    316,\n    317\n], [\n    8,\n    285\n], [\n    285,\n    9\n], [\n    9,\n    8\n], [\n    277,\n    329\n], [\n    329,\n    350\n], [\n    350,\n    277\n], [\n    253,\n    374\n], [\n    374,\n    252\n], [\n    252,\n    253\n], [\n    319,\n    318\n], [\n    318,\n    403\n], [\n    403,\n    319\n], [\n    351,\n    6\n], [\n    6,\n    419\n], [\n    419,\n    351\n], [\n    324,\n    318\n], [\n    318,\n    325\n], [\n    325,\n    324\n], [\n    397,\n    367\n], [\n    367,\n    365\n], [\n    365,\n    397\n], [\n    288,\n    435\n], [\n    435,\n    397\n], [\n    397,\n    288\n], [\n    278,\n    344\n], [\n    344,\n    439\n], [\n    439,\n    278\n], [\n    310,\n    272\n], [\n    272,\n    311\n], [\n    311,\n    310\n], [\n    248,\n    195\n], [\n    195,\n    281\n], [\n    281,\n    248\n], [\n    375,\n    273\n], [\n    273,\n    291\n], [\n    291,\n    375\n], [\n    175,\n    396\n], [\n    396,\n    199\n], [\n    199,\n    175\n], [\n    312,\n    311\n], [\n    311,\n    268\n], [\n    268,\n    312\n], [\n    276,\n    283\n], [\n    283,\n    445\n], [\n    445,\n    276\n], [\n    390,\n    373\n], [\n    373,\n    339\n], [\n    339,\n    390\n], [\n    295,\n    282\n], [\n    282,\n    296\n], [\n    296,\n    295\n], [\n    448,\n    449\n], [\n    449,\n    346\n], [\n    346,\n    448\n], [\n    356,\n    264\n], [\n    264,\n    454\n], [\n    454,\n    356\n], [\n    337,\n    336\n], [\n    336,\n    299\n], [\n    299,\n    337\n], [\n    337,\n    338\n], [\n    338,\n    151\n], [\n    151,\n    337\n], [\n    294,\n    278\n], [\n    278,\n    455\n], [\n    455,\n    294\n], [\n    308,\n    292\n], [\n    292,\n    415\n], [\n    415,\n    308\n], [\n    429,\n    358\n], [\n    358,\n    355\n], [\n    355,\n    429\n], [\n    265,\n    340\n], [\n    340,\n    372\n], [\n    372,\n    265\n], [\n    352,\n    346\n], [\n    346,\n    280\n], [\n    280,\n    352\n], [\n    295,\n    442\n], [\n    442,\n    282\n], [\n    282,\n    295\n], [\n    354,\n    19\n], [\n    19,\n    370\n], [\n    370,\n    354\n], [\n    285,\n    441\n], [\n    441,\n    295\n], [\n    295,\n    285\n], [\n    195,\n    248\n], [\n    248,\n    197\n], [\n    197,\n    195\n], [\n    457,\n    440\n], [\n    440,\n    274\n], [\n    274,\n    457\n], [\n    301,\n    300\n], [\n    300,\n    368\n], [\n    368,\n    301\n], [\n    417,\n    351\n], [\n    351,\n    465\n], [\n    465,\n    417\n], [\n    251,\n    301\n], [\n    301,\n    389\n], [\n    389,\n    251\n], [\n    394,\n    395\n], [\n    395,\n    379\n], [\n    379,\n    394\n], [\n    399,\n    412\n], [\n    412,\n    419\n], [\n    419,\n    399\n], [\n    410,\n    436\n], [\n    436,\n    322\n], [\n    322,\n    410\n], [\n    326,\n    2\n], [\n    2,\n    393\n], [\n    393,\n    326\n], [\n    354,\n    370\n], [\n    370,\n    461\n], [\n    461,\n    354\n], [\n    393,\n    164\n], [\n    164,\n    267\n], [\n    267,\n    393\n], [\n    268,\n    302\n], [\n    302,\n    12\n], [\n    12,\n    268\n], [\n    312,\n    268\n], [\n    268,\n    13\n], [\n    13,\n    312\n], [\n    298,\n    293\n], [\n    293,\n    301\n], [\n    301,\n    298\n], [\n    265,\n    446\n], [\n    446,\n    340\n], [\n    340,\n    265\n], [\n    280,\n    330\n], [\n    330,\n    425\n], [\n    425,\n    280\n], [\n    322,\n    426\n], [\n    426,\n    391\n], [\n    391,\n    322\n], [\n    420,\n    429\n], [\n    429,\n    437\n], [\n    437,\n    420\n], [\n    393,\n    391\n], [\n    391,\n    326\n], [\n    326,\n    393\n], [\n    344,\n    440\n], [\n    440,\n    438\n], [\n    438,\n    344\n], [\n    458,\n    459\n], [\n    459,\n    461\n], [\n    461,\n    458\n], [\n    364,\n    434\n], [\n    434,\n    394\n], [\n    394,\n    364\n], [\n    428,\n    396\n], [\n    396,\n    262\n], [\n    262,\n    428\n], [\n    274,\n    354\n], [\n    354,\n    457\n], [\n    457,\n    274\n], [\n    317,\n    316\n], [\n    316,\n    402\n], [\n    402,\n    317\n], [\n    316,\n    315\n], [\n    315,\n    403\n], [\n    403,\n    316\n], [\n    315,\n    314\n], [\n    314,\n    404\n], [\n    404,\n    315\n], [\n    314,\n    313\n], [\n    313,\n    405\n], [\n    405,\n    314\n], [\n    313,\n    421\n], [\n    421,\n    406\n], [\n    406,\n    313\n], [\n    323,\n    366\n], [\n    366,\n    361\n], [\n    361,\n    323\n], [\n    292,\n    306\n], [\n    306,\n    407\n], [\n    407,\n    292\n], [\n    306,\n    291\n], [\n    291,\n    408\n], [\n    408,\n    306\n], [\n    291,\n    287\n], [\n    287,\n    409\n], [\n    409,\n    291\n], [\n    287,\n    432\n], [\n    432,\n    410\n], [\n    410,\n    287\n], [\n    427,\n    434\n], [\n    434,\n    411\n], [\n    411,\n    427\n], [\n    372,\n    264\n], [\n    264,\n    383\n], [\n    383,\n    372\n], [\n    459,\n    309\n], [\n    309,\n    457\n], [\n    457,\n    459\n], [\n    366,\n    352\n], [\n    352,\n    401\n], [\n    401,\n    366\n], [\n    1,\n    274\n], [\n    274,\n    4\n], [\n    4,\n    1\n], [\n    418,\n    421\n], [\n    421,\n    262\n], [\n    262,\n    418\n], [\n    331,\n    294\n], [\n    294,\n    358\n], [\n    358,\n    331\n], [\n    435,\n    433\n], [\n    433,\n    367\n], [\n    367,\n    435\n], [\n    392,\n    289\n], [\n    289,\n    439\n], [\n    439,\n    392\n], [\n    328,\n    462\n], [\n    462,\n    326\n], [\n    326,\n    328\n], [\n    94,\n    2\n], [\n    2,\n    370\n], [\n    370,\n    94\n], [\n    289,\n    305\n], [\n    305,\n    455\n], [\n    455,\n    289\n], [\n    339,\n    254\n], [\n    254,\n    448\n], [\n    448,\n    339\n], [\n    359,\n    255\n], [\n    255,\n    446\n], [\n    446,\n    359\n], [\n    254,\n    253\n], [\n    253,\n    449\n], [\n    449,\n    254\n], [\n    253,\n    252\n], [\n    252,\n    450\n], [\n    450,\n    253\n], [\n    252,\n    256\n], [\n    256,\n    451\n], [\n    451,\n    252\n], [\n    256,\n    341\n], [\n    341,\n    452\n], [\n    452,\n    256\n], [\n    414,\n    413\n], [\n    413,\n    463\n], [\n    463,\n    414\n], [\n    286,\n    441\n], [\n    441,\n    414\n], [\n    414,\n    286\n], [\n    286,\n    258\n], [\n    258,\n    441\n], [\n    441,\n    286\n], [\n    258,\n    257\n], [\n    257,\n    442\n], [\n    442,\n    258\n], [\n    257,\n    259\n], [\n    259,\n    443\n], [\n    443,\n    257\n], [\n    259,\n    260\n], [\n    260,\n    444\n], [\n    444,\n    259\n], [\n    260,\n    467\n], [\n    467,\n    445\n], [\n    445,\n    260\n], [\n    309,\n    459\n], [\n    459,\n    250\n], [\n    250,\n    309\n], [\n    305,\n    289\n], [\n    289,\n    290\n], [\n    290,\n    305\n], [\n    305,\n    290\n], [\n    290,\n    460\n], [\n    460,\n    305\n], [\n    401,\n    376\n], [\n    376,\n    435\n], [\n    435,\n    401\n], [\n    309,\n    250\n], [\n    250,\n    392\n], [\n    392,\n    309\n], [\n    376,\n    411\n], [\n    411,\n    433\n], [\n    433,\n    376\n], [\n    453,\n    341\n], [\n    341,\n    464\n], [\n    464,\n    453\n], [\n    357,\n    453\n], [\n    453,\n    465\n], [\n    465,\n    357\n], [\n    343,\n    357\n], [\n    357,\n    412\n], [\n    412,\n    343\n], [\n    437,\n    343\n], [\n    343,\n    399\n], [\n    399,\n    437\n], [\n    344,\n    360\n], [\n    360,\n    440\n], [\n    440,\n    344\n], [\n    420,\n    437\n], [\n    437,\n    456\n], [\n    456,\n    420\n], [\n    360,\n    420\n], [\n    420,\n    363\n], [\n    363,\n    360\n], [\n    361,\n    401\n], [\n    401,\n    288\n], [\n    288,\n    361\n], [\n    265,\n    372\n], [\n    372,\n    353\n], [\n    353,\n    265\n], [\n    390,\n    339\n], [\n    339,\n    249\n], [\n    249,\n    390\n], [\n    339,\n    448\n], [\n    448,\n    255\n], [\n    255,\n    339\n]);\nfunction mh(t) {\n    t.u = {\n        faceLandmarks: [],\n        faceBlendshapes: [],\n        facialTransformationMatrixes: []\n    };\n}\nvar yh = class extends ih {\n    constructor(t, e){\n        super(new Za(t, e), \"image_in\", \"norm_rect\", !1), this.u = {\n            faceLandmarks: [],\n            faceBlendshapes: [],\n            facialTransformationMatrixes: []\n        }, this.outputFacialTransformationMatrixes = this.outputFaceBlendshapes = !1, Cn(t = this.h = new Hs, 0, 1, e = new Cs), this.H = new Vs, Cn(this.h, 0, 3, this.H), this.j = new Is, Cn(this.h, 0, 2, this.j), Xn(this.j, 4, 1), Hn(this.j, 2, .5), Hn(this.H, 2, .5), Hn(this.h, 4, .5);\n    }\n    get baseOptions() {\n        return Rn(this.h, Cs, 1);\n    }\n    set baseOptions(t) {\n        Cn(this.h, 0, 1, t);\n    }\n    o(t) {\n        return \"numFaces\" in t && Xn(this.j, 4, t.numFaces ?? 1), \"minFaceDetectionConfidence\" in t && Hn(this.j, 2, t.minFaceDetectionConfidence ?? .5), \"minTrackingConfidence\" in t && Hn(this.h, 4, t.minTrackingConfidence ?? .5), \"minFacePresenceConfidence\" in t && Hn(this.H, 2, t.minFacePresenceConfidence ?? .5), \"outputFaceBlendshapes\" in t && (this.outputFaceBlendshapes = !!t.outputFaceBlendshapes), \"outputFacialTransformationMatrixes\" in t && (this.outputFacialTransformationMatrixes = !!t.outputFacialTransformationMatrixes), this.l(t);\n    }\n    F(t, e) {\n        return mh(this), eh(this, t, e), this.u;\n    }\n    G(t, e, n) {\n        return mh(this), nh(this, t, n, e), this.u;\n    }\n    m() {\n        var t = new Di;\n        Ii(t, \"image_in\"), Ii(t, \"norm_rect\"), Ui(t, \"face_landmarks\");\n        const e = new yi;\n        Wn(e, zs, this.h);\n        const n = new Li;\n        ki(n, \"mediapipe.tasks.vision.face_landmarker.FaceLandmarkerGraph\"), xi(n, \"IMAGE:image_in\"), xi(n, \"NORM_RECT:norm_rect\"), Si(n, \"NORM_LANDMARKS:face_landmarks\"), n.o(e), Oi(t, n), this.g.attachProtoVectorListener(\"face_landmarks\", (t, e)=>{\n            for (const e of t)t = us(e), this.u.faceLandmarks.push(Io(t));\n            ea(this, e);\n        }), this.g.attachEmptyPacketListener(\"face_landmarks\", (t)=>{\n            ea(this, t);\n        }), this.outputFaceBlendshapes && (Ui(t, \"blendshapes\"), Si(n, \"BLENDSHAPES:blendshapes\"), this.g.attachProtoVectorListener(\"blendshapes\", (t, e)=>{\n            if (this.outputFaceBlendshapes) for (const e of t)t = Wi(e), this.u.faceBlendshapes.push(Co(t.g() ?? []));\n            ea(this, e);\n        }), this.g.attachEmptyPacketListener(\"blendshapes\", (t)=>{\n            ea(this, t);\n        })), this.outputFacialTransformationMatrixes && (Ui(t, \"face_geometry\"), Si(n, \"FACE_GEOMETRY:face_geometry\"), this.g.attachProtoVectorListener(\"face_geometry\", (t, e)=>{\n            if (this.outputFacialTransformationMatrixes) for (const e of t)(t = Rn(Gs(e), ls, 2)) && this.u.facialTransformationMatrixes.push({\n                rows: Bn(Nn(t, 1), 0) ?? 0,\n                columns: Bn(Nn(t, 2), 0) ?? 0,\n                data: yn(t, 3, ve).slice() ?? []\n            });\n            ea(this, e);\n        }), this.g.attachEmptyPacketListener(\"face_geometry\", (t)=>{\n            ea(this, t);\n        })), t = t.g(), this.setGraph(new Uint8Array(t), !0);\n    }\n};\nyh.prototype.detectForVideo = yh.prototype.G, yh.prototype.detect = yh.prototype.F, yh.prototype.setOptions = yh.prototype.o, yh.createFromModelPath = function(t, e) {\n    return Qa(yh, t, {\n        baseOptions: {\n            modelAssetPath: e\n        }\n    });\n}, yh.createFromModelBuffer = function(t, e) {\n    return Qa(yh, t, {\n        baseOptions: {\n            modelAssetBuffer: e\n        }\n    });\n}, yh.createFromOptions = function(t, e) {\n    return Qa(yh, t, e);\n}, yh.FACE_LANDMARKS_LIPS = oh, yh.FACE_LANDMARKS_LEFT_EYE = ah, yh.FACE_LANDMARKS_LEFT_EYEBROW = hh, yh.FACE_LANDMARKS_LEFT_IRIS = ch, yh.FACE_LANDMARKS_RIGHT_EYE = uh, yh.FACE_LANDMARKS_RIGHT_EYEBROW = lh, yh.FACE_LANDMARKS_RIGHT_IRIS = dh, yh.FACE_LANDMARKS_FACE_OVAL = fh, yh.FACE_LANDMARKS_CONTOURS = ph, yh.FACE_LANDMARKS_TESSELATION = gh;\nvar _h = class extends ih {\n    constructor(t, e){\n        super(new Za(t, e), \"image_in\", \"norm_rect\", !0), Cn(t = this.j = new Ks, 0, 1, e = new Cs);\n    }\n    get baseOptions() {\n        return Rn(this.j, Cs, 1);\n    }\n    set baseOptions(t) {\n        Cn(this.j, 0, 1, t);\n    }\n    o(t) {\n        return super.l(t);\n    }\n    Pa(t, e, n) {\n        const r = \"function\" != typeof e ? e : {};\n        if (this.h = \"function\" == typeof e ? e : n, eh(this, t, r ?? {}), !this.h) return this.u;\n    }\n    m() {\n        var t = new Di;\n        Ii(t, \"image_in\"), Ii(t, \"norm_rect\"), Ui(t, \"stylized_image\");\n        const e = new yi;\n        Wn(e, Ys, this.j);\n        const n = new Li;\n        ki(n, \"mediapipe.tasks.vision.face_stylizer.FaceStylizerGraph\"), xi(n, \"IMAGE:image_in\"), xi(n, \"NORM_RECT:norm_rect\"), Si(n, \"STYLIZED_IMAGE:stylized_image\"), n.o(e), Oi(t, n), this.g.W(\"stylized_image\", (t, e)=>{\n            var n = !this.h, r = t.data, i = t.width;\n            const s = i * (t = t.height);\n            if (r instanceof Uint8Array) if (r.length === 3 * s) {\n                const e = new Uint8ClampedArray(4 * s);\n                for(let t = 0; t < s; ++t)e[4 * t] = r[3 * t], e[4 * t + 1] = r[3 * t + 1], e[4 * t + 2] = r[3 * t + 2], e[4 * t + 3] = 255;\n                r = new ImageData(e, i, t);\n            } else {\n                if (r.length !== 4 * s) throw Error(\"Unsupported channel count: \" + r.length / s);\n                r = new ImageData(new Uint8ClampedArray(r.buffer, r.byteOffset, r.length), i, t);\n            }\n            else if (!(r instanceof WebGLTexture)) throw Error(`Unsupported format: ${r.constructor.name}`);\n            i = new Ka([\n                r\n            ], !1, !1, this.g.i.canvas, this.M, i, t), this.u = n = n ? i.clone() : i, this.h && this.h(n), ea(this, e);\n        }), this.g.attachEmptyPacketListener(\"stylized_image\", (t)=>{\n            this.u = null, this.h && this.h(null), ea(this, t);\n        }), t = t.g(), this.setGraph(new Uint8Array(t), !0);\n    }\n};\n_h.prototype.stylize = _h.prototype.Pa, _h.prototype.setOptions = _h.prototype.o, _h.createFromModelPath = function(t, e) {\n    return Qa(_h, t, {\n        baseOptions: {\n            modelAssetPath: e\n        }\n    });\n}, _h.createFromModelBuffer = function(t, e) {\n    return Qa(_h, t, {\n        baseOptions: {\n            modelAssetBuffer: e\n        }\n    });\n}, _h.createFromOptions = function(t, e) {\n    return Qa(_h, t, e);\n};\nvar vh = $a([\n    0,\n    1\n], [\n    1,\n    2\n], [\n    2,\n    3\n], [\n    3,\n    4\n], [\n    0,\n    5\n], [\n    5,\n    6\n], [\n    6,\n    7\n], [\n    7,\n    8\n], [\n    5,\n    9\n], [\n    9,\n    10\n], [\n    10,\n    11\n], [\n    11,\n    12\n], [\n    9,\n    13\n], [\n    13,\n    14\n], [\n    14,\n    15\n], [\n    15,\n    16\n], [\n    13,\n    17\n], [\n    0,\n    17\n], [\n    17,\n    18\n], [\n    18,\n    19\n], [\n    19,\n    20\n]);\nfunction Eh(t) {\n    t.gestures = [], t.landmarks = [], t.worldLandmarks = [], t.handedness = [];\n}\nfunction wh(t) {\n    return 0 === t.gestures.length ? {\n        gestures: [],\n        landmarks: [],\n        worldLandmarks: [],\n        handedness: [],\n        handednesses: []\n    } : {\n        gestures: t.gestures,\n        landmarks: t.landmarks,\n        worldLandmarks: t.worldLandmarks,\n        handedness: t.handedness,\n        handednesses: t.handedness\n    };\n}\nfunction Th(t, e = !0) {\n    const n = [];\n    for (const i of t){\n        var r = Wi(i);\n        t = [];\n        for (const n of r.g())r = e && null != Nn(n, 1) ? Bn(Nn(n, 1), 0) : -1, t.push({\n            score: Gn(n, 2) ?? 0,\n            index: r,\n            categoryName: jn(n, 3) ?? \"\",\n            displayName: jn(n, 4) ?? \"\"\n        });\n        n.push(t);\n    }\n    return n;\n}\nvar Ah = class extends ih {\n    constructor(t, e){\n        super(new Za(t, e), \"image_in\", \"norm_rect\", !1), this.gestures = [], this.landmarks = [], this.worldLandmarks = [], this.handedness = [], Cn(t = this.v = new oo, 0, 1, e = new Cs), this.A = new io, Cn(this.v, 0, 2, this.A), this.u = new no, Cn(this.A, 0, 3, this.u), this.h = new to, Cn(this.A, 0, 2, this.h), this.j = new Zs, Cn(this.v, 0, 3, this.j), Hn(this.h, 2, .5), Hn(this.A, 4, .5), Hn(this.u, 2, .5);\n    }\n    get baseOptions() {\n        return Rn(this.v, Cs, 1);\n    }\n    set baseOptions(t) {\n        Cn(this.v, 0, 1, t);\n    }\n    o(t) {\n        if (Xn(this.h, 3, t.numHands ?? 1), \"minHandDetectionConfidence\" in t && Hn(this.h, 2, t.minHandDetectionConfidence ?? .5), \"minTrackingConfidence\" in t && Hn(this.A, 4, t.minTrackingConfidence ?? .5), \"minHandPresenceConfidence\" in t && Hn(this.u, 2, t.minHandPresenceConfidence ?? .5), t.cannedGesturesClassifierOptions) {\n            var e = new $s, n = e, r = Po(t.cannedGesturesClassifierOptions, Rn(this.j, $s, 3)?.h());\n            Cn(n, 0, 2, r), Cn(this.j, 0, 3, e);\n        } else void 0 === t.cannedGesturesClassifierOptions && Rn(this.j, $s, 3)?.g();\n        return t.customGesturesClassifierOptions ? (Cn(n = e = new $s, 0, 2, r = Po(t.customGesturesClassifierOptions, Rn(this.j, $s, 4)?.h())), Cn(this.j, 0, 4, e)) : void 0 === t.customGesturesClassifierOptions && Rn(this.j, $s, 4)?.g(), this.l(t);\n    }\n    Ka(t, e) {\n        return Eh(this), eh(this, t, e), wh(this);\n    }\n    La(t, e, n) {\n        return Eh(this), nh(this, t, n, e), wh(this);\n    }\n    m() {\n        var t = new Di;\n        Ii(t, \"image_in\"), Ii(t, \"norm_rect\"), Ui(t, \"hand_gestures\"), Ui(t, \"hand_landmarks\"), Ui(t, \"world_hand_landmarks\"), Ui(t, \"handedness\");\n        const e = new yi;\n        Wn(e, co, this.v);\n        const n = new Li;\n        ki(n, \"mediapipe.tasks.vision.gesture_recognizer.GestureRecognizerGraph\"), xi(n, \"IMAGE:image_in\"), xi(n, \"NORM_RECT:norm_rect\"), Si(n, \"HAND_GESTURES:hand_gestures\"), Si(n, \"LANDMARKS:hand_landmarks\"), Si(n, \"WORLD_LANDMARKS:world_hand_landmarks\"), Si(n, \"HANDEDNESS:handedness\"), n.o(e), Oi(t, n), this.g.attachProtoVectorListener(\"hand_landmarks\", (t, e)=>{\n            for (const e of t){\n                t = us(e);\n                const n = [];\n                for (const e of Pn(t, as, 1))n.push({\n                    x: Gn(e, 1) ?? 0,\n                    y: Gn(e, 2) ?? 0,\n                    z: Gn(e, 3) ?? 0,\n                    visibility: Gn(e, 4) ?? 0\n                });\n                this.landmarks.push(n);\n            }\n            ea(this, e);\n        }), this.g.attachEmptyPacketListener(\"hand_landmarks\", (t)=>{\n            ea(this, t);\n        }), this.g.attachProtoVectorListener(\"world_hand_landmarks\", (t, e)=>{\n            for (const e of t){\n                t = os(e);\n                const n = [];\n                for (const e of Pn(t, rs, 1))n.push({\n                    x: Gn(e, 1) ?? 0,\n                    y: Gn(e, 2) ?? 0,\n                    z: Gn(e, 3) ?? 0,\n                    visibility: Gn(e, 4) ?? 0\n                });\n                this.worldLandmarks.push(n);\n            }\n            ea(this, e);\n        }), this.g.attachEmptyPacketListener(\"world_hand_landmarks\", (t)=>{\n            ea(this, t);\n        }), this.g.attachProtoVectorListener(\"hand_gestures\", (t, e)=>{\n            this.gestures.push(...Th(t, !1)), ea(this, e);\n        }), this.g.attachEmptyPacketListener(\"hand_gestures\", (t)=>{\n            ea(this, t);\n        }), this.g.attachProtoVectorListener(\"handedness\", (t, e)=>{\n            this.handedness.push(...Th(t)), ea(this, e);\n        }), this.g.attachEmptyPacketListener(\"handedness\", (t)=>{\n            ea(this, t);\n        }), t = t.g(), this.setGraph(new Uint8Array(t), !0);\n    }\n};\nfunction bh(t) {\n    return {\n        landmarks: t.landmarks,\n        worldLandmarks: t.worldLandmarks,\n        handednesses: t.handedness,\n        handedness: t.handedness\n    };\n}\nAh.prototype.recognizeForVideo = Ah.prototype.La, Ah.prototype.recognize = Ah.prototype.Ka, Ah.prototype.setOptions = Ah.prototype.o, Ah.createFromModelPath = function(t, e) {\n    return Qa(Ah, t, {\n        baseOptions: {\n            modelAssetPath: e\n        }\n    });\n}, Ah.createFromModelBuffer = function(t, e) {\n    return Qa(Ah, t, {\n        baseOptions: {\n            modelAssetBuffer: e\n        }\n    });\n}, Ah.createFromOptions = function(t, e) {\n    return Qa(Ah, t, e);\n}, Ah.HAND_CONNECTIONS = vh;\nvar kh = class extends ih {\n    constructor(t, e){\n        super(new Za(t, e), \"image_in\", \"norm_rect\", !1), this.landmarks = [], this.worldLandmarks = [], this.handedness = [], Cn(t = this.j = new io, 0, 1, e = new Cs), this.u = new no, Cn(this.j, 0, 3, this.u), this.h = new to, Cn(this.j, 0, 2, this.h), Xn(this.h, 3, 1), Hn(this.h, 2, .5), Hn(this.u, 2, .5), Hn(this.j, 4, .5);\n    }\n    get baseOptions() {\n        return Rn(this.j, Cs, 1);\n    }\n    set baseOptions(t) {\n        Cn(this.j, 0, 1, t);\n    }\n    o(t) {\n        return \"numHands\" in t && Xn(this.h, 3, t.numHands ?? 1), \"minHandDetectionConfidence\" in t && Hn(this.h, 2, t.minHandDetectionConfidence ?? .5), \"minTrackingConfidence\" in t && Hn(this.j, 4, t.minTrackingConfidence ?? .5), \"minHandPresenceConfidence\" in t && Hn(this.u, 2, t.minHandPresenceConfidence ?? .5), this.l(t);\n    }\n    F(t, e) {\n        return this.landmarks = [], this.worldLandmarks = [], this.handedness = [], eh(this, t, e), bh(this);\n    }\n    G(t, e, n) {\n        return this.landmarks = [], this.worldLandmarks = [], this.handedness = [], nh(this, t, n, e), bh(this);\n    }\n    m() {\n        var t = new Di;\n        Ii(t, \"image_in\"), Ii(t, \"norm_rect\"), Ui(t, \"hand_landmarks\"), Ui(t, \"world_hand_landmarks\"), Ui(t, \"handedness\");\n        const e = new yi;\n        Wn(e, ho, this.j);\n        const n = new Li;\n        ki(n, \"mediapipe.tasks.vision.hand_landmarker.HandLandmarkerGraph\"), xi(n, \"IMAGE:image_in\"), xi(n, \"NORM_RECT:norm_rect\"), Si(n, \"LANDMARKS:hand_landmarks\"), Si(n, \"WORLD_LANDMARKS:world_hand_landmarks\"), Si(n, \"HANDEDNESS:handedness\"), n.o(e), Oi(t, n), this.g.attachProtoVectorListener(\"hand_landmarks\", (t, e)=>{\n            for (const e of t)t = us(e), this.landmarks.push(Io(t));\n            ea(this, e);\n        }), this.g.attachEmptyPacketListener(\"hand_landmarks\", (t)=>{\n            ea(this, t);\n        }), this.g.attachProtoVectorListener(\"world_hand_landmarks\", (t, e)=>{\n            for (const e of t)t = os(e), this.worldLandmarks.push(Uo(t));\n            ea(this, e);\n        }), this.g.attachEmptyPacketListener(\"world_hand_landmarks\", (t)=>{\n            ea(this, t);\n        }), this.g.attachProtoVectorListener(\"handedness\", (t, e)=>{\n            var n = this.handedness, r = n.push;\n            const i = [];\n            for (const e of t){\n                t = Wi(e);\n                const n = [];\n                for (const e of t.g())n.push({\n                    score: Gn(e, 2) ?? 0,\n                    index: Bn(Nn(e, 1), 0) ?? -1,\n                    categoryName: jn(e, 3) ?? \"\",\n                    displayName: jn(e, 4) ?? \"\"\n                });\n                i.push(n);\n            }\n            r.call(n, ...i), ea(this, e);\n        }), this.g.attachEmptyPacketListener(\"handedness\", (t)=>{\n            ea(this, t);\n        }), t = t.g(), this.setGraph(new Uint8Array(t), !0);\n    }\n};\nkh.prototype.detectForVideo = kh.prototype.G, kh.prototype.detect = kh.prototype.F, kh.prototype.setOptions = kh.prototype.o, kh.createFromModelPath = function(t, e) {\n    return Qa(kh, t, {\n        baseOptions: {\n            modelAssetPath: e\n        }\n    });\n}, kh.createFromModelBuffer = function(t, e) {\n    return Qa(kh, t, {\n        baseOptions: {\n            modelAssetBuffer: e\n        }\n    });\n}, kh.createFromOptions = function(t, e) {\n    return Qa(kh, t, e);\n}, kh.HAND_CONNECTIONS = vh;\nvar xh = $a([\n    0,\n    1\n], [\n    1,\n    2\n], [\n    2,\n    3\n], [\n    3,\n    7\n], [\n    0,\n    4\n], [\n    4,\n    5\n], [\n    5,\n    6\n], [\n    6,\n    8\n], [\n    9,\n    10\n], [\n    11,\n    12\n], [\n    11,\n    13\n], [\n    13,\n    15\n], [\n    15,\n    17\n], [\n    15,\n    19\n], [\n    15,\n    21\n], [\n    17,\n    19\n], [\n    12,\n    14\n], [\n    14,\n    16\n], [\n    16,\n    18\n], [\n    16,\n    20\n], [\n    16,\n    22\n], [\n    18,\n    20\n], [\n    11,\n    23\n], [\n    12,\n    24\n], [\n    23,\n    24\n], [\n    23,\n    25\n], [\n    24,\n    26\n], [\n    25,\n    27\n], [\n    26,\n    28\n], [\n    27,\n    29\n], [\n    28,\n    30\n], [\n    29,\n    31\n], [\n    30,\n    32\n], [\n    27,\n    31\n], [\n    28,\n    32\n]);\nfunction Sh(t) {\n    t.h = {\n        faceLandmarks: [],\n        faceBlendshapes: [],\n        poseLandmarks: [],\n        poseWorldLandmarks: [],\n        poseSegmentationMasks: [],\n        leftHandLandmarks: [],\n        leftHandWorldLandmarks: [],\n        rightHandLandmarks: [],\n        rightHandWorldLandmarks: []\n    };\n}\nfunction Lh(t) {\n    try {\n        if (!t.I) return t.h;\n        t.I(t.h);\n    } finally{\n        ia(t);\n    }\n}\nfunction Fh(t, e) {\n    t = us(t), e.push(Io(t));\n}\nvar Rh = class extends ih {\n    constructor(t, e){\n        super(new Za(t, e), \"input_frames_image\", null, !1), this.h = {\n            faceLandmarks: [],\n            faceBlendshapes: [],\n            poseLandmarks: [],\n            poseWorldLandmarks: [],\n            poseSegmentationMasks: [],\n            leftHandLandmarks: [],\n            leftHandWorldLandmarks: [],\n            rightHandLandmarks: [],\n            rightHandWorldLandmarks: []\n        }, this.outputPoseSegmentationMasks = this.outputFaceBlendshapes = !1, Cn(t = this.A = new yo, 0, 1, e = new Cs), this.u = new no, Cn(this.A, 0, 2, this.u), this.aa = new uo, Cn(this.A, 0, 3, this.aa), this.j = new Is, Cn(this.A, 0, 4, this.j), this.H = new Vs, Cn(this.A, 0, 5, this.H), this.v = new fo, Cn(this.A, 0, 6, this.v), this.D = new go, Cn(this.A, 0, 7, this.D), Hn(this.j, 2, .5), Hn(this.j, 3, .3), Hn(this.H, 2, .5), Hn(this.v, 2, .5), Hn(this.v, 3, .3), Hn(this.D, 2, .5), Hn(this.u, 2, .5);\n    }\n    get baseOptions() {\n        return Rn(this.A, Cs, 1);\n    }\n    set baseOptions(t) {\n        Cn(this.A, 0, 1, t);\n    }\n    o(t) {\n        return \"minFaceDetectionConfidence\" in t && Hn(this.j, 2, t.minFaceDetectionConfidence ?? .5), \"minFaceSuppressionThreshold\" in t && Hn(this.j, 3, t.minFaceSuppressionThreshold ?? .3), \"minFacePresenceConfidence\" in t && Hn(this.H, 2, t.minFacePresenceConfidence ?? .5), \"outputFaceBlendshapes\" in t && (this.outputFaceBlendshapes = !!t.outputFaceBlendshapes), \"minPoseDetectionConfidence\" in t && Hn(this.v, 2, t.minPoseDetectionConfidence ?? .5), \"minPoseSuppressionThreshold\" in t && Hn(this.v, 3, t.minPoseSuppressionThreshold ?? .3), \"minPosePresenceConfidence\" in t && Hn(this.D, 2, t.minPosePresenceConfidence ?? .5), \"outputPoseSegmentationMasks\" in t && (this.outputPoseSegmentationMasks = !!t.outputPoseSegmentationMasks), \"minHandLandmarksConfidence\" in t && Hn(this.u, 2, t.minHandLandmarksConfidence ?? .5), this.l(t);\n    }\n    F(t, e, n) {\n        const r = \"function\" != typeof e ? e : {};\n        return this.I = \"function\" == typeof e ? e : n, Sh(this), eh(this, t, r), Lh(this);\n    }\n    G(t, e, n, r) {\n        const i = \"function\" != typeof n ? n : {};\n        return this.I = \"function\" == typeof n ? n : r, Sh(this), nh(this, t, i, e), Lh(this);\n    }\n    m() {\n        var t = new Di;\n        Ii(t, \"input_frames_image\"), Ui(t, \"pose_landmarks\"), Ui(t, \"pose_world_landmarks\"), Ui(t, \"face_landmarks\"), Ui(t, \"left_hand_landmarks\"), Ui(t, \"left_hand_world_landmarks\"), Ui(t, \"right_hand_landmarks\"), Ui(t, \"right_hand_world_landmarks\");\n        const e = new yi, n = new oi;\n        An(n, 1, Me(\"type.googleapis.com/mediapipe.tasks.vision.holistic_landmarker.proto.HolisticLandmarkerGraphOptions\"), \"\"), function(t, e) {\n            if (null != e) if (Array.isArray(e)) dn(t, 2, tn(e, nn, void 0, void 0, !1));\n            else {\n                if (!(\"string\" == typeof e || e instanceof B || M(e))) throw Error(\"invalid value in Any.value field: \" + e + \" expected a ByteString, a base64 encoded string, a Uint8Array or a jspb array\");\n                An(t, 2, ae(e, !1, !1), D());\n            }\n        }(n, this.A.g());\n        const r = new Li;\n        ki(r, \"mediapipe.tasks.vision.holistic_landmarker.HolisticLandmarkerGraph\"), Dn(r, 8, oi, n), xi(r, \"IMAGE:input_frames_image\"), Si(r, \"POSE_LANDMARKS:pose_landmarks\"), Si(r, \"POSE_WORLD_LANDMARKS:pose_world_landmarks\"), Si(r, \"FACE_LANDMARKS:face_landmarks\"), Si(r, \"LEFT_HAND_LANDMARKS:left_hand_landmarks\"), Si(r, \"LEFT_HAND_WORLD_LANDMARKS:left_hand_world_landmarks\"), Si(r, \"RIGHT_HAND_LANDMARKS:right_hand_landmarks\"), Si(r, \"RIGHT_HAND_WORLD_LANDMARKS:right_hand_world_landmarks\"), r.o(e), Oi(t, r), na(this, t), this.g.attachProtoListener(\"pose_landmarks\", (t, e)=>{\n            Fh(t, this.h.poseLandmarks), ea(this, e);\n        }), this.g.attachEmptyPacketListener(\"pose_landmarks\", (t)=>{\n            ea(this, t);\n        }), this.g.attachProtoListener(\"pose_world_landmarks\", (t, e)=>{\n            var n = this.h.poseWorldLandmarks;\n            t = os(t), n.push(Uo(t)), ea(this, e);\n        }), this.g.attachEmptyPacketListener(\"pose_world_landmarks\", (t)=>{\n            ea(this, t);\n        }), this.outputPoseSegmentationMasks && (Si(r, \"POSE_SEGMENTATION_MASK:pose_segmentation_mask\"), ra(this, \"pose_segmentation_mask\"), this.g.W(\"pose_segmentation_mask\", (t, e)=>{\n            this.h.poseSegmentationMasks = [\n                rh(this, t, !0, !this.I)\n            ], ea(this, e);\n        }), this.g.attachEmptyPacketListener(\"pose_segmentation_mask\", (t)=>{\n            this.h.poseSegmentationMasks = [], ea(this, t);\n        })), this.g.attachProtoListener(\"face_landmarks\", (t, e)=>{\n            Fh(t, this.h.faceLandmarks), ea(this, e);\n        }), this.g.attachEmptyPacketListener(\"face_landmarks\", (t)=>{\n            ea(this, t);\n        }), this.outputFaceBlendshapes && (Ui(t, \"extra_blendshapes\"), Si(r, \"FACE_BLENDSHAPES:extra_blendshapes\"), this.g.attachProtoListener(\"extra_blendshapes\", (t, e)=>{\n            var n = this.h.faceBlendshapes;\n            this.outputFaceBlendshapes && (t = Wi(t), n.push(Co(t.g() ?? []))), ea(this, e);\n        }), this.g.attachEmptyPacketListener(\"extra_blendshapes\", (t)=>{\n            ea(this, t);\n        })), this.g.attachProtoListener(\"left_hand_landmarks\", (t, e)=>{\n            Fh(t, this.h.leftHandLandmarks), ea(this, e);\n        }), this.g.attachEmptyPacketListener(\"left_hand_landmarks\", (t)=>{\n            ea(this, t);\n        }), this.g.attachProtoListener(\"left_hand_world_landmarks\", (t, e)=>{\n            var n = this.h.leftHandWorldLandmarks;\n            t = os(t), n.push(Uo(t)), ea(this, e);\n        }), this.g.attachEmptyPacketListener(\"left_hand_world_landmarks\", (t)=>{\n            ea(this, t);\n        }), this.g.attachProtoListener(\"right_hand_landmarks\", (t, e)=>{\n            Fh(t, this.h.rightHandLandmarks), ea(this, e);\n        }), this.g.attachEmptyPacketListener(\"right_hand_landmarks\", (t)=>{\n            ea(this, t);\n        }), this.g.attachProtoListener(\"right_hand_world_landmarks\", (t, e)=>{\n            var n = this.h.rightHandWorldLandmarks;\n            t = os(t), n.push(Uo(t)), ea(this, e);\n        }), this.g.attachEmptyPacketListener(\"right_hand_world_landmarks\", (t)=>{\n            ea(this, t);\n        }), t = t.g(), this.setGraph(new Uint8Array(t), !0);\n    }\n};\nRh.prototype.detectForVideo = Rh.prototype.G, Rh.prototype.detect = Rh.prototype.F, Rh.prototype.setOptions = Rh.prototype.o, Rh.createFromModelPath = function(t, e) {\n    return Qa(Rh, t, {\n        baseOptions: {\n            modelAssetPath: e\n        }\n    });\n}, Rh.createFromModelBuffer = function(t, e) {\n    return Qa(Rh, t, {\n        baseOptions: {\n            modelAssetBuffer: e\n        }\n    });\n}, Rh.createFromOptions = function(t, e) {\n    return Qa(Rh, t, e);\n}, Rh.HAND_CONNECTIONS = vh, Rh.POSE_CONNECTIONS = xh, Rh.FACE_LANDMARKS_LIPS = oh, Rh.FACE_LANDMARKS_LEFT_EYE = ah, Rh.FACE_LANDMARKS_LEFT_EYEBROW = hh, Rh.FACE_LANDMARKS_LEFT_IRIS = ch, Rh.FACE_LANDMARKS_RIGHT_EYE = uh, Rh.FACE_LANDMARKS_RIGHT_EYEBROW = lh, Rh.FACE_LANDMARKS_RIGHT_IRIS = dh, Rh.FACE_LANDMARKS_FACE_OVAL = fh, Rh.FACE_LANDMARKS_CONTOURS = ph, Rh.FACE_LANDMARKS_TESSELATION = gh;\nvar Mh = class extends ih {\n    constructor(t, e){\n        super(new Za(t, e), \"input_image\", \"norm_rect\", !0), this.j = {\n            classifications: []\n        }, Cn(t = this.h = new _o, 0, 1, e = new Cs);\n    }\n    get baseOptions() {\n        return Rn(this.h, Cs, 1);\n    }\n    set baseOptions(t) {\n        Cn(this.h, 0, 1, t);\n    }\n    o(t) {\n        return Cn(this.h, 0, 2, Po(t, Rn(this.h, ks, 2))), this.l(t);\n    }\n    ua(t, e) {\n        return this.j = {\n            classifications: []\n        }, eh(this, t, e), this.j;\n    }\n    va(t, e, n) {\n        return this.j = {\n            classifications: []\n        }, nh(this, t, n, e), this.j;\n    }\n    m() {\n        var t = new Di;\n        Ii(t, \"input_image\"), Ii(t, \"norm_rect\"), Ui(t, \"classifications\");\n        const e = new yi;\n        Wn(e, vo, this.h);\n        const n = new Li;\n        ki(n, \"mediapipe.tasks.vision.image_classifier.ImageClassifierGraph\"), xi(n, \"IMAGE:input_image\"), xi(n, \"NORM_RECT:norm_rect\"), Si(n, \"CLASSIFICATIONS:classifications\"), n.o(e), Oi(t, n), this.g.attachProtoListener(\"classifications\", (t, e)=>{\n            this.j = function(t) {\n                const e = {\n                    classifications: Pn(t, ps, 1).map((t)=>Co(Rn(t, Xi, 4)?.g() ?? [], Bn(Nn(t, 2), 0), jn(t, 3)))\n                };\n                return null != Fe(cn(t, 2)) && (e.timestampMs = Bn(Fe(cn(t, 2)), 0)), e;\n            }(ys(t)), ea(this, e);\n        }), this.g.attachEmptyPacketListener(\"classifications\", (t)=>{\n            ea(this, t);\n        }), t = t.g(), this.setGraph(new Uint8Array(t), !0);\n    }\n};\nMh.prototype.classifyForVideo = Mh.prototype.va, Mh.prototype.classify = Mh.prototype.ua, Mh.prototype.setOptions = Mh.prototype.o, Mh.createFromModelPath = function(t, e) {\n    return Qa(Mh, t, {\n        baseOptions: {\n            modelAssetPath: e\n        }\n    });\n}, Mh.createFromModelBuffer = function(t, e) {\n    return Qa(Mh, t, {\n        baseOptions: {\n            modelAssetBuffer: e\n        }\n    });\n}, Mh.createFromOptions = function(t, e) {\n    return Qa(Mh, t, e);\n};\nvar Ph = class extends ih {\n    constructor(t, e){\n        super(new Za(t, e), \"image_in\", \"norm_rect\", !0), this.h = new Eo, this.embeddings = {\n            embeddings: []\n        }, Cn(t = this.h, 0, 1, e = new Cs);\n    }\n    get baseOptions() {\n        return Rn(this.h, Cs, 1);\n    }\n    set baseOptions(t) {\n        Cn(this.h, 0, 1, t);\n    }\n    o(t) {\n        var e = this.h, n = Rn(this.h, Ss, 2);\n        return n = n ? n.clone() : new Ss, void 0 !== t.l2Normalize ? Vn(n, 1, t.l2Normalize) : \"l2Normalize\" in t && dn(n, 1), void 0 !== t.quantize ? Vn(n, 2, t.quantize) : \"quantize\" in t && dn(n, 2), Cn(e, 0, 2, n), this.l(t);\n    }\n    Ba(t, e) {\n        return eh(this, t, e), this.embeddings;\n    }\n    Ca(t, e, n) {\n        return nh(this, t, n, e), this.embeddings;\n    }\n    m() {\n        var t = new Di;\n        Ii(t, \"image_in\"), Ii(t, \"norm_rect\"), Ui(t, \"embeddings_out\");\n        const e = new yi;\n        Wn(e, wo, this.h);\n        const n = new Li;\n        ki(n, \"mediapipe.tasks.vision.image_embedder.ImageEmbedderGraph\"), xi(n, \"IMAGE:image_in\"), xi(n, \"NORM_RECT:norm_rect\"), Si(n, \"EMBEDDINGS:embeddings_out\"), n.o(e), Oi(t, n), this.g.attachProtoListener(\"embeddings_out\", (t, e)=>{\n            t = bs(t), this.embeddings = function(t) {\n                return {\n                    embeddings: Pn(t, Es, 1).map((t)=>{\n                        const e = {\n                            headIndex: Bn(Nn(t, 3), 0) ?? -1,\n                            headName: jn(t, 4) ?? \"\"\n                        };\n                        if (void 0 !== Fn(t, _s, xn(t, 1))) t = yn(t = Rn(t, _s, xn(t, 1)), 1, ve), e.floatEmbedding = t.slice();\n                        else {\n                            const n = new Uint8Array(0);\n                            e.quantizedEmbedding = Rn(t, vs, xn(t, 2))?.qa()?.h() ?? n;\n                        }\n                        return e;\n                    }),\n                    timestampMs: Bn(Fe(cn(t, 2)), 0)\n                };\n            }(t), ea(this, e);\n        }), this.g.attachEmptyPacketListener(\"embeddings_out\", (t)=>{\n            ea(this, t);\n        }), t = t.g(), this.setGraph(new Uint8Array(t), !0);\n    }\n};\nPh.cosineSimilarity = function(t, e) {\n    if (t.floatEmbedding && e.floatEmbedding) t = No(t.floatEmbedding, e.floatEmbedding);\n    else {\n        if (!t.quantizedEmbedding || !e.quantizedEmbedding) throw Error(\"Cannot compute cosine similarity between quantized and float embeddings.\");\n        t = No(Do(t.quantizedEmbedding), Do(e.quantizedEmbedding));\n    }\n    return t;\n}, Ph.prototype.embedForVideo = Ph.prototype.Ca, Ph.prototype.embed = Ph.prototype.Ba, Ph.prototype.setOptions = Ph.prototype.o, Ph.createFromModelPath = function(t, e) {\n    return Qa(Ph, t, {\n        baseOptions: {\n            modelAssetPath: e\n        }\n    });\n}, Ph.createFromModelBuffer = function(t, e) {\n    return Qa(Ph, t, {\n        baseOptions: {\n            modelAssetBuffer: e\n        }\n    });\n}, Ph.createFromOptions = function(t, e) {\n    return Qa(Ph, t, e);\n};\nvar Ch = class {\n    constructor(t, e, n){\n        this.confidenceMasks = t, this.categoryMask = e, this.qualityScores = n;\n    }\n    close() {\n        this.confidenceMasks?.forEach((t)=>{\n            t.close();\n        }), this.categoryMask?.close();\n    }\n};\nfunction Oh(t) {\n    t.categoryMask = void 0, t.confidenceMasks = void 0, t.qualityScores = void 0;\n}\nfunction Ih(t) {\n    try {\n        const e = new Ch(t.confidenceMasks, t.categoryMask, t.qualityScores);\n        if (!t.j) return e;\n        t.j(e);\n    } finally{\n        ia(t);\n    }\n}\nCh.prototype.close = Ch.prototype.close;\nvar Uh = class extends ih {\n    constructor(t, e){\n        super(new Za(t, e), \"image_in\", \"norm_rect\", !1), this.u = [], this.outputCategoryMask = !1, this.outputConfidenceMasks = !0, this.h = new xo, this.v = new To, Cn(this.h, 0, 3, this.v), Cn(t = this.h, 0, 1, e = new Cs);\n    }\n    get baseOptions() {\n        return Rn(this.h, Cs, 1);\n    }\n    set baseOptions(t) {\n        Cn(this.h, 0, 1, t);\n    }\n    o(t) {\n        return void 0 !== t.displayNamesLocale ? dn(this.h, 2, Me(t.displayNamesLocale)) : \"displayNamesLocale\" in t && dn(this.h, 2), \"outputCategoryMask\" in t && (this.outputCategoryMask = t.outputCategoryMask ?? !1), \"outputConfidenceMasks\" in t && (this.outputConfidenceMasks = t.outputConfidenceMasks ?? !0), super.l(t);\n    }\n    L() {\n        !function(t) {\n            const e = Pn(t.fa(), Li, 1).filter((t)=>jn(t, 1).includes(\"mediapipe.tasks.TensorsToSegmentationCalculator\"));\n            if (t.u = [], 1 < e.length) throw Error(\"The graph has more than one mediapipe.tasks.TensorsToSegmentationCalculator.\");\n            1 === e.length && (Rn(e[0], yi, 7)?.l()?.g() ?? new Map).forEach((e, n)=>{\n                t.u[Number(n)] = jn(e, 1);\n            });\n        }(this);\n    }\n    ga(t, e, n) {\n        const r = \"function\" != typeof e ? e : {};\n        return this.j = \"function\" == typeof e ? e : n, Oh(this), eh(this, t, r), Ih(this);\n    }\n    Na(t, e, n, r) {\n        const i = \"function\" != typeof n ? n : {};\n        return this.j = \"function\" == typeof n ? n : r, Oh(this), nh(this, t, i, e), Ih(this);\n    }\n    Fa() {\n        return this.u;\n    }\n    m() {\n        var t = new Di;\n        Ii(t, \"image_in\"), Ii(t, \"norm_rect\");\n        const e = new yi;\n        Wn(e, So, this.h);\n        const n = new Li;\n        ki(n, \"mediapipe.tasks.vision.image_segmenter.ImageSegmenterGraph\"), xi(n, \"IMAGE:image_in\"), xi(n, \"NORM_RECT:norm_rect\"), n.o(e), Oi(t, n), na(this, t), this.outputConfidenceMasks && (Ui(t, \"confidence_masks\"), Si(n, \"CONFIDENCE_MASKS:confidence_masks\"), ra(this, \"confidence_masks\"), this.g.da(\"confidence_masks\", (t, e)=>{\n            this.confidenceMasks = t.map((t)=>rh(this, t, !0, !this.j)), ea(this, e);\n        }), this.g.attachEmptyPacketListener(\"confidence_masks\", (t)=>{\n            this.confidenceMasks = [], ea(this, t);\n        })), this.outputCategoryMask && (Ui(t, \"category_mask\"), Si(n, \"CATEGORY_MASK:category_mask\"), ra(this, \"category_mask\"), this.g.W(\"category_mask\", (t, e)=>{\n            this.categoryMask = rh(this, t, !1, !this.j), ea(this, e);\n        }), this.g.attachEmptyPacketListener(\"category_mask\", (t)=>{\n            this.categoryMask = void 0, ea(this, t);\n        })), Ui(t, \"quality_scores\"), Si(n, \"QUALITY_SCORES:quality_scores\"), this.g.attachFloatVectorListener(\"quality_scores\", (t, e)=>{\n            this.qualityScores = t, ea(this, e);\n        }), this.g.attachEmptyPacketListener(\"quality_scores\", (t)=>{\n            this.categoryMask = void 0, ea(this, t);\n        }), t = t.g(), this.setGraph(new Uint8Array(t), !0);\n    }\n};\nUh.prototype.getLabels = Uh.prototype.Fa, Uh.prototype.segmentForVideo = Uh.prototype.Na, Uh.prototype.segment = Uh.prototype.ga, Uh.prototype.setOptions = Uh.prototype.o, Uh.createFromModelPath = function(t, e) {\n    return Qa(Uh, t, {\n        baseOptions: {\n            modelAssetPath: e\n        }\n    });\n}, Uh.createFromModelBuffer = function(t, e) {\n    return Qa(Uh, t, {\n        baseOptions: {\n            modelAssetBuffer: e\n        }\n    });\n}, Uh.createFromOptions = function(t, e) {\n    return Qa(Uh, t, e);\n};\nvar Dh = class {\n    constructor(t, e, n){\n        this.confidenceMasks = t, this.categoryMask = e, this.qualityScores = n;\n    }\n    close() {\n        this.confidenceMasks?.forEach((t)=>{\n            t.close();\n        }), this.categoryMask?.close();\n    }\n};\nDh.prototype.close = Dh.prototype.close;\nvar Nh = class extends zn {\n    constructor(t){\n        super(t);\n    }\n}, Bh = [\n    0,\n    jr,\n    -2\n], Gh = [\n    0,\n    Or,\n    -3,\n    Hr\n], jh = [\n    0,\n    Or,\n    -3,\n    Hr,\n    Or,\n    -1\n], Vh = [\n    0,\n    jh\n], Xh = [\n    0,\n    Vh,\n    Bh\n], Hh = [\n    0,\n    jh,\n    Bh\n], Wh = [\n    0,\n    jh,\n    jr,\n    -1\n], zh = [\n    0,\n    Wh,\n    Bh\n], Kh = [\n    0,\n    Or,\n    -3,\n    Hr,\n    Bh,\n    -1\n], Yh = [\n    0,\n    Or,\n    -3,\n    Hr,\n    ti\n], $h = class extends zn {\n    constructor(t){\n        super(t);\n    }\n}, qh = [\n    0,\n    Or,\n    -1,\n    Hr\n], Jh = class extends zn {\n    constructor(){\n        super();\n    }\n};\nJh.B = [\n    1\n];\nvar Zh = class extends zn {\n    constructor(t){\n        super(t);\n    }\n}, Qh = [\n    1,\n    2,\n    3,\n    4,\n    5,\n    6,\n    7,\n    8,\n    9,\n    10,\n    14,\n    15\n], tc = [\n    0,\n    Qh,\n    Jr,\n    jh,\n    Jr,\n    Hh,\n    Jr,\n    Vh,\n    Jr,\n    Xh,\n    Jr,\n    qh,\n    Jr,\n    Yh,\n    Jr,\n    Gh,\n    Jr,\n    [\n        0,\n        Yr,\n        Or,\n        -2,\n        Hr,\n        jr,\n        Hr,\n        -1,\n        2,\n        Or,\n        Bh\n    ],\n    Jr,\n    Wh,\n    Jr,\n    zh,\n    Or,\n    Bh,\n    Yr,\n    Jr,\n    Kh,\n    Jr,\n    [\n        0,\n        Cr,\n        qh\n    ]\n], ec = [\n    0,\n    Yr,\n    jr,\n    -1,\n    Hr\n], nc = class extends zn {\n    constructor(){\n        super();\n    }\n};\nnc.B = [\n    1\n], nc.prototype.g = si([\n    0,\n    Cr,\n    tc,\n    Yr,\n    ec\n]);\nvar rc = class extends ih {\n    constructor(t, e){\n        super(new Za(t, e), \"image_in\", \"norm_rect_in\", !1), this.outputCategoryMask = !1, this.outputConfidenceMasks = !0, this.h = new xo, this.v = new To, Cn(this.h, 0, 3, this.v), Cn(t = this.h, 0, 1, e = new Cs);\n    }\n    get baseOptions() {\n        return Rn(this.h, Cs, 1);\n    }\n    set baseOptions(t) {\n        Cn(this.h, 0, 1, t);\n    }\n    o(t) {\n        return \"outputCategoryMask\" in t && (this.outputCategoryMask = t.outputCategoryMask ?? !1), \"outputConfidenceMasks\" in t && (this.outputConfidenceMasks = t.outputConfidenceMasks ?? !0), super.l(t);\n    }\n    ga(t, e, n, r) {\n        const i = \"function\" != typeof n ? n : {};\n        this.j = \"function\" == typeof n ? n : r, this.qualityScores = this.categoryMask = this.confidenceMasks = void 0, n = this.J + 1, r = new nc;\n        const s = new Zh;\n        var o = new Nh;\n        if (Xn(o, 1, 255), Cn(s, 0, 12, o), e.keypoint && e.scribble) throw Error(\"Cannot provide both keypoint and scribble.\");\n        if (e.keypoint) {\n            var a = new $h;\n            Vn(a, 3, !0), Hn(a, 1, e.keypoint.x), Hn(a, 2, e.keypoint.y), On(s, 5, Qh, a);\n        } else {\n            if (!e.scribble) throw Error(\"Must provide either a keypoint or a scribble.\");\n            for (a of (o = new Jh, e.scribble))Vn(e = new $h, 3, !0), Hn(e, 1, a.x), Hn(e, 2, a.y), Dn(o, 1, $h, e);\n            On(s, 15, Qh, o);\n        }\n        Dn(r, 1, Zh, s), this.g.addProtoToStream(r.g(), \"drishti.RenderData\", \"roi_in\", n), eh(this, t, i);\n        t: {\n            try {\n                const t = new Dh(this.confidenceMasks, this.categoryMask, this.qualityScores);\n                if (!this.j) {\n                    var h = t;\n                    break t;\n                }\n                this.j(t);\n            } finally{\n                ia(this);\n            }\n            h = void 0;\n        }\n        return h;\n    }\n    m() {\n        var t = new Di;\n        Ii(t, \"image_in\"), Ii(t, \"roi_in\"), Ii(t, \"norm_rect_in\");\n        const e = new yi;\n        Wn(e, So, this.h);\n        const n = new Li;\n        ki(n, \"mediapipe.tasks.vision.interactive_segmenter.InteractiveSegmenterGraph\"), xi(n, \"IMAGE:image_in\"), xi(n, \"ROI:roi_in\"), xi(n, \"NORM_RECT:norm_rect_in\"), n.o(e), Oi(t, n), na(this, t), this.outputConfidenceMasks && (Ui(t, \"confidence_masks\"), Si(n, \"CONFIDENCE_MASKS:confidence_masks\"), ra(this, \"confidence_masks\"), this.g.da(\"confidence_masks\", (t, e)=>{\n            this.confidenceMasks = t.map((t)=>rh(this, t, !0, !this.j)), ea(this, e);\n        }), this.g.attachEmptyPacketListener(\"confidence_masks\", (t)=>{\n            this.confidenceMasks = [], ea(this, t);\n        })), this.outputCategoryMask && (Ui(t, \"category_mask\"), Si(n, \"CATEGORY_MASK:category_mask\"), ra(this, \"category_mask\"), this.g.W(\"category_mask\", (t, e)=>{\n            this.categoryMask = rh(this, t, !1, !this.j), ea(this, e);\n        }), this.g.attachEmptyPacketListener(\"category_mask\", (t)=>{\n            this.categoryMask = void 0, ea(this, t);\n        })), Ui(t, \"quality_scores\"), Si(n, \"QUALITY_SCORES:quality_scores\"), this.g.attachFloatVectorListener(\"quality_scores\", (t, e)=>{\n            this.qualityScores = t, ea(this, e);\n        }), this.g.attachEmptyPacketListener(\"quality_scores\", (t)=>{\n            this.categoryMask = void 0, ea(this, t);\n        }), t = t.g(), this.setGraph(new Uint8Array(t), !0);\n    }\n};\nrc.prototype.segment = rc.prototype.ga, rc.prototype.setOptions = rc.prototype.o, rc.createFromModelPath = function(t, e) {\n    return Qa(rc, t, {\n        baseOptions: {\n            modelAssetPath: e\n        }\n    });\n}, rc.createFromModelBuffer = function(t, e) {\n    return Qa(rc, t, {\n        baseOptions: {\n            modelAssetBuffer: e\n        }\n    });\n}, rc.createFromOptions = function(t, e) {\n    return Qa(rc, t, e);\n};\nvar ic = class extends ih {\n    constructor(t, e){\n        super(new Za(t, e), \"input_frame_gpu\", \"norm_rect\", !1), this.j = {\n            detections: []\n        }, Cn(t = this.h = new Lo, 0, 1, e = new Cs);\n    }\n    get baseOptions() {\n        return Rn(this.h, Cs, 1);\n    }\n    set baseOptions(t) {\n        Cn(this.h, 0, 1, t);\n    }\n    o(t) {\n        return void 0 !== t.displayNamesLocale ? dn(this.h, 2, Me(t.displayNamesLocale)) : \"displayNamesLocale\" in t && dn(this.h, 2), void 0 !== t.maxResults ? Xn(this.h, 3, t.maxResults) : \"maxResults\" in t && dn(this.h, 3), void 0 !== t.scoreThreshold ? Hn(this.h, 4, t.scoreThreshold) : \"scoreThreshold\" in t && dn(this.h, 4), void 0 !== t.categoryAllowlist ? Tn(this.h, 5, t.categoryAllowlist) : \"categoryAllowlist\" in t && dn(this.h, 5), void 0 !== t.categoryDenylist ? Tn(this.h, 6, t.categoryDenylist) : \"categoryDenylist\" in t && dn(this.h, 6), this.l(t);\n    }\n    F(t, e) {\n        return this.j = {\n            detections: []\n        }, eh(this, t, e), this.j;\n    }\n    G(t, e, n) {\n        return this.j = {\n            detections: []\n        }, nh(this, t, n, e), this.j;\n    }\n    m() {\n        var t = new Di;\n        Ii(t, \"input_frame_gpu\"), Ii(t, \"norm_rect\"), Ui(t, \"detections\");\n        const e = new yi;\n        Wn(e, Fo, this.h);\n        const n = new Li;\n        ki(n, \"mediapipe.tasks.vision.ObjectDetectorGraph\"), xi(n, \"IMAGE:input_frame_gpu\"), xi(n, \"NORM_RECT:norm_rect\"), Si(n, \"DETECTIONS:detections\"), n.o(e), Oi(t, n), this.g.attachProtoVectorListener(\"detections\", (t, e)=>{\n            for (const e of t)t = ns(e), this.j.detections.push(Oo(t));\n            ea(this, e);\n        }), this.g.attachEmptyPacketListener(\"detections\", (t)=>{\n            ea(this, t);\n        }), t = t.g(), this.setGraph(new Uint8Array(t), !0);\n    }\n};\nic.prototype.detectForVideo = ic.prototype.G, ic.prototype.detect = ic.prototype.F, ic.prototype.setOptions = ic.prototype.o, ic.createFromModelPath = async function(t, e) {\n    return Qa(ic, t, {\n        baseOptions: {\n            modelAssetPath: e\n        }\n    });\n}, ic.createFromModelBuffer = function(t, e) {\n    return Qa(ic, t, {\n        baseOptions: {\n            modelAssetBuffer: e\n        }\n    });\n}, ic.createFromOptions = function(t, e) {\n    return Qa(ic, t, e);\n};\nvar sc = class {\n    constructor(t, e, n){\n        this.landmarks = t, this.worldLandmarks = e, this.segmentationMasks = n;\n    }\n    close() {\n        this.segmentationMasks?.forEach((t)=>{\n            t.close();\n        });\n    }\n};\nfunction oc(t) {\n    t.landmarks = [], t.worldLandmarks = [], t.segmentationMasks = void 0;\n}\nfunction ac(t) {\n    try {\n        const e = new sc(t.landmarks, t.worldLandmarks, t.segmentationMasks);\n        if (!t.j) return e;\n        t.j(e);\n    } finally{\n        ia(t);\n    }\n}\nsc.prototype.close = sc.prototype.close;\nvar hc = class extends ih {\n    constructor(t, e){\n        super(new Za(t, e), \"image_in\", \"norm_rect\", !1), this.landmarks = [], this.worldLandmarks = [], this.outputSegmentationMasks = !1, Cn(t = this.h = new Ro, 0, 1, e = new Cs), this.D = new go, Cn(this.h, 0, 3, this.D), this.v = new fo, Cn(this.h, 0, 2, this.v), Xn(this.v, 4, 1), Hn(this.v, 2, .5), Hn(this.D, 2, .5), Hn(this.h, 4, .5);\n    }\n    get baseOptions() {\n        return Rn(this.h, Cs, 1);\n    }\n    set baseOptions(t) {\n        Cn(this.h, 0, 1, t);\n    }\n    o(t) {\n        return \"numPoses\" in t && Xn(this.v, 4, t.numPoses ?? 1), \"minPoseDetectionConfidence\" in t && Hn(this.v, 2, t.minPoseDetectionConfidence ?? .5), \"minTrackingConfidence\" in t && Hn(this.h, 4, t.minTrackingConfidence ?? .5), \"minPosePresenceConfidence\" in t && Hn(this.D, 2, t.minPosePresenceConfidence ?? .5), \"outputSegmentationMasks\" in t && (this.outputSegmentationMasks = t.outputSegmentationMasks ?? !1), this.l(t);\n    }\n    F(t, e, n) {\n        const r = \"function\" != typeof e ? e : {};\n        return this.j = \"function\" == typeof e ? e : n, oc(this), eh(this, t, r), ac(this);\n    }\n    G(t, e, n, r) {\n        const i = \"function\" != typeof n ? n : {};\n        return this.j = \"function\" == typeof n ? n : r, oc(this), nh(this, t, i, e), ac(this);\n    }\n    m() {\n        var t = new Di;\n        Ii(t, \"image_in\"), Ii(t, \"norm_rect\"), Ui(t, \"normalized_landmarks\"), Ui(t, \"world_landmarks\"), Ui(t, \"segmentation_masks\");\n        const e = new yi;\n        Wn(e, Mo, this.h);\n        const n = new Li;\n        ki(n, \"mediapipe.tasks.vision.pose_landmarker.PoseLandmarkerGraph\"), xi(n, \"IMAGE:image_in\"), xi(n, \"NORM_RECT:norm_rect\"), Si(n, \"NORM_LANDMARKS:normalized_landmarks\"), Si(n, \"WORLD_LANDMARKS:world_landmarks\"), n.o(e), Oi(t, n), na(this, t), this.g.attachProtoVectorListener(\"normalized_landmarks\", (t, e)=>{\n            this.landmarks = [];\n            for (const e of t)t = us(e), this.landmarks.push(Io(t));\n            ea(this, e);\n        }), this.g.attachEmptyPacketListener(\"normalized_landmarks\", (t)=>{\n            this.landmarks = [], ea(this, t);\n        }), this.g.attachProtoVectorListener(\"world_landmarks\", (t, e)=>{\n            this.worldLandmarks = [];\n            for (const e of t)t = os(e), this.worldLandmarks.push(Uo(t));\n            ea(this, e);\n        }), this.g.attachEmptyPacketListener(\"world_landmarks\", (t)=>{\n            this.worldLandmarks = [], ea(this, t);\n        }), this.outputSegmentationMasks && (Si(n, \"SEGMENTATION_MASK:segmentation_masks\"), ra(this, \"segmentation_masks\"), this.g.da(\"segmentation_masks\", (t, e)=>{\n            this.segmentationMasks = t.map((t)=>rh(this, t, !0, !this.j)), ea(this, e);\n        }), this.g.attachEmptyPacketListener(\"segmentation_masks\", (t)=>{\n            this.segmentationMasks = [], ea(this, t);\n        })), t = t.g(), this.setGraph(new Uint8Array(t), !0);\n    }\n};\nhc.prototype.detectForVideo = hc.prototype.G, hc.prototype.detect = hc.prototype.F, hc.prototype.setOptions = hc.prototype.o, hc.createFromModelPath = function(t, e) {\n    return Qa(hc, t, {\n        baseOptions: {\n            modelAssetPath: e\n        }\n    });\n}, hc.createFromModelBuffer = function(t, e) {\n    return Qa(hc, t, {\n        baseOptions: {\n            modelAssetBuffer: e\n        }\n    });\n}, hc.createFromOptions = function(t, e) {\n    return Qa(hc, t, e);\n}, hc.POSE_CONNECTIONS = xh;\n //# sourceMappingURL=vision_bundle_mjs.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@mediapipe+tasks-vision@0.10.14/node_modules/@mediapipe/tasks-vision/vision_bundle.mjs\n");

/***/ })

};
;